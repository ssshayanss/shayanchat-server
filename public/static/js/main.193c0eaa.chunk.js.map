{"version":3,"sources":["components/loading/index.js","services/constants.js","services/auth.js","services/toaster.js","redux/setting/types.js","redux/setting/actions.js","redux/user/types.js","redux/user/actions.js","redux/rooms/types.js","redux/rooms/actions.js","redux/room/types.js","redux/room/actions.js","redux/members/types.js","redux/members/actions.js","redux/messages/types.js","redux/messages/actions.js","components/form/input.js","components/form/index.js","components/signin/index.js","services/validate.js","components/signup/index.js","components/menu/index.js","components/searchBox/index.js","components/chatList/chatListHeader.js","components/chatList/chatItem.js","components/chatList/index.js","components/profile/index.js","components/chatContent/header.js","components/chatContent/message.js","components/chatContent/messages.js","components/chatContent/body.js","components/chatContent/footer.js","components/chatContent/index.js","components/modal/createRoom.js","components/modal/editProfile.js","components/modal/changePassword.js","components/roomInfo/member.js","components/roomInfo/index.js","components/modal/editGroup.js","components/modal/index.js","pages/root.js","pages/auth.js","pages/chat.js","redux/setting/reducer.js","redux/user/reducer.js","redux/rooms/reducer.js","redux/room/reducer.js","redux/members/reducer.js","redux/messages/reducer.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["Loading","className","Spinner","animation","variant","ENDPOINT","namePattern","emailPattern","usernamePattern","imageMaxSize","signup","data","formData","FormData","append","name","email","username","password","profilePicture","axios","post","signin","verifyUser","a","token","localStorage","getItem","get","headers","Authorization","success","user","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","makeToast","type","message","fire","icon","title","SET_LOADING_PAGE","SET_LOADING_FORM","SELECT_MENU_ITEM","SET_SHOW_MODAL","SET_MODAL_CONTENT","SET_SHOW_CHATS","SET_IS_REGISTERED","SET_SEND_MESSAGE_TYPE","SET_EDIT_MESSAGE_ID","SET_EDIT_MESSAGE_TEXT","SET_WINDOW_INNERWIDTH","SET_SOCKET","setLoadingPage","isLoading","payload","setLoadingForm","selectMenuItem","itemName","setShowModal","isShow","setModalContent","content","setShowChats","setIsRegistered","isRegister","setSendMessageType","typeNumber","setSocket","socket","SET_USER_DATA","setUserData","userData","SEND_REQUEST","REQUEST_SUCCESS","REQUEST_FAILURE","UPDATE_ROOMS","getRooms","search","dispatch","emit","rooms","error","requestSuccess","requestFailure","RESET_ROOM","UPDATE_ROOM","resetRoom","getRoom","id","room","getRoomMembers","members","NEW_MESSAGE","UPDATE_MESSAGE","DELETE_MESSAGE","getMessages","roomId","messages","addNewMessage","newMessage","changeMessage","updateMessage","Input","item","useState","showPassword","setShowPassword","RegExp","test","placeholder","ref","fieldRef","accept","onClick","MyForm","items","submitHandler","loading","useSelector","state","setting","loadingForm","Form","onSubmit","map","index","Button","disabled","SigninForm","useDispatch","usernameRef","useRef","passwordRef","remindMeRef","useEffect","current","value","checked","Card","e","preventDefault","trim","length","validateSigninReq","setItem","removeItem","SignupForm","nameRef","emailRef","confirmPasswordRef","profilePictureRef","confirmPassword","files","size","Math","floor","validateSignupReq","MenuBar","history","selectedMenuItem","disconnect","push","SearchBox","searchRef","onChange","ChatListHeader","ChatItem","active","src","roomPicture","alt","ChatList","currentRoom","Profile","show","setShow","window","confirm","ChatContentHeader","windowInnerWidth","Message","isOwner","sender","text","date","split","style","cursor","editMessageText","editMessageId","messageId","Messages","ChatContentBody","chatBodyRef","sendMessageType","on","deleteMessage","toString","scroll","scrollHeight","off","Object","keys","ChatContentFooter","messageRef","sendMessage","isJoined","onKeyPress","key","ChatContent","CreateNewRoom","roomNameRef","roomPictureRef","roomName","mimetype","validateCreateRoomReq","EditProfile","validateEditProfileReq","ChangePassword","oldPasswordRef","newPasswordRef","confirmNewPasswordRef","oldPassword","newPassword","confirmNewPassword","validateChangePasswordReq","Member","member","isOnline","lastSeen","RoomInfo","EditGroup","validateEditGroupReq","MyModal","showModal","modalContent","Modal","onHide","centered","RootPage","then","AuthPage","loadingPage","setTimeout","response","ChatPage","showChats","handleWindowSize","io","query","removeEventListener","updateRoom","updateRooms","Row","Col","lg","md","initialState","innerWidth","settingReducer","action","userReducer","roomsReducer","roomIndex","findIndex","roomReducer","messagesReducer","newMessageDate","updateMessageDate","messageIndex","deleteMessageDate","deleteMessageIndex","splice","rootReducer","combineReducers","membersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.193c0eaa.chunk.js","sourcesContent":["import { Spinner } from 'react-bootstrap';\r\n\r\nexport const Loading = () => (\r\n    <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n        <Spinner animation=\"border\" variant=\"secondary\" />\r\n    </div>\r\n);","export const ENDPOINT = 'https://shayanchat.herokuapp.com/';\r\n// export const ENDPOINT = 'http://localhost:3000/';\r\nexport const namePattern = /^[A-Za-z\\u0600-\\u06FF\\s]+$/;\r\nexport const emailPattern =/^\\S+@\\S+.\\S+$/;\r\nexport const usernamePattern = /^[A-Za-z][A-Za-z0-9]*$/;\r\nexport const imageMaxSize = 1048576;","import axios from 'axios';\r\n\r\nexport const signup = data => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"email\", data.email);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"password\", data.password);\r\n    formData.append(\"profilePicture\", data.profilePicture);\r\n    return axios.post('/api/auth/signup', formData);\r\n};\r\n\r\nexport const signin = data => axios.post('/api/auth/signin', data);\r\n\r\nexport const verifyUser = async () => {\r\n    try {\r\n        const token = localStorage.getItem('SCA_TOKEN');\r\n        if(token) {\r\n            const { data } = await axios.get('/api/auth', { headers: { Authorization: `Bearer ${token}` } });\r\n            if(data.success) return { success: true, user: data.user };\r\n            else return { success: false };\r\n        } else return { success: false };\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n};","import Swal from 'sweetalert2';\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 5000,\r\n    timerProgressBar: true,\r\n    didOpen: toast => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer);\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n    }\r\n});\r\n\r\nexport const makeToast = (type, message) => {\r\n    Toast.fire({\r\n        icon: type,\r\n        title: message\r\n    });\r\n};","export const SET_LOADING_PAGE = '[SETTING]SET_LOADING_PAGE';\r\nexport const SET_LOADING_FORM = '[SETTING]SET_LOADING_FORM';\r\nexport const SELECT_MENU_ITEM = '[SETTING]SELECT_MENU_ITEM';\r\nexport const SET_SHOW_MODAL = '[SETTING]SET_SHOW_MODAL';\r\nexport const SET_MODAL_CONTENT = '[SETTING]SET_MODAL_CONTENT';\r\nexport const SET_SHOW_CHATS = '[SETTING]SET_SHOW_CHATS';\r\nexport const SET_IS_REGISTERED = '[SETTING]SET_IS_REGISTERED';\r\nexport const SET_SEND_MESSAGE_TYPE = '[SETTING]SET_SEND_MESSAGE_TYPE';\r\nexport const SET_EDIT_MESSAGE_ID = '[SETTING]SET_EDIT_MESSAGE_ID';\r\nexport const SET_EDIT_MESSAGE_TEXT = '[SETTING]SET_EDIT_MESSAGE_TEXT';\r\nexport const SET_WINDOW_INNERWIDTH = '[SETTING]SET_WINDOW_INNERWIDTH';\r\nexport const SET_SOCKET = '[SETTING]SET_SOCKET';","import { SET_LOADING_PAGE, SET_LOADING_FORM, SELECT_MENU_ITEM, SET_SHOW_MODAL, SET_MODAL_CONTENT, SET_SHOW_CHATS, SET_IS_REGISTERED, SET_SEND_MESSAGE_TYPE, SET_EDIT_MESSAGE_ID, SET_EDIT_MESSAGE_TEXT, SET_WINDOW_INNERWIDTH, SET_SOCKET } from './types';\r\n\r\nexport const setLoadingPage = isLoading => {\r\n    return { type: SET_LOADING_PAGE, payload: isLoading };\r\n};\r\n\r\nexport const setLoadingForm = isLoading => {\r\n    return { type: SET_LOADING_FORM, payload: isLoading };\r\n};\r\n\r\nexport const selectMenuItem = itemName => {\r\n    return { type: SELECT_MENU_ITEM, payload: itemName };\r\n};\r\n\r\nexport const setShowModal = isShow => {\r\n    return { type: SET_SHOW_MODAL, payload: isShow };\r\n};\r\n\r\nexport const setModalContent = content => {\r\n    return { type: SET_MODAL_CONTENT, payload: content };\r\n};\r\n\r\nexport const setShowChats = isShow => {\r\n    return { type: SET_SHOW_CHATS, payload: isShow };\r\n};\r\n\r\nexport const setIsRegistered = isRegister => {\r\n    return { type: SET_IS_REGISTERED, payload: isRegister };\r\n};\r\n\r\nexport const setSendMessageType = typeNumber => {\r\n    return { type: SET_SEND_MESSAGE_TYPE, payload: typeNumber };\r\n};\r\n\r\nexport const setEditMessageId = editMessageId => {\r\n    return { type: SET_EDIT_MESSAGE_ID, payload: editMessageId };\r\n};\r\n\r\nexport const setEditMessageText = editMessageText => {\r\n    return { type: SET_EDIT_MESSAGE_TEXT, payload: editMessageText };\r\n};\r\n\r\nexport const setInnerWidth = () => {\r\n    return { type: SET_WINDOW_INNERWIDTH };\r\n};\r\n\r\nexport const setSocket = socket => {\r\n    return { type: SET_SOCKET, payload: socket };\r\n};\r\n","export const SET_USER_DATA = '[USER]SET_USER_DATA';","import { SET_USER_DATA } from './types';\r\n\r\nexport const setUserData = userData => {\r\n    return { type: SET_USER_DATA, payload: userData };\r\n};","export const SEND_REQUEST = '[ROOMS]SEND_REQUEST'\r\nexport const REQUEST_SUCCESS = '[ROOMS]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[ROOMS]REQUEST_FAILURE';\r\nexport const UPDATE_ROOMS = '[ROOMS]UPDATE_ROOMS';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, UPDATE_ROOMS } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = rooms => {\r\n    return { type: REQUEST_SUCCESS, payload: rooms };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getRooms = (socket, search) => {\r\n    return dispatch => {\r\n        const data = (search && search !== '') ? search : {};\r\n        dispatch(sendRequest());\r\n        socket.emit('get rooms', data, ({ success, rooms, error }) => {\r\n            if(success) dispatch(requestSuccess(rooms));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateRooms = room => {\r\n    return { type: UPDATE_ROOMS, payload: room };\r\n};","export const SEND_REQUEST = '[ROOM]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[ROOM]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[ROOM]REQUEST_FAILURE';\r\nexport const RESET_ROOM = '[ROOM]RESET_ROOM';\r\nexport const UPDATE_ROOM = '[ROOM]UPDATE_ROOM';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, RESET_ROOM, UPDATE_ROOM } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = room => {\r\n    return { type: REQUEST_SUCCESS, payload: room };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const resetRoom = () => {\r\n    return { type: RESET_ROOM };\r\n};\r\n\r\nexport const getRoom = (socket, id) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get room', { id }, ({ success, room, error }) => {\r\n            if(success) dispatch(requestSuccess(room));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateRoom = room => {\r\n    return { type: UPDATE_ROOM, payload: room };\r\n};","export const SEND_REQUEST = '[MEMBERS]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[MEMBERS]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[MEMBERS]REQUEST_FAILURE';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = members => {\r\n    return { type: REQUEST_SUCCESS, payload: members };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getRoomMembers = (socket, id) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get room members', { id }, ({ success, members, error }) => {\r\n            if(success) dispatch(requestSuccess(members));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};","export const SEND_REQUEST = '[MESSAGES]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[MESSAGES]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[MESSAGES]REQUEST_FAILURE';\r\nexport const NEW_MESSAGE = '[MESSAGES]NEW_MESSAGE';\r\nexport const UPDATE_MESSAGE = '[MESSAGES]UPDATE_MESSAGE';\r\nexport const DELETE_MESSAGE = '[MESSAGES]DELETE_MESSAGE';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, NEW_MESSAGE, UPDATE_MESSAGE, DELETE_MESSAGE } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = messages => {\r\n    return { type: REQUEST_SUCCESS, payload: messages };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getMessages = (socket, roomId) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get messages', { roomId }, ({ success, messages, error }) => {\r\n            if(success) dispatch(requestSuccess(messages));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const addNewMessage = newMessage => {\r\n    return { type: NEW_MESSAGE, payload: newMessage };\r\n};\r\n\r\nexport const changeMessage = updateMessage => {\r\n    return { type: UPDATE_MESSAGE, payload: updateMessage };\r\n};\r\n\r\nexport const removeMessage = deleteMessageId => {\r\n    return { type: DELETE_MESSAGE, payload: deleteMessageId };\r\n};","import { useState } from 'react';\r\nimport { FaUser, FaGlobe, FaAt, FaPen, FaKey, FaFileImage, FaEye, FaEyeSlash } from 'react-icons/fa';\r\n\r\nconst Input = ({ item }) => {\r\n    \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    \r\n    return (\r\n        <div className={ item.type === 'checkbox' ? \"checkBox\" : \"formGroup\" }>\r\n            <span className=\"inputIcon\" title={item.title}>\r\n                { item.name === 'name' && <FaUser /> }\r\n                { item.name === 'email' && <FaGlobe /> }\r\n                { item.name === 'username' && <FaAt /> }\r\n                { item.name === 'roomName' && <FaPen /> }\r\n                { new RegExp('password', 'i').test(item.name) && <FaKey /> }\r\n                { new RegExp('picture', 'i').test(item.name) && <FaFileImage /> }\r\n            </span>\r\n            <input \r\n                className={ \r\n                    item.type === 'file' \r\n                        ? \"input file\" \r\n                        : item.type === 'checkbox' ? \"ml-2\" : \"input\" \r\n                } \r\n                type={\r\n                    new RegExp('password', 'i').test(item.name)\r\n                        ? showPassword ? \"text\" : \"password\"\r\n                        : item.type\r\n                } \r\n                placeholder={item.placeholder} \r\n                ref={item.fieldRef}\r\n                accept={ item.type === 'file' && new RegExp('picture', 'i').test(item.name) ? \"image/*\" : null }\r\n            />\r\n            { \r\n                new RegExp('password', 'i').test(item.name)\r\n                    ? showPassword \r\n                        ? <FaEye className=\"eyeIcon\" onClick={() => setShowPassword(false)} /> \r\n                        : <FaEyeSlash className=\"eyeIcon\" onClick={() => setShowPassword(true)} />\r\n                    : null \r\n            }\r\n            { item.type === 'checkbox' &&  <label className=\"lbl\">{item.placeholder}</label> }\r\n        </div>\r\n    );\r\n};\r\n    \r\nexport default Input;","import { useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport './form.css';\r\nimport Input from './input';\r\n\r\nconst MyForm = ({ name, items, submitHandler }) => {\r\n    \r\n    const loading = useSelector(state => state.setting.loadingForm);\r\n\r\n    return (\r\n        <Form className=\"d-flex flex-column\" onSubmit={submitHandler}>\r\n            {\r\n                items.map((item, index) => {\r\n                    return <Input key={index} item={item} />\r\n                })\r\n            }\r\n            <Button type=\"submit\" disabled={loading ? \"disabled\" : \"\"}>{name}</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default MyForm;","import { useRef, useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { validateSigninReq, makeToast } from '../../services';\r\nimport { setIsRegistered } from '../../redux';\r\nimport MyForm from '../form';\r\n\r\nexport const SigninForm = ({ submitHandler }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const usernameRef = useRef('');\r\n    const passwordRef = useRef('');\r\n    const remindMeRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const username = localStorage.getItem('SCA_USERNAME');\r\n        const password = localStorage.getItem('SCA_PASSWORD');\r\n        if(username && password) {\r\n            usernameRef.current.value = username;\r\n            passwordRef.current.value = password;\r\n            remindMeRef.current.checked = true;\r\n        }\r\n    }, []);\r\n\r\n    const signin = e => {\r\n        e.preventDefault();\r\n        const data = { username: usernameRef.current.value.trim(), password: passwordRef.current.value.trim() };\r\n        const { success, message } = validateSigninReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            if(remindMeRef.current.checked) {\r\n                localStorage.setItem('SCA_USERNAME', data.username);\r\n                localStorage.setItem('SCA_PASSWORD', data.password);\r\n            } else {\r\n                localStorage.removeItem('SCA_USERNAME');\r\n                localStorage.removeItem('SCA_PASSWORD');\r\n            }\r\n            submitHandler(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"auth-card\">\r\n                <MyForm \r\n                    name=\"ورود\"\r\n                    items={[\r\n                        { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef },\r\n                        { name: 'password', type: 'password', title: 'رمزعبور', placeholder: 'رمزعبور خود را وارد کنید', fieldRef: passwordRef },\r\n                        { name: 'remindMe', type: 'checkbox', placeholder: 'من را به خاطر بسپار', fieldRef: remindMeRef }\r\n                    ]}\r\n                    submitHandler={signin}\r\n                />\r\n                <div className=\"formActions\">\r\n                    <span className=\"formAction ml-1\">بازیابی رمزعبور</span>\r\n                    /\r\n                    <span className=\"formAction mr-1\" onClick={() => dispatch(setIsRegistered(false))}>ثبت‌نام</span>\r\n                </div>\r\n            </Card>          \r\n        </div>\r\n    );\r\n};","import { namePattern, emailPattern, usernamePattern, imageMaxSize } from './constants';\r\n\r\nexport const validateSignupReq = data => {\r\n    if(data.name === '') return { success: false, message: 'نام خود را وارد کنید' };\r\n    else if(!namePattern.test(data.name) || !(data.name.length>=3)) \r\n        return { success: false, message: 'لطفا نام خود را به صورت صحیح وارد کنید' };\r\n    \r\n    else if(data.email === '') return { success: false, message: 'ایمیل خود را وارد کنید' };\r\n    else if(!emailPattern.test(data.email)) \r\n        return { success: false, message: 'لطفا یک ایمیل معتبر وارد کنید' };\r\n    \r\n    else if(data.username === '') return { success: false, message: 'نام‌کاربری خود را وارد کنید' };\r\n    else if(!usernamePattern.test(data.username)) \r\n        return { success: false, message: 'نام‌کاربری می‌تواند شامل حروف لاتین و اعداد باشد' };\r\n    \r\n    else if(data.password === '') return { success: false, message: 'رمزعبور خود را وارد کنید' };\r\n    else if(data.password.length<8) \r\n        return { success: false, message: 'رمزعبور باید حداقل شامل 8 کاراکتر باشد' };\r\n    \r\n    else if(data.confirmPassword !== data.password) return { success: false, message: 'رمزعبور و تکرار آن یکسان نیست' };\r\n    \r\n    else if(data.profilePicture && !(data.profilePicture.type === 'image/jpeg' || data.profilePicture.type === 'image/jpg' || data.profilePicture.type === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.profilePicture && data.profilePicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateSigninReq = data => {\r\n    if(data.username === '') return { success: false, message: 'نام‌کاربری خود را وارد کنید' };\r\n    else if(!usernamePattern.test(data.username)) return { success: false, message: 'نام‌کاربری یا رمزعبور نامعتبر است' };\r\n    else if(data.password === '') return { success: false, message: 'رمزعبور خود را وارد کنید' };\r\n    else if(data.password.length<8) return { success: false, message: 'نام‌کاربری یا رمزعبور نامعتبر است' };\r\n    else return { success: true }\r\n};\r\n\r\nexport const validateCreateRoomReq = data => {\r\n    if(data.roomName === '') return { success: false, message: 'نام گروه را وارد کنید' };\r\n    \r\n    else if(data.roomPicture.data && !(data.roomPicture.mimetype === 'image/jpeg' || data.roomPicture.mimetype === 'image/jpg' || data.roomPicture.mimetype === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.roomPicture.data && data.roomPicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateEditProfileReq = data => {\r\n    if( (data.name !== '') && (!namePattern.test(data.name) || !(data.name.length>=3))) \r\n        return { success: false, message: 'لطفا نام خود را به صورت صحیح وارد کنید' };\r\n\r\n    else if( data.email !== '' && !emailPattern.test(data.email) ) \r\n        return { success: false, message: 'لطفا یک ایمیل معتبر وارد کنید' };\r\n\r\n    else if( data.username !== '' && !usernamePattern.test(data.username) ) \r\n        return { success: false, message: 'نام‌کاربری می‌تواند شامل حروف لاتین و اعداد باشد' };\r\n    \r\n    else return { success: true };\r\n};\r\n\r\nexport const validateChangePasswordReq = data => {\r\n    if(data.oldPassword === '') return { success: false, message: 'رمزعبور فعلی خود را وارد کنید' };\r\n    \r\n    else if(data.newPassword === '') return { success: false, message: 'رمزعبور جدید خود را وارد کنید' };\r\n    else if(data.newPassword.length<8) \r\n        return { success: false, message: 'رمزعبور باید حداقل شامل 8 کاراکتر باشد' };\r\n    \r\n    else if(data.confirmNewPassword !== data.newPassword) return { success: false, message: 'رمزعبور و تکرار آن یکسان نیست' };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateEditGroupReq = data => {\r\n    if(data.roomPicture.data && !(data.roomPicture.mimetype === 'image/jpeg' || data.roomPicture.mimetype === 'image/jpg' || data.roomPicture.mimetype === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.roomPicture.data && data.roomPicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n    else return { success: true };\r\n};","import { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { validateSignupReq, makeToast } from '../../services';\r\nimport MyForm from '../form';\r\nimport { setIsRegistered } from '../../redux';\r\n\r\nexport const SignupForm = ({ submitHandler }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const usernameRef = useRef('');\r\n    const passwordRef = useRef('');\r\n    const confirmPasswordRef = useRef('');\r\n    const profilePictureRef = useRef('');\r\n    \r\n    const signup = e => {\r\n        e.preventDefault();\r\n        const data = { \r\n            name: nameRef.current.value.trim(),\r\n            email: emailRef.current.value.trim(),\r\n            username: usernameRef.current.value.trim(),\r\n            password: passwordRef.current.value.trim(),\r\n            confirmPassword: confirmPasswordRef.current.value.trim(),\r\n            profilePicture: profilePictureRef.current.files[0]\r\n        };\r\n        const { success, message } = validateSignupReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else submitHandler(data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"auth-card\">\r\n                <MyForm \r\n                    name=\"ثبت‌نام\"\r\n                    items={[\r\n                        { name: 'name', type: 'text', title: 'نام‌', placeholder: 'نام‌ و نام‌خانوادگی خود را وارد کنید', fieldRef: nameRef },\r\n                        { name: 'email', type: 'email', title: 'ایمیل', placeholder: 'ایمیل خود را وارد کنید', fieldRef: emailRef },\r\n                        { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef },\r\n                        { name: 'password', type: 'password', title: 'رمزعبور', placeholder: 'رمزعبور خود را وارد کنید', fieldRef: passwordRef },\r\n                        { name: 'confirmPassword', type: 'password', title: 'تکرار رمزعبور', placeholder: 'رمزعبور خود را تکرار کنید', fieldRef: confirmPasswordRef },\r\n                        { name: 'profilePicture', type: 'file', title: 'تصویر پروفایل', fieldRef: profilePictureRef }\r\n                    ]}\r\n                    submitHandler={signup}\r\n                /> \r\n                <div className=\"formActions\">\r\n                    <span className=\"formAction\" onClick={() => dispatch(setIsRegistered(true))}>ورود</span>\r\n                </div>\r\n            </Card>          \r\n        </div>\r\n    );\r\n};","import { FaRegUserCircle, FaRegCommentDots, FaSignOutAlt } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectMenuItem, setSocket, resetRoom } from '../../redux';\r\n\r\nimport './menu.css';\r\n\r\nexport const MenuBar = ({ history }) => {\r\n\r\n    const { selectedMenuItem, socket } = useSelector(state => {\r\n        return { selectedMenuItem: state.setting.selectedMenuItem, socket: state.setting.socket };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        socket.disconnect(0);\r\n        dispatch(setSocket(null));\r\n        dispatch(resetRoom());\r\n        localStorage.removeItem('SCA_TOKEN');\r\n        history.push('/auth');\r\n    };\r\n\r\n    return (\r\n        <div className=\"menu-bar\">\r\n            <h1 className=\"brand\">ShayanChat</h1>\r\n            <div className=\"icons-container\">\r\n                <div \r\n                    className={ selectedMenuItem === 'profile' ? \"icon active\" : \"icon\" } \r\n                    onClick={() => dispatch(selectMenuItem('profile'))}\r\n                    title=\"پروفایل\"\r\n                >\r\n                    <FaRegUserCircle />\r\n                </div>\r\n                <div \r\n                    className={ selectedMenuItem === 'chats' ? \"icon active\" : \"icon\" }\r\n                    onClick={() => dispatch(selectMenuItem('chats'))}    \r\n                    title=\"چت‌ها\"\r\n                >\r\n                    <FaRegCommentDots />\r\n                </div>\r\n                <div className=\"icon\" title=\"خروج\" onClick={logout}>\r\n                    <FaSignOutAlt />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRooms } from '../../redux';\r\n\r\nimport './searchBox.css';\r\n\r\nconst SearchBox = () => {\r\n\r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n    \r\n    const searchRef = useRef('');\r\n\r\n    const search = () => {\r\n        dispatch(getRooms(socket, { search: searchRef.current.value.trim() }));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"search-box\">\r\n            <input className=\"input\" type=\"text\" placeholder=\"جستجو ...\" ref={searchRef} onChange={search} />\r\n            <FaSearch className=\"icon\" onClick={search} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import { FaPlusSquare } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setModalContent, setShowModal } from '../../redux';\r\n\r\nconst ChatListHeader = () => {    \r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const showCreateRoomModal = () => {\r\n        dispatch(setModalContent('createNewRoom'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-list-header\">\r\n            <h3>چت‌ها</h3>\r\n            <span className=\"plus-icon\" title=\"ساخت گروه جدید\" onClick={showCreateRoomModal}>\r\n                <FaPlusSquare />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatListHeader;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { ENDPOINT } from '../../services';\r\nimport { getRoom, setShowChats } from '../../redux';\r\n\r\nconst ChatItem = ({ room, active }) => {\r\n\r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const setRoom = () => {\r\n        dispatch(getRoom(socket, room.id));\r\n        dispatch(setShowChats(true));\r\n    };\r\n\r\n    return (\r\n        <div onClick={setRoom} className={ active ? \"chat-item active\" : \"chat-item\"}>\r\n            <div className=\"chat-item-info\">\r\n                <div className=\"picture-container\">\r\n                    <img className=\"picture\" src={ room.roomPicture ? `${ENDPOINT}/roomPictures/${room.roomPicture}` : \"/images/room.jpg\"} alt={room.name} />\r\n                </div>\r\n                <div className=\"text-container\">\r\n                    <span className=\"name\">{room.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatItem;","import { Fragment, useEffect } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRooms } from '../../redux';\r\nimport SearchBox from '../searchBox';\r\n\r\nimport './chatList.css';\r\nimport ChatListHeader from './chatListHeader';\r\nimport ChatItem from './chatItem';\r\n\r\nexport const ChatList = () => {\r\n\r\n    const { socket, rooms, currentRoom } = useSelector(state => {\r\n        return { socket: state.setting.socket, rooms: state.rooms, currentRoom: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            dispatch(getRooms(socket));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [socket]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <ChatListHeader />\r\n            <SearchBox />\r\n            <div className={rooms.loading ? \"chat-list text-center\" : \"chat-list\"}>\r\n                {\r\n                    rooms.loading\r\n                        ? \r\n                            <Spinner animation=\"border\" variant=\"secondary\" />\r\n                        :\r\n                            <Fragment>\r\n                                {\r\n                                    rooms.data.map(room => {\r\n                                        return <ChatItem key={room.id} room={room} active={ currentRoom.id === room.id ? true : false } />\r\n                                    })\r\n                                }\r\n                            </Fragment>    \r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};","import { Fragment, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaEllipsisV, FaRegEdit, FaKey, FaRegTrashAlt } from 'react-icons/fa';\r\n\r\nimport { ENDPOINT, makeToast } from '../../services';\r\nimport { setModalContent, setShowModal, setSocket } from '../../redux';\r\nimport './profile.css';\r\n\r\nexport const Profile = ({ history }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const { socket, user } = useSelector(state => {\r\n        return { socket: state.setting.socket, user: state.user};\r\n    });\r\n    const dispatch = useDispatch();\r\n    \r\n    const showEditProfileForm = () => {\r\n        dispatch(setModalContent('editProfile'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const showChangePasswordForm = () => {\r\n        dispatch(setModalContent(\"changePassword\"));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const deleteAccount = () => {\r\n        const isConfirm = window.confirm(\"آیا از حذف حساب کاربری خود اطمینان دارید؟\");\r\n        if(isConfirm) {\r\n            socket.emit('delete acount', ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    localStorage.removeItem('SCA_TOKEN');\r\n                    socket.disconnect(0);\r\n                    dispatch(setSocket(null));\r\n                    history.push('/auth');\r\n                    makeToast('success', message);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"profile-header\">\r\n                <h3>پروفایل</h3>\r\n                <div className=\"actions-container\">\r\n                    <FaEllipsisV className=\"action-icon\" onClick={() => setShow(!show)} />\r\n                    <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                        <span className=\"action\" onClick={showEditProfileForm}><FaRegEdit className=\"ml-2\" />ویرایش پروفایل</span>\r\n                        <span className=\"action\" onClick={showChangePasswordForm}><FaKey className=\"ml-2\" />تغییر رمزعبور</span>\r\n                        <span className=\"action\" onClick={deleteAccount}><FaRegTrashAlt className=\"ml-2\" />حذف حساب کاربری</span>\r\n                    </div>\r\n                </div>       \r\n            </div>\r\n            <div className=\"profile-info\">\r\n                <div className=\"picture-container\">\r\n                    <img \r\n                        className=\"picture\" \r\n                        src={ user.profilePicture ? `${ENDPOINT}/profilePictures/${user.profilePicture}` : '/images/user.png' } \r\n                        alt={user.name} \r\n                    />\r\n                </div>\r\n                <span className=\"name\">{user.name}</span>\r\n            </div>\r\n            <div className=\"profile-detail\">\r\n                <div className=\"header\">\r\n                    <span>مشخصات</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">نام</span>\r\n                    <span>{user.name}</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">ایمیل</span>\r\n                    <span>{user.email}</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">نام‌کاربری</span>\r\n                    <span>{user.username}</span>                    \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { FaAngleRight, FaEllipsisV } from 'react-icons/fa';\r\nimport { setShowChats, setShowModal, setModalContent } from '../../redux';\r\nimport { ENDPOINT } from '../../services';\r\n\r\nconst ChatContentHeader = () => {\r\n\r\n    const { windowInnerWidth, room } = useSelector(state => {\r\n        return { windowInnerWidth: state.setting.windowInnerWidth, room: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const showRoomInfo = () => {\r\n        dispatch(setModalContent('roomInfo'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"right-side\">\r\n                { windowInnerWidth<768 && <FaAngleRight className=\"back-icon\" onClick={() => dispatch(setShowChats(false))} /> }\r\n                <img \r\n                    className=\"picture\"\r\n                    src={ room.roomPicture ? `${ENDPOINT}/roomPictures/${room.roomPicture}` : '/images/room.jpg'}\r\n                    alt={room.name}\r\n                />\r\n                <span className=\"font-weight-bold\">{room.name}</span>\r\n            </div>\r\n            <FaEllipsisV onClick={showRoomInfo} className=\"ellipsis-icon\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentHeader;","import { useState } from 'react';\r\nimport { FaEllipsisV, FaRegClock } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setEditMessageId, setSendMessageType, setEditMessageText } from '../../redux';\r\nimport { ENDPOINT } from '../../services';\r\n\r\nconst Message = ({ message }) => {\r\n    \r\n    const [show, setShow] = useState(false);\r\n\r\n    const { socket, room } = useSelector(state => { \r\n        return { socket: state.setting.socket, room: state.room.data }\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const editMessage = () => {\r\n        dispatch(setSendMessageType(1));\r\n        dispatch(setEditMessageText(message.text))\r\n        dispatch(setEditMessageId(message.id));\r\n        setShow(false);\r\n    };\r\n\r\n    const deleteMessage = () => {\r\n        const isConfirm = window.confirm('آیا از حذف پیام اطمینان دارید؟');\r\n        if(isConfirm) socket.emit('delete message', { roomId: room.id, messageId: message.id });\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <div className={ message.isOwner ? \"message-container\" : \"message-container dir-ltr\"}>\r\n            <img \r\n                className={ message.isOwner ? \"picture ml-2\" : \"picture mr-2\"} \r\n                src={ message.sender.profilePicture ? `${ENDPOINT}/profilePictures/${message.sender.profilePicture}` : \"/images/user.png\"} \r\n                alt={ message.sender.name } \r\n            />\r\n            <div className=\"message-text\">\r\n                <span className=\"name\">{ message.sender.name }</span>\r\n                <span className=\"message\">{message.text}</span>\r\n                <span className=\"time\"><FaRegClock /> {message.date.split('-')[1]}</span>\r\n            </div>\r\n            {\r\n                message.isOwner &&\r\n                <div className=\"actions-container\">\r\n                    <FaEllipsisV style={{ cursor: 'pointer' }} onClick={() => setShow(!show)} />\r\n                    <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                        <span className=\"action\" onClick={editMessage}>ویرایش</span>\r\n                        <span className=\"action\" onClick={deleteMessage}>حذف</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>          \r\n    );\r\n};\r\n\r\nexport default Message;","import Message from './message';\r\n\r\nconst Messages = ({ date, messages }) => (\r\n    <div>\r\n        <div className=\"text-center text-muted my-2\"><span className=\"date-span\">{date}</span></div>\r\n        {\r\n            messages.map(message => <Message key={message.id} message={message} />)\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default Messages;","import { Fragment, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { Loading } from '../';\r\nimport { getMessages, setSendMessageType, addNewMessage, changeMessage, removeMessage } from '../../redux';\r\nimport Messages from './messages';\r\n\r\nconst ChatContentBody = () => {\r\n    \r\n    const chatBodyRef = useRef();\r\n    const { socket, user, messages, room, sendMessageType, editMessageText } = useSelector(state => {\r\n        return { socket: state.setting.socket, user: state.user, messages: state.messages, room: state.room, sendMessageType: state.setting.sendMessageType, editMessageText: state.setting.editMessageText };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            dispatch(getMessages(socket, room.data.id));  \r\n            socket.on('new message', async ({ roomId, newMessage, updateMessage, deleteMessage }) => {\r\n                try {\r\n                    if(roomId.toString() === room.data.id.toString()) {\r\n                        if(newMessage) {\r\n                            newMessage.isOwner = (newMessage.sender.email===user.email) ? true : false;\r\n                            dispatch(addNewMessage(newMessage));\r\n                            chatBodyRef.current.scroll(0, chatBodyRef.current.scrollHeight);\r\n                        } else if(updateMessage) {\r\n                            updateMessage.isOwner = (updateMessage.sender.email===user.email) ? true : false;\r\n                            dispatch(changeMessage(updateMessage));\r\n                        } else if(deleteMessage) dispatch(removeMessage(deleteMessage));\r\n                    }\r\n                } catch(error) {}\r\n            });  \r\n        }  \r\n        return () => {\r\n            dispatch(setSendMessageType(0));\r\n            socket.off('new message');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        chatBodyRef.current.scroll(0, chatBodyRef.current.scrollHeight);\r\n    }, [messages.data]);\r\n\r\n    return (\r\n        <div ref={chatBodyRef} className=\"body\">\r\n            {\r\n                messages.loading ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            {\r\n                                messages.data && \r\n                                Object.keys(messages.data).map((date, index) => {\r\n                                    return <Messages key={index} date={date} messages={messages.data[date]} />\r\n                                })\r\n                            }\r\n                            {\r\n                                sendMessageType === 1 &&\r\n                                <div className=\"edit-box\">\r\n                                    <FaTimes style={{ cursor: \"pointer\" }} onClick={() => dispatch(setSendMessageType(0))} />\r\n                                    <span className=\"edit-box-text text-muted\">{editMessageText}</span>\r\n                                </div>\r\n                            } \r\n                        </Fragment>    \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentBody;","import { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaPaperPlane } from 'react-icons/fa';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { makeToast } from '../../services';\r\nimport { getRooms, getRoom, setSendMessageType } from '../../redux';\r\n\r\nconst ChatContentFooter = () => {\r\n    \r\n    const messageRef = useRef('');\r\n\r\n    const { socket, room, sendMessageType, editMessageId, editMessageText } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room.data, sendMessageType: state.setting.sendMessageType,\r\n                editMessageId: state.setting.editMessageId, editMessageText: state.setting.editMessageText };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(sendMessageType === 1 && messageRef.current) messageRef.current.value = editMessageText;\r\n        else if(messageRef.current) messageRef.current.value = '';\r\n        // eslint-disable-next-line\r\n    }, [sendMessageType, editMessageId]);\r\n\r\n    const joinToGroup = () => {\r\n        socket.emit('join room', ({ id: room.id }), ({ success, message }) => {\r\n            if(!success) makeToast('error', message);\r\n            else makeToast('success', message);\r\n            dispatch(getRooms(socket));\r\n            dispatch(getRoom(socket, room.id ));\r\n        });\r\n    };\r\n\r\n    const keyPressHandler = e => {\r\n        e.key === 'Enter' && sendMessage(); \r\n    };\r\n\r\n    const sendMessage = () => {\r\n        const message = messageRef.current.value.trim();\r\n        if(message) {\r\n            if(sendMessageType === 0) socket.emit('send message', { message, roomId: room.id });\r\n            else socket.emit('edit message', { message, roomId: room.id, messageId: editMessageId });\r\n            dispatch(setSendMessageType(0));\r\n            messageRef.current.value = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            {\r\n                room.isJoined \r\n                    ?\r\n                        <div className=\"chat-box\">\r\n                            <input className=\"input\" onKeyPress={keyPressHandler} ref={messageRef} />\r\n                            <FaPaperPlane className=\"mr-1\" style={{cursor: 'pointer'}} onClick={sendMessage} />\r\n                        </div>\r\n                    :\r\n                        <Button className=\"w-100\" onClick={joinToGroup}>عضویت در گروه</Button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentFooter;","import './chatContent.css';\r\nimport ChatContentHeader from './header';\r\nimport ChatContentBody from './body';\r\nimport ChatContentFooter from './footer';\r\n\r\nexport const ChatContent = () => {\r\n    return (\r\n        <div className=\"chat-content-container\">\r\n            <ChatContentHeader />\r\n            <ChatContentBody />\r\n            <ChatContentFooter />\r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateCreateRoomReq, makeToast } from '../../services';\r\nimport { setLoadingForm, setShowModal, getRooms } from '../../redux';\r\n\r\nconst CreateNewRoom = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const roomNameRef = useRef('');\r\n    const roomPictureRef = useRef('');\r\n\r\n    const createNewRoom = e => {\r\n        e.preventDefault();\r\n        const data = { \r\n            roomName: roomNameRef.current.value.trim(), \r\n            roomPicture: {\r\n                data: roomPictureRef.current.files[0],\r\n                name: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].name : null,\r\n                mimetype: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].type : null,\r\n                size: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].size : null\r\n            } \r\n        };\r\n        const { success, message } = validateCreateRoomReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('create new room', data, ({ success, message }) => {\r\n                if(success) {\r\n                    dispatch(setShowModal(false));\r\n                    dispatch(getRooms(socket));\r\n                    makeToast('success', message);\r\n                }\r\n                else makeToast('error', message);\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ایجاد گروه جدید</h6>\r\n            <MyForm \r\n                name='ایجاد گروه جدید'\r\n                items={[\r\n                    { name: 'roomName', type: 'text', title: 'نام گروه', placeholder: 'نام گروه را وارد کنید', fieldRef: roomNameRef },\r\n                    { name: 'roomPicture', type: 'file', title: 'تصویر گروه', fieldRef: roomPictureRef }\r\n                ]}\r\n                submitHandler={createNewRoom}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateNewRoom;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateEditProfileReq, makeToast } from '../../services';\r\nimport { setShowModal, setUserData, setLoadingForm } from '../../redux';\r\n\r\nconst EditProfile = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const usernameRef = useRef('');\r\n    \r\n    const editProfile = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            name: nameRef.current.value.trim(),\r\n            email: emailRef.current.value.trim(),\r\n            username: usernameRef.current.value.trim()\r\n        };\r\n        const { success, message } = validateEditProfileReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else if(data.name || data.email || data.username) {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('edit profile', data, ({ success, message, user }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setUserData(user));\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ویرایش پروفایل</h6>\r\n            <MyForm \r\n                name=\"ویرایش\"\r\n                items={[\r\n                    { name: 'name', type: 'text', title: 'نام‌', placeholder: 'نام‌ خود را وارد کنید', fieldRef: nameRef },\r\n                    { name: 'email', type: 'email', title: 'ایمیل', placeholder: 'ایمیل خود را وارد کنید', fieldRef: emailRef },\r\n                    { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef }\r\n                ]}\r\n                submitHandler={editProfile}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfile;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateChangePasswordReq, makeToast } from '../../services';\r\nimport { setShowModal, setLoadingForm } from '../../redux';\r\n\r\nconst ChangePassword = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const oldPasswordRef = useRef('');\r\n    const newPasswordRef = useRef('');\r\n    const confirmNewPasswordRef = useRef('');\r\n\r\n    const changePassword = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            oldPassword: oldPasswordRef.current.value.trim(),\r\n            newPassword: newPasswordRef.current.value.trim(),\r\n            confirmNewPassword: confirmNewPasswordRef.current.value.trim()\r\n        };\r\n        const { success, message } = validateChangePasswordReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('change password', data, ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">تغییر رمزعبور</h6>\r\n            <MyForm \r\n                name=\"تغییر رمزعبور\"\r\n                items={[\r\n                    { name: 'oldPassword', type: 'password', title: 'رمزعبور فعلی', placeholder: 'رمزعبور فعلی را وارد کنید', fieldRef: oldPasswordRef },\r\n                    { name: 'newPassword', type: 'password', title: 'رمزعبور جدید', placeholder: 'رمزعبور جدید را وارد کنید', fieldRef: newPasswordRef },\r\n                    { name: 'confirmNewPassword', type: 'password', title: 'تکرار رمزعبور جدید', placeholder: 'رمزعبور جدید را تکرار کنید', fieldRef: confirmNewPasswordRef }\r\n                ]}\r\n                submitHandler={changePassword}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;","import { ENDPOINT } from '../../services';\r\nimport { FaStar } from 'react-icons/fa';\r\n\r\nconst Member = ({ member }) => {\r\n    return (\r\n        <div className=\"member-container\">\r\n            <div className=\"picture-container\">\r\n                <img \r\n                    className=\"picture\"\r\n                    src={ member.profilePicture ? `${ENDPOINT}/profilePictures/${member.profilePicture}` : '/images/user.png' }\r\n                    alt={ member.name }\r\n                />\r\n                <span className={ member.isOnline ? \"online-badge bg-success\" : \"online-badge bg-secondary\"}></span>\r\n            </div>\r\n            <div className=\"d-flex flex-column\">\r\n                <span>{member.name} { member.isOwner && <FaStar /> }</span>\r\n                <span className=\"text-muted small\">{ member.isOnline ? 'Online' : member.lastSeen }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Member;","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FaEllipsisV, FaRegEdit, FaRegTrashAlt, FaSignOutAlt } from 'react-icons/fa';\r\nimport { getRoomMembers, setLoadingPage } from '../../redux';\r\nimport { ENDPOINT, makeToast } from '../../services';\r\n\r\nimport './roomInfo.css';\r\nimport Member from './member';\r\nimport { setModalContent, setShowModal, getRooms, resetRoom } from '../../redux';\r\n\r\nconst RoomInfo = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const { socket, room, members } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room, members: state.members };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) dispatch(getRoomMembers(socket, room.data.id));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const showEditGroup = () => {\r\n        dispatch(setModalContent('editGroup'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const leaveGroup = () => {\r\n        socket.emit('leave room', ({ id: room.data.id }), ({ success, message }) => {\r\n            if(!success) makeToast('error', message);\r\n            else {\r\n                makeToast(\"success\", message);\r\n                dispatch(getRooms(socket));\r\n                dispatch(setShowModal(false));\r\n                dispatch(resetRoom());\r\n            }\r\n        });\r\n    };\r\n\r\n    const removeGroup = () => {\r\n        const isConfirm = window.confirm('آیا از حذف گروه اطمینان دارید؟');\r\n        if(isConfirm) {\r\n            dispatch(setShowModal(false));\r\n            dispatch(setLoadingPage(true));\r\n            socket.emit('delete room', ({ id: room.data.id }), ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    dispatch(resetRoom({}));\r\n                    dispatch(getRooms(socket));\r\n                    makeToast('success', message);\r\n                }\r\n                dispatch(setLoadingPage(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"room-info-modal\">\r\n            <div className=\"header\">\r\n                <img \r\n                    className=\"room-picture\"\r\n                    src={ room.data.roomPicture ? `${ENDPOINT}/roomPictures/${room.data.roomPicture}` : '/images/room.jpg' }\r\n                    alt={ room.data.name }\r\n                />\r\n                <div className=\"d-flex flex-column text-right\">\r\n                    <span className=\"font-weight-bold\">{room.data.name}</span>\r\n                    <span className=\"text-muted small\">{room.data.id}</span>\r\n                </div>\r\n                {\r\n                    room.data.isJoined &&\r\n                    <div className=\"actions-container\">\r\n                        <FaEllipsisV className=\"action-icon\" onClick={() => setShow(!show)} />\r\n                        <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                            { room.data.isOwner && <span className=\"action\" onClick={showEditGroup}><FaRegEdit className=\"ml-2\" />ویرایش گروه</span>}\r\n                            { room.data.isOwner && <span className=\"action\" onClick={removeGroup}><FaRegTrashAlt className=\"ml-2\" />حذف گروه</span>}\r\n                            { !room.data.isOwner && <span className=\"action\" onClick={leaveGroup}><FaSignOutAlt className=\"ml-2\" />خروج از گروه</span>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                <h6 className=\"px-3 py-2\">اعضای گروه</h6>\r\n                <div className=\"scroller\">\r\n                    {\r\n                        members.loading\r\n                            ?\r\n                            <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n                                <Spinner animation=\"border\" variant=\"secondary\" />\r\n                            </div>\r\n                            :\r\n                            members.data.map((member, index) => {\r\n                                return <Member key={index} member={member} />\r\n                            })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomInfo;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateEditGroupReq, makeToast } from '../../services';\r\nimport { setShowModal, setLoadingForm } from '../../redux';\r\n\r\nconst EditGroup = () => {\r\n    \r\n    const { socket, room } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const roomPictureRef = useRef();\r\n\r\n    const editGroup = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            id: room.id,\r\n            roomName: nameRef.current.value.trim(),\r\n            roomPicture: {\r\n                data: roomPictureRef.current.files[0],\r\n                name: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].name : null,\r\n                mimetype: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].type : null,\r\n                size: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].size : null\r\n            }\r\n        };\r\n        const { success, message } = validateEditGroupReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else if(data.roomName || data.roomPicture.data){\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('edit room', data, ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ویرایش گروه</h6>\r\n            <MyForm \r\n                name=\"ویرایش\"\r\n                items={[\r\n                    { name: 'roomName', type: 'text', title: 'نام‌ گروه', placeholder: 'نام‌ گروه را وارد کنید', fieldRef: nameRef },\r\n                    { name: 'roomPicture', type: 'file', title: 'تصویر گروه', fieldRef: roomPictureRef }\r\n                ]}\r\n                submitHandler={editGroup}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditGroup;","import { Modal } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setShowModal } from '../../redux';\r\nimport './modal.css';\r\nimport CreateNewRoom from'./createRoom';\r\nimport EditProfile from './editProfile';\r\nimport ChangePassword from './changePassword';\r\nimport RoomInfo from '../roomInfo';\r\nimport EditGroup from './editGroup';\r\n\r\nexport const MyModal = () => {\r\n    \r\n    const { showModal, modalContent } = useSelector(state => {\r\n        return { showModal: state.setting.showModal, modalContent: state.setting.modalContent };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Modal show={showModal} onHide={() => dispatch(setShowModal(false))} centered>\r\n            <div className=\"p-3\">\r\n                { modalContent === 'createNewRoom' && <CreateNewRoom /> }\r\n                { modalContent === 'editProfile' && <EditProfile /> }\r\n                { modalContent === 'changePassword' && <ChangePassword /> }\r\n                { modalContent === 'roomInfo' && <RoomInfo /> }\r\n                { modalContent === 'editGroup' && <EditGroup /> }\r\n            </div>\r\n        </Modal>\r\n    );\r\n};","import { useEffect } from 'react';\r\n\r\nimport { Loading } from '../components';\r\nimport { verifyUser } from '../services';\r\n\r\nexport const RootPage = ({ history }) => {\r\n    \r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success }) => {\r\n                if(success) history.push('/chat');\r\n                else history.push('/auth');\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return <Loading />\r\n};","import { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { SigninForm, SignupForm, Loading } from '../components';\r\nimport { signin, signup, verifyUser, makeToast } from '../services';\r\nimport { setLoadingPage, setLoadingForm, setIsRegistered } from '../redux';\r\n\r\nexport const AuthPage = ({ history }) => {\r\n    \r\n    const { loadingPage, isRegister } = useSelector(state => {\r\n        return { loadingPage: state.setting.loadingPage, isRegister: state.setting.isRegister };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success }) => {\r\n                if(success) history.push('/chat'); \r\n                setTimeout(() => {\r\n                    dispatch(setLoadingPage(false));\r\n                }, 1000);\r\n            });\r\n\r\n        return () => {\r\n            dispatch(setLoadingPage(true));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submitHandler = async data => {\r\n        try {\r\n            dispatch(setLoadingForm(true));\r\n            let response;\r\n            if(data.confirmPassword) {\r\n                response = await signup(data);\r\n                dispatch(setIsRegistered(true));\r\n            } else {\r\n                response = await signin(data);\r\n                localStorage.setItem('SCA_TOKEN', response.data.token);\r\n                history.push('/chat');\r\n            }\r\n            dispatch(setLoadingForm(false));\r\n            makeToast('success', response.data.message);\r\n        } catch (error) {\r\n            dispatch(setLoadingForm(false));\r\n            makeToast('error', error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center text-center justify-content-center h-100\">\r\n            {\r\n                loadingPage\r\n                    ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            <h1 className=\"appBrand mb-3\">ShayanChat</h1>\r\n                            <h3 className=\"mb-3 pb-3\">{ isRegister ? 'ورود' : 'عضویت' }</h3>\r\n                            {\r\n                                isRegister \r\n                                    ? <SigninForm submitHandler={submitHandler} />\r\n                                    : <SignupForm submitHandler={submitHandler} />\r\n                            }\r\n                        </Fragment>\r\n            }\r\n        </div>\r\n    );\r\n};","import { Fragment, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\nimport io from 'socket.io-client';\r\n\r\nimport { MenuBar, ChatList, Profile, ChatContent, Loading } from '../components';\r\nimport { verifyUser } from '../services';\r\nimport { setLoadingPage, setSocket, setUserData, setInnerWidth, setShowChats, updateRoom, updateRooms } from '../redux';\r\n\r\nexport const ChatPage = ({ history }) => {\r\n\r\n    const { loadingPage, selectedMenuItem, showChats, room, windowInnerWidth, socket } = useSelector(state => {\r\n        return { \r\n            loadingPage: state.setting.loadingPage,\r\n            selectedMenuItem: state.setting.selectedMenuItem,\r\n            showChats: state.setting.showChats,\r\n            room: state.room,\r\n            windowInnerWidth: state.setting.windowInnerWidth,\r\n            socket: state.setting.socket \r\n        };\r\n    });\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleWindowSize = () => {\r\n        dispatch(setInnerWidth());\r\n    };\r\n\r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success, user }) => {\r\n                if(!success) history.push('/auth'); \r\n                else {\r\n                    dispatch(setUserData(user));\r\n                    if(!socket) dispatch(setSocket(io({query: {token: localStorage.getItem('SCA_TOKEN')}})));\r\n                    setTimeout(() => {\r\n                        dispatch(setLoadingPage(false));\r\n                    }, 1000);\r\n                    window.addEventListener('resize', handleWindowSize);\r\n                }\r\n            });\r\n\r\n        return () => {\r\n            dispatch(setLoadingPage(true));\r\n            window.removeEventListener('resize', handleWindowSize);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            socket.on('change room data', ({ room }) => {\r\n                dispatch(updateRoom(room));\r\n                dispatch(updateRooms(room));\r\n            });\r\n        }\r\n        \r\n        return () => {\r\n            if(socket) socket.off('change room data');\r\n        };\r\n    }, [socket]);\r\n\r\n    return (\r\n        <div className=\"d-flex h-100\">\r\n            {\r\n                loadingPage\r\n                    ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            {\r\n                                windowInnerWidth>768\r\n                                    ? <MenuBar history={history} />\r\n                                    : !showChats &&  <MenuBar history={history} />\r\n                            }\r\n                            <Row className=\"h-100 w-100 m-0\">\r\n                                <Col className={ (showChats && windowInnerWidth<768) ? \"d-none\" : \"p-0\" } lg={4} md={5}>\r\n                                    <div className=\"chat-right-side-bar\">\r\n                                        { selectedMenuItem === 'profile' && <Profile history={history} /> }\r\n                                        { selectedMenuItem === 'chats' && <ChatList /> }\r\n                                    </div>\r\n                                </Col>\r\n                                <Col className={windowInnerWidth>768 ? \"p-0 bg-light\" : showChats ? \"p-0 bg-light\" : \"d-none\"} lg={8} md={7}>\r\n                                    {\r\n                                        room.loading\r\n                                            ?\r\n                                                <Loading />\r\n                                            :\r\n                                                !room.data.name \r\n                                                    ?\r\n                                                        <div className=\"empty-chat-box\">\r\n                                                            { windowInnerWidth<768 && <FaAngleRight className=\"back-icon\" onClick={() => dispatch(setShowChats(false))} /> }\r\n                                                            { room.error ? room.error : \"ShayanChat\" }\r\n                                                        </div>\r\n                                                    : <ChatContent />\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Fragment>\r\n            }\r\n        </div>\r\n    );\r\n};","import { SET_LOADING_PAGE, SET_LOADING_FORM, SELECT_MENU_ITEM, SET_SHOW_MODAL, SET_MODAL_CONTENT, SET_SHOW_CHATS, SET_SEND_MESSAGE_TYPE, SET_EDIT_MESSAGE_ID, SET_EDIT_MESSAGE_TEXT, SET_WINDOW_INNERWIDTH, SET_IS_REGISTERED, SET_SOCKET } from './types';\r\n\r\nconst initialState = {\r\n    loadingPage: true,\r\n    loadingForm: false,\r\n    selectedMenuItem: 'chats',\r\n    showModal: false,\r\n    modalContent: '',\r\n    isRegister: true,\r\n    showChats: false,\r\n    sendMessageType: 0,\r\n    editMessageId: 0,\r\n    editMessageText: '',\r\n    windowInnerWidth: window.innerWidth,\r\n    socket: null\r\n};\r\n\r\nconst settingReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_LOADING_PAGE: return { ...state, loadingPage: action.payload };\r\n        case SET_LOADING_FORM: return { ...state, loadingForm: action.payload };\r\n        case SELECT_MENU_ITEM: return { ...state, selectedMenuItem: action.payload };\r\n        case SET_SHOW_MODAL: return { ...state, showModal: action.payload };\r\n        case SET_MODAL_CONTENT: return { ...state, modalContent: action.payload };\r\n        case SET_SHOW_CHATS: return { ...state, showChats: action.payload };\r\n        case SET_IS_REGISTERED: return { ...state, isRegister: action.payload };\r\n        case SET_SEND_MESSAGE_TYPE: return { ...state, sendMessageType: action.payload };\r\n        case SET_EDIT_MESSAGE_ID: return { ...state, editMessageId: action.payload };\r\n        case SET_EDIT_MESSAGE_TEXT: return { ...state, editMessageText: action.payload };\r\n        case SET_WINDOW_INNERWIDTH: return { ...state, windowInnerWidth: window.innerWidth };\r\n        case SET_SOCKET: return { ...state, socket: action.payload };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default settingReducer;","import { SET_USER_DATA } from './types';\r\n\r\nconst initialState = {};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: return action.payload;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, UPDATE_ROOMS } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n};\r\n\r\nconst roomsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: [], error: action.payload };\r\n        case UPDATE_ROOMS: \r\n            const roomIndex = state.data.findIndex(room => room.id.toString() === action.payload.id.toString());\r\n            if(roomIndex !== -1) {\r\n                if(action.payload.name) state.data[roomIndex].name = action.payload.name;\r\n                if(action.payload.roomPicture) state.data[roomIndex].roomPicture = action.payload.roomPicture; \r\n            }\r\n            return { loading: false, data: state.data, error: '' }; \r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomsReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, RESET_ROOM, UPDATE_ROOM } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: {},\r\n    error: ''\r\n};\r\n\r\nconst roomReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: {}, error: action.payload };\r\n        case RESET_ROOM: return { loading: false, data: {}, error: '' };\r\n        case UPDATE_ROOM: \r\n            if(state.data.id && state.data.id.toString()===action.payload.id.toString()) {\r\n                if(action.payload.name) state.data.name = action.payload.name;\r\n                if(action.payload.roomPicture) state.data.roomPicture = action.payload.roomPicture;    \r\n            }\r\n            return { loading: false, data: state.data, error: '' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n};\r\n\r\nconst roomReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: [], error: action.payload };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, NEW_MESSAGE, UPDATE_MESSAGE, DELETE_MESSAGE } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: {},\r\n    error: ''\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: {}, error: action.payload };\r\n        case NEW_MESSAGE:\r\n            const newMessageDate = action.payload.date.split('-')[0]; \r\n            if(!state.data[newMessageDate]) state.data[newMessageDate] = [];             \r\n            state.data[newMessageDate].push(action.payload);\r\n            return { loading: false, data: state.data, error: '' };\r\n        case UPDATE_MESSAGE:\r\n            const updateMessageDate = action.payload.date.split('-')[0];\r\n            const messageIndex = state.data[updateMessageDate].findIndex(message => message.id.toString() === action.payload.id.toString());\r\n            if(messageIndex !== -1) state.data[updateMessageDate][messageIndex] = action.payload;\r\n            return { loading: false, data: state.data, error: '' };\r\n        case DELETE_MESSAGE:\r\n            const deleteMessageDate = action.payload.date.split('-')[0];\r\n            const deleteMessageIndex = state.data[deleteMessageDate].findIndex(message => message.id.toString() === action.payload.id.toString());\r\n            if(deleteMessageIndex !== -1) state.data[deleteMessageDate].splice(deleteMessageIndex, 1);\r\n            if(state.data[deleteMessageDate].length === 0) delete state.data[deleteMessageDate];\r\n            return { loading: false, data: state.data, error: '' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default messagesReducer;","import { combineReducers } from 'redux';\r\n\r\nimport settingReducer from './setting/reducer';\r\nimport userReducer from './user/reducer';\r\nimport roomsReducer from './rooms/reducer';\r\nimport roomReducer from './room/reducer';\r\nimport membersReducer from './members/reducer';\r\nimport messagesReducer from './messages/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    setting: settingReducer,\r\n    user: userReducer,\r\n    rooms: roomsReducer,\r\n    room: roomReducer,\r\n    members: membersReducer,\r\n    messages: messagesReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { RootPage, AuthPage, ChatPage } from './pages';\nimport { MyModal } from './components';\nimport store from './redux/store';\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={RootPage} />\n        <Route path=\"/auth\" component={AuthPage} />\n        <Route path=\"/chat\" component={ChatPage} />\n      </Switch>\n      <MyModal />\n    </BrowserRouter>  \n  </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
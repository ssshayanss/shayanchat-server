{"version":3,"sources":["components/loading/index.js","services/constants.js","services/auth.js","services/toaster.js","redux/setting/types.js","redux/setting/actions.js","redux/user/types.js","redux/user/actions.js","redux/rooms/types.js","redux/rooms/actions.js","redux/room/types.js","redux/room/actions.js","redux/members/types.js","redux/members/actions.js","redux/messages/types.js","redux/messages/actions.js","components/form/input.js","components/form/index.js","components/signin/index.js","services/validate.js","components/signup/index.js","components/menu/index.js","components/searchBox/index.js","components/chatList/chatListHeader.js","components/chatList/chatItem.js","components/chatList/index.js","components/profile/index.js","components/chatContent/header.js","components/chatContent/message.js","components/chatContent/body.js","components/chatContent/footer.js","components/chatContent/index.js","components/modal/createRoom.js","components/modal/editProfile.js","components/modal/changePassword.js","components/roomInfo/member.js","components/roomInfo/index.js","components/modal/editGroup.js","components/modal/index.js","pages/root.js","pages/auth.js","pages/chat.js","redux/setting/reducer.js","redux/user/reducer.js","redux/rooms/reducer.js","redux/room/reducer.js","redux/members/reducer.js","redux/messages/reducer.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["Loading","className","Spinner","animation","variant","ENDPOINT","namePattern","emailPattern","usernamePattern","imageMaxSize","signup","data","formData","FormData","append","name","email","username","password","profilePicture","axios","post","signin","verifyUser","a","token","localStorage","getItem","get","headers","Authorization","success","user","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","makeToast","type","message","fire","icon","title","SET_LOADING_PAGE","SET_LOADING_FORM","SELECT_MENU_ITEM","SET_SHOW_MODAL","SET_MODAL_CONTENT","SET_SHOW_CHATS","SET_IS_REGISTERED","SET_SEND_MESSAGE_TYPE","SET_EDIT_MESSAGE_ID","SET_EDIT_MESSAGE_TEXT","SET_WINDOW_INNERWIDTH","SET_SOCKET","setLoadingPage","isLoading","payload","setLoadingForm","selectMenuItem","itemName","setShowModal","isShow","setModalContent","content","setShowChats","setIsRegistered","isRegister","setSendMessageType","typeNumber","setSocket","socket","SET_USER_DATA","setUserData","userData","SEND_REQUEST","REQUEST_SUCCESS","REQUEST_FAILURE","getRooms","search","dispatch","emit","rooms","error","requestSuccess","requestFailure","RESET_ROOM","resetRoom","getRoom","id","room","getRoomMembers","members","NEW_MESSAGE","UPDATE_MESSAGE","DELETE_MESSAGE","getMessages","roomId","messages","addNewMessage","newMessage","changeMessage","updateMessage","Input","item","useState","showPassword","setShowPassword","RegExp","test","placeholder","ref","fieldRef","accept","onClick","MyForm","items","submitHandler","loading","useSelector","state","setting","loadingForm","Form","onSubmit","map","index","Button","disabled","SigninForm","useDispatch","usernameRef","useRef","passwordRef","remindMeRef","useEffect","current","value","checked","Card","e","preventDefault","trim","length","validateSigninReq","setItem","removeItem","SignupForm","nameRef","emailRef","confirmPasswordRef","profilePictureRef","confirmPassword","files","size","Math","floor","validateSignupReq","MenuBar","history","selectedMenuItem","disconnect","push","SearchBox","searchRef","onChange","ChatListHeader","ChatItem","active","src","roomPicture","alt","ChatList","currentRoom","Profile","show","setShow","window","confirm","ChatContentHeader","windowInnerWidth","Message","sender","text","date","isOwner","style","cursor","editMessageText","editMessageId","messageId","ChatContentBody","chatBodyRef","sendMessageType","on","deleteMessage","toString","scroll","scrollHeight","off","ChatContentFooter","messageRef","sendMessage","isJoined","onKeyPress","key","ChatContent","CreateNewRoom","roomNameRef","roomPictureRef","roomName","mimetype","validateCreateRoomReq","EditProfile","validateEditProfileReq","ChangePassword","oldPasswordRef","newPasswordRef","confirmNewPasswordRef","oldPassword","newPassword","confirmNewPassword","validateChangePasswordReq","Member","member","isOnline","lastSeen","RoomInfo","EditGroup","validateEditGroupReq","MyModal","showModal","modalContent","Modal","onHide","centered","RootPage","then","AuthPage","loadingPage","setTimeout","response","ChatPage","showChats","handleWindowSize","io","query","removeEventListener","Row","Col","lg","md","initialState","innerWidth","settingReducer","action","userReducer","roomsReducer","roomReducer","messagesReducer","messageIndex","findIndex","deleteMessageIndex","splice","rootReducer","combineReducers","membersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa36174e.chunk.js","sourcesContent":["import { Spinner } from 'react-bootstrap';\r\n\r\nexport const Loading = () => (\r\n    <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n        <Spinner animation=\"border\" variant=\"secondary\" />\r\n    </div>\r\n);","export const ENDPOINT = 'https://shayanchat.herokuapp.com/';\r\nexport const namePattern = /^[A-Za-z\\u0600-\\u06FF\\s]+$/;\r\nexport const emailPattern =/^\\S+@\\S+.\\S+$/;\r\nexport const usernamePattern = /^[A-Za-z][A-Za-z0-9]*$/;\r\nexport const imageMaxSize = 1048576;","import axios from 'axios';\r\n\r\nexport const signup = data => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"email\", data.email);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"password\", data.password);\r\n    formData.append(\"profilePicture\", data.profilePicture);\r\n    return axios.post('/api/auth/signup', formData);\r\n};\r\n\r\nexport const signin = data => axios.post('/api/auth/signin', data);\r\n\r\nexport const verifyUser = async () => {\r\n    try {\r\n        const token = localStorage.getItem('SCA_TOKEN');\r\n        if(token) {\r\n            const { data } = await axios.get('/api/auth', { headers: { Authorization: `Bearer ${token}` } });\r\n            if(data.success) return { success: true, user: data.user };\r\n            else return { success: false };\r\n        } else return { success: false };\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n};","import Swal from 'sweetalert2';\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 5000,\r\n    timerProgressBar: true,\r\n    didOpen: toast => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer);\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n    }\r\n});\r\n\r\nexport const makeToast = (type, message) => {\r\n    Toast.fire({\r\n        icon: type,\r\n        title: message\r\n    });\r\n};","export const SET_LOADING_PAGE = '[SETTING]SET_LOADING_PAGE';\r\nexport const SET_LOADING_FORM = '[SETTING]SET_LOADING_FORM';\r\nexport const SELECT_MENU_ITEM = '[SETTING]SELECT_MENU_ITEM';\r\nexport const SET_SHOW_MODAL = '[SETTING]SET_SHOW_MODAL';\r\nexport const SET_MODAL_CONTENT = '[SETTING]SET_MODAL_CONTENT';\r\nexport const SET_SHOW_CHATS = '[SETTING]SET_SHOW_CHATS';\r\nexport const SET_IS_REGISTERED = '[SETTING]SET_IS_REGISTERED';\r\nexport const SET_SEND_MESSAGE_TYPE = '[SETTING]SET_SEND_MESSAGE_TYPE';\r\nexport const SET_EDIT_MESSAGE_ID = '[SETTING]SET_EDIT_MESSAGE_ID';\r\nexport const SET_EDIT_MESSAGE_TEXT = '[SETTING]SET_EDIT_MESSAGE_TEXT';\r\nexport const SET_WINDOW_INNERWIDTH = '[SETTING]SET_WINDOW_INNERWIDTH';\r\nexport const SET_SOCKET = '[SETTING]SET_SOCKET';","import { SET_LOADING_PAGE, SET_LOADING_FORM, SELECT_MENU_ITEM, SET_SHOW_MODAL, SET_MODAL_CONTENT, SET_SHOW_CHATS, SET_IS_REGISTERED, SET_SEND_MESSAGE_TYPE, SET_EDIT_MESSAGE_ID, SET_EDIT_MESSAGE_TEXT, SET_WINDOW_INNERWIDTH, SET_SOCKET } from './types';\r\n\r\nexport const setLoadingPage = isLoading => {\r\n    return { type: SET_LOADING_PAGE, payload: isLoading };\r\n};\r\n\r\nexport const setLoadingForm = isLoading => {\r\n    return { type: SET_LOADING_FORM, payload: isLoading };\r\n};\r\n\r\nexport const selectMenuItem = itemName => {\r\n    return { type: SELECT_MENU_ITEM, payload: itemName };\r\n};\r\n\r\nexport const setShowModal = isShow => {\r\n    return { type: SET_SHOW_MODAL, payload: isShow };\r\n};\r\n\r\nexport const setModalContent = content => {\r\n    return { type: SET_MODAL_CONTENT, payload: content };\r\n};\r\n\r\nexport const setShowChats = isShow => {\r\n    return { type: SET_SHOW_CHATS, payload: isShow };\r\n};\r\n\r\nexport const setIsRegistered = isRegister => {\r\n    return { type: SET_IS_REGISTERED, payload: isRegister };\r\n};\r\n\r\nexport const setSendMessageType = typeNumber => {\r\n    return { type: SET_SEND_MESSAGE_TYPE, payload: typeNumber };\r\n};\r\n\r\nexport const setEditMessageId = editMessageId => {\r\n    return { type: SET_EDIT_MESSAGE_ID, payload: editMessageId };\r\n};\r\n\r\nexport const setEditMessageText = editMessageText => {\r\n    return { type: SET_EDIT_MESSAGE_TEXT, payload: editMessageText };\r\n};\r\n\r\nexport const setInnerWidth = () => {\r\n    return { type: SET_WINDOW_INNERWIDTH };\r\n};\r\n\r\nexport const setSocket = socket => {\r\n    return { type: SET_SOCKET, payload: socket };\r\n};\r\n","export const SET_USER_DATA = '[USER]SET_USER_DATA';","import { SET_USER_DATA } from './types';\r\n\r\nexport const setUserData = userData => {\r\n    return { type: SET_USER_DATA, payload: userData };\r\n};","export const SEND_REQUEST = '[ROOMS]SEND_REQUEST'\r\nexport const REQUEST_SUCCESS = '[ROOMS]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[ROOMS]REQUEST_FAILURE';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = rooms => {\r\n    return { type: REQUEST_SUCCESS, payload: rooms };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getRooms = (socket, search) => {\r\n    return dispatch => {\r\n        const data = (search && search !== '') ? search : {};\r\n        dispatch(sendRequest());\r\n        socket.emit('get rooms', data, ({ success, rooms, error }) => {\r\n            if(success) dispatch(requestSuccess(rooms));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};","export const SEND_REQUEST = '[ROOM]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[ROOM]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[ROOM]REQUEST_FAILURE';\r\nexport const RESET_ROOM = '[ROOM]RESET_ROOM';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, RESET_ROOM } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = room => {\r\n    return { type: REQUEST_SUCCESS, payload: room };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const resetRoom = () => {\r\n    return { type: RESET_ROOM };\r\n};\r\n\r\nexport const getRoom = (socket, id) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get room', { id }, ({ success, room, error }) => {\r\n            if(success) dispatch(requestSuccess(room));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};","export const SEND_REQUEST = '[MEMBERS]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[MEMBERS]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[MEMBERS]REQUEST_FAILURE';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = members => {\r\n    return { type: REQUEST_SUCCESS, payload: members };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getRoomMembers = (socket, id) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get room members', { id }, ({ success, members, error }) => {\r\n            if(success) dispatch(requestSuccess(members));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};","export const SEND_REQUEST = '[MESSAGES]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[MESSAGES]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[MESSAGES]REQUEST_FAILURE';\r\nexport const NEW_MESSAGE = '[MESSAGES]NEW_MESSAGE';\r\nexport const UPDATE_MESSAGE = '[MESSAGES]UPDATE_MESSAGE';\r\nexport const DELETE_MESSAGE = '[MESSAGES]DELETE_MESSAGE';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, NEW_MESSAGE, UPDATE_MESSAGE, DELETE_MESSAGE } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = messages => {\r\n    return { type: REQUEST_SUCCESS, payload: messages };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getMessages = (socket, roomId) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get messages', { roomId }, ({ success, messages, error }) => {\r\n            if(success) dispatch(requestSuccess(messages));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const addNewMessage = newMessage => {\r\n    return { type: NEW_MESSAGE, payload: newMessage };\r\n};\r\n\r\nexport const changeMessage = updateMessage => {\r\n    return { type: UPDATE_MESSAGE, payload: updateMessage };\r\n};\r\n\r\nexport const removeMessage = deleteMessageId => {\r\n    return { type: DELETE_MESSAGE, payload: deleteMessageId };\r\n};","import { useState } from 'react';\r\nimport { FaUser, FaGlobe, FaAt, FaPen, FaKey, FaFileImage, FaEye, FaEyeSlash } from 'react-icons/fa';\r\n\r\nconst Input = ({ item }) => {\r\n    \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    \r\n    return (\r\n        <div className={ item.type === 'checkbox' ? \"checkBox\" : \"formGroup\" }>\r\n            <span className=\"inputIcon\" title={item.title}>\r\n                { item.name === 'name' && <FaUser /> }\r\n                { item.name === 'email' && <FaGlobe /> }\r\n                { item.name === 'username' && <FaAt /> }\r\n                { item.name === 'roomName' && <FaPen /> }\r\n                { new RegExp('password', 'i').test(item.name) && <FaKey /> }\r\n                { new RegExp('picture', 'i').test(item.name) && <FaFileImage /> }\r\n            </span>\r\n            <input \r\n                className={ \r\n                    item.type === 'file' \r\n                        ? \"input file\" \r\n                        : item.type === 'checkbox' ? \"ml-2\" : \"input\" \r\n                } \r\n                type={\r\n                    new RegExp('password', 'i').test(item.name)\r\n                        ? showPassword ? \"text\" : \"password\"\r\n                        : item.type\r\n                } \r\n                placeholder={item.placeholder} \r\n                ref={item.fieldRef}\r\n                accept={ item.type === 'file' && new RegExp('picture', 'i').test(item.name) ? \"image/*\" : null }\r\n            />\r\n            { \r\n                new RegExp('password', 'i').test(item.name)\r\n                    ? showPassword \r\n                        ? <FaEye className=\"eyeIcon\" onClick={() => setShowPassword(false)} /> \r\n                        : <FaEyeSlash className=\"eyeIcon\" onClick={() => setShowPassword(true)} />\r\n                    : null \r\n            }\r\n            { item.type === 'checkbox' &&  <label className=\"lbl\">{item.placeholder}</label> }\r\n        </div>\r\n    );\r\n};\r\n    \r\nexport default Input;","import { useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport './form.css';\r\nimport Input from './input';\r\n\r\nconst MyForm = ({ name, items, submitHandler }) => {\r\n    \r\n    const loading = useSelector(state => state.setting.loadingForm);\r\n\r\n    return (\r\n        <Form className=\"d-flex flex-column\" onSubmit={submitHandler}>\r\n            {\r\n                items.map((item, index) => {\r\n                    return <Input key={index} item={item} />\r\n                })\r\n            }\r\n            <Button type=\"submit\" disabled={loading ? \"disabled\" : \"\"}>{name}</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default MyForm;","import { useRef, useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { validateSigninReq, makeToast } from '../../services';\r\nimport { setIsRegistered } from '../../redux';\r\nimport MyForm from '../form';\r\n\r\nexport const SigninForm = ({ submitHandler }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const usernameRef = useRef('');\r\n    const passwordRef = useRef('');\r\n    const remindMeRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const username = localStorage.getItem('SCA_USERNAME');\r\n        const password = localStorage.getItem('SCA_PASSWORD');\r\n        if(username && password) {\r\n            usernameRef.current.value = username;\r\n            passwordRef.current.value = password;\r\n            remindMeRef.current.checked = true;\r\n        }\r\n    }, []);\r\n\r\n    const signin = e => {\r\n        e.preventDefault();\r\n        const data = { username: usernameRef.current.value.trim(), password: passwordRef.current.value.trim() };\r\n        const { success, message } = validateSigninReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            if(remindMeRef.current.checked) {\r\n                localStorage.setItem('SCA_USERNAME', data.username);\r\n                localStorage.setItem('SCA_PASSWORD', data.password);\r\n            } else {\r\n                localStorage.removeItem('SCA_USERNAME');\r\n                localStorage.removeItem('SCA_PASSWORD');\r\n            }\r\n            submitHandler(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"auth-card\">\r\n                <MyForm \r\n                    name=\"ورود\"\r\n                    items={[\r\n                        { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef },\r\n                        { name: 'password', type: 'password', title: 'رمزعبور', placeholder: 'رمزعبور خود را وارد کنید', fieldRef: passwordRef },\r\n                        { name: 'remindMe', type: 'checkbox', placeholder: 'من را به خاطر بسپار', fieldRef: remindMeRef }\r\n                    ]}\r\n                    submitHandler={signin}\r\n                />\r\n                <div className=\"formActions\">\r\n                    <span className=\"formAction ml-1\">بازیابی رمزعبور</span>\r\n                    /\r\n                    <span className=\"formAction mr-1\" onClick={() => dispatch(setIsRegistered(false))}>ثبت‌نام</span>\r\n                </div>\r\n            </Card>          \r\n        </div>\r\n    );\r\n};","import { namePattern, emailPattern, usernamePattern, imageMaxSize } from './constants';\r\n\r\nexport const validateSignupReq = data => {\r\n    if(data.name === '') return { success: false, message: 'نام خود را وارد کنید' };\r\n    else if(!namePattern.test(data.name) || !(data.name.length>=3)) \r\n        return { success: false, message: 'لطفا نام خود را به صورت صحیح وارد کنید' };\r\n    \r\n    else if(data.email === '') return { success: false, message: 'ایمیل خود را وارد کنید' };\r\n    else if(!emailPattern.test(data.email)) \r\n        return { success: false, message: 'لطفا یک ایمیل معتبر وارد کنید' };\r\n    \r\n    else if(data.username === '') return { success: false, message: 'نام‌کاربری خود را وارد کنید' };\r\n    else if(!usernamePattern.test(data.username)) \r\n        return { success: false, message: 'نام‌کاربری می‌تواند شامل حروف لاتین و اعداد باشد' };\r\n    \r\n    else if(data.password === '') return { success: false, message: 'رمزعبور خود را وارد کنید' };\r\n    else if(data.password.length<8) \r\n        return { success: false, message: 'رمزعبور باید حداقل شامل 8 کاراکتر باشد' };\r\n    \r\n    else if(data.confirmPassword !== data.password) return { success: false, message: 'رمزعبور و تکرار آن یکسان نیست' };\r\n    \r\n    else if(data.profilePicture && !(data.profilePicture.type === 'image/jpeg' || data.profilePicture.type === 'image/jpg' || data.profilePicture.type === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.profilePicture && data.profilePicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateSigninReq = data => {\r\n    if(data.username === '') return { success: false, message: 'نام‌کاربری خود را وارد کنید' };\r\n    else if(!usernamePattern.test(data.username)) return { success: false, message: 'نام‌کاربری یا رمزعبور نامعتبر است' };\r\n    else if(data.password === '') return { success: false, message: 'رمزعبور خود را وارد کنید' };\r\n    else if(data.password.length<8) return { success: false, message: 'نام‌کاربری یا رمزعبور نامعتبر است' };\r\n    else return { success: true }\r\n};\r\n\r\nexport const validateCreateRoomReq = data => {\r\n    if(data.roomName === '') return { success: false, message: 'نام گروه را وارد کنید' };\r\n    \r\n    else if(data.roomPicture.data && !(data.roomPicture.mimetype === 'image/jpeg' || data.roomPicture.mimetype === 'image/jpg' || data.roomPicture.mimetype === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.roomPicture.data && data.roomPicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateEditProfileReq = data => {\r\n    if( (data.name !== '') && (!namePattern.test(data.name) || !(data.name.length>=3))) \r\n        return { success: false, message: 'لطفا نام خود را به صورت صحیح وارد کنید' };\r\n\r\n    else if( data.email !== '' && !emailPattern.test(data.email) ) \r\n        return { success: false, message: 'لطفا یک ایمیل معتبر وارد کنید' };\r\n\r\n    else if( data.username !== '' && !usernamePattern.test(data.username) ) \r\n        return { success: false, message: 'نام‌کاربری می‌تواند شامل حروف لاتین و اعداد باشد' };\r\n    \r\n    else return { success: true };\r\n};\r\n\r\nexport const validateChangePasswordReq = data => {\r\n    if(data.oldPassword === '') return { success: false, message: 'رمزعبور فعلی خود را وارد کنید' };\r\n    \r\n    else if(data.newPassword === '') return { success: false, message: 'رمزعبور جدید خود را وارد کنید' };\r\n    else if(data.newPassword.length<8) \r\n        return { success: false, message: 'رمزعبور باید حداقل شامل 8 کاراکتر باشد' };\r\n    \r\n    else if(data.confirmNewPassword !== data.newPassword) return { success: false, message: 'رمزعبور و تکرار آن یکسان نیست' };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateEditGroupReq = data => {\r\n    if(data.roomPicture.data && !(data.roomPicture.mimetype === 'image/jpeg' || data.roomPicture.mimetype === 'image/jpg' || data.roomPicture.mimetype === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.roomPicture.data && data.roomPicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n    else return { success: true };\r\n};","import { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { validateSignupReq, makeToast } from '../../services';\r\nimport MyForm from '../form';\r\nimport { setIsRegistered } from '../../redux';\r\n\r\nexport const SignupForm = ({ submitHandler }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const usernameRef = useRef('');\r\n    const passwordRef = useRef('');\r\n    const confirmPasswordRef = useRef('');\r\n    const profilePictureRef = useRef('');\r\n    \r\n    const signup = e => {\r\n        e.preventDefault();\r\n        const data = { \r\n            name: nameRef.current.value.trim(),\r\n            email: emailRef.current.value.trim(),\r\n            username: usernameRef.current.value.trim(),\r\n            password: passwordRef.current.value.trim(),\r\n            confirmPassword: confirmPasswordRef.current.value.trim(),\r\n            profilePicture: profilePictureRef.current.files[0]\r\n        };\r\n        const { success, message } = validateSignupReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else submitHandler(data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"auth-card\">\r\n                <MyForm \r\n                    name=\"ثبت‌نام\"\r\n                    items={[\r\n                        { name: 'name', type: 'text', title: 'نام‌', placeholder: 'نام‌ و نام‌خانوادگی خود را وارد کنید', fieldRef: nameRef },\r\n                        { name: 'email', type: 'email', title: 'ایمیل', placeholder: 'ایمیل خود را وارد کنید', fieldRef: emailRef },\r\n                        { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef },\r\n                        { name: 'password', type: 'password', title: 'رمزعبور', placeholder: 'رمزعبور خود را وارد کنید', fieldRef: passwordRef },\r\n                        { name: 'confirmPassword', type: 'password', title: 'تکرار رمزعبور', placeholder: 'رمزعبور خود را تکرار کنید', fieldRef: confirmPasswordRef },\r\n                        { name: 'profilePicture', type: 'file', title: 'تصویر پروفایل', fieldRef: profilePictureRef }\r\n                    ]}\r\n                    submitHandler={signup}\r\n                /> \r\n                <div className=\"formActions\">\r\n                    <span className=\"formAction\" onClick={() => dispatch(setIsRegistered(true))}>ورود</span>\r\n                </div>\r\n            </Card>          \r\n        </div>\r\n    );\r\n};","import { FaRegUserCircle, FaRegCommentDots, FaSignOutAlt } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectMenuItem, setSocket, resetRoom } from '../../redux';\r\n\r\nimport './menu.css';\r\n\r\nexport const MenuBar = ({ history }) => {\r\n\r\n    const { selectedMenuItem, socket } = useSelector(state => {\r\n        return { selectedMenuItem: state.setting.selectedMenuItem, socket: state.setting.socket };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        socket.disconnect(0);\r\n        dispatch(setSocket(null));\r\n        dispatch(resetRoom());\r\n        localStorage.removeItem('SCA_TOKEN');\r\n        history.push('/auth');\r\n    };\r\n\r\n    return (\r\n        <div className=\"menu-bar\">\r\n            <h1 className=\"brand\">ShayanChat</h1>\r\n            <div className=\"icons-container\">\r\n                <div \r\n                    className={ selectedMenuItem === 'profile' ? \"icon active\" : \"icon\" } \r\n                    onClick={() => dispatch(selectMenuItem('profile'))}\r\n                    title=\"پروفایل\"\r\n                >\r\n                    <FaRegUserCircle />\r\n                </div>\r\n                <div \r\n                    className={ selectedMenuItem === 'chats' ? \"icon active\" : \"icon\" }\r\n                    onClick={() => dispatch(selectMenuItem('chats'))}    \r\n                    title=\"چت‌ها\"\r\n                >\r\n                    <FaRegCommentDots />\r\n                </div>\r\n                <div className=\"icon\" title=\"خروج\" onClick={logout}>\r\n                    <FaSignOutAlt />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRooms } from '../../redux';\r\n\r\nimport './searchBox.css';\r\n\r\nconst SearchBox = () => {\r\n\r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n    \r\n    const searchRef = useRef('');\r\n\r\n    const search = () => {\r\n        dispatch(getRooms(socket, { search: searchRef.current.value.trim() }));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"search-box\">\r\n            <input className=\"input\" type=\"text\" placeholder=\"جستجو ...\" ref={searchRef} onChange={search} />\r\n            <FaSearch className=\"icon\" onClick={search} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import { FaPlusSquare } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setModalContent, setShowModal } from '../../redux';\r\n\r\nconst ChatListHeader = () => {    \r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const showCreateRoomModal = () => {\r\n        dispatch(setModalContent('createNewRoom'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-list-header\">\r\n            <h3>چت‌ها</h3>\r\n            <span className=\"plus-icon\" title=\"ساخت گروه جدید\" onClick={showCreateRoomModal}>\r\n                <FaPlusSquare />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatListHeader;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { ENDPOINT } from '../../services';\r\nimport { getRoom, setShowChats } from '../../redux';\r\n\r\nconst ChatItem = ({ room, active }) => {\r\n\r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const setRoom = () => {\r\n        dispatch(getRoom(socket, room.id));\r\n        dispatch(setShowChats(true));\r\n    };\r\n\r\n    return (\r\n        <div onClick={setRoom} className={ active ? \"chat-item active\" : \"chat-item\"}>\r\n            <div className=\"chat-item-info\">\r\n                <div className=\"picture-container\">\r\n                    <img className=\"picture\" src={ room.roomPicture ? `${ENDPOINT}/roomPictures/${room.roomPicture}` : \"/images/room.jpg\"} alt={room.name} />\r\n                </div>\r\n                <div className=\"text-container\">\r\n                    <span className=\"name\">{room.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatItem;","import { Fragment, useEffect } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRooms } from '../../redux';\r\nimport SearchBox from '../searchBox';\r\n\r\nimport './chatList.css';\r\nimport ChatListHeader from './chatListHeader';\r\nimport ChatItem from './chatItem';\r\n\r\nexport const ChatList = () => {\r\n\r\n    const { socket, rooms, currentRoom } = useSelector(state => {\r\n        return { socket: state.setting.socket, rooms: state.rooms, currentRoom: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            dispatch(getRooms(socket));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [socket]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <ChatListHeader />\r\n            <SearchBox />\r\n            <div className={rooms.loading ? \"chat-list text-center\" : \"chat-list\"}>\r\n                {\r\n                    rooms.loading\r\n                        ? \r\n                            <Spinner animation=\"border\" variant=\"secondary\" />\r\n                        :\r\n                            <Fragment>\r\n                                {\r\n                                    rooms.data.map(room => {\r\n                                        return <ChatItem key={room.id} room={room} active={ currentRoom.id === room.id ? true : false } />\r\n                                    })\r\n                                }\r\n                            </Fragment>    \r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};","import { Fragment, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaEllipsisV, FaRegEdit, FaKey, FaRegTrashAlt } from 'react-icons/fa';\r\n\r\nimport { ENDPOINT, makeToast } from '../../services';\r\nimport { setModalContent, setShowModal, setSocket } from '../../redux';\r\nimport './profile.css';\r\n\r\nexport const Profile = ({ history }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const { socket, user } = useSelector(state => {\r\n        return { socket: state.setting.socket, user: state.user};\r\n    });\r\n    const dispatch = useDispatch();\r\n    \r\n    const showEditProfileForm = () => {\r\n        dispatch(setModalContent('editProfile'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const showChangePasswordForm = () => {\r\n        dispatch(setModalContent(\"changePassword\"));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const deleteAccount = () => {\r\n        const isConfirm = window.confirm(\"آیا از حذف حساب کاربری خود اطمینان دارید؟\");\r\n        if(isConfirm) {\r\n            socket.emit('delete acount', ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    localStorage.removeItem('SCA_TOKEN');\r\n                    socket.disconnect(0);\r\n                    dispatch(setSocket(null));\r\n                    history.push('/auth');\r\n                    makeToast('success', message);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"profile-header\">\r\n                <h3>پروفایل</h3>\r\n                <div className=\"actions-container\">\r\n                    <FaEllipsisV className=\"action-icon\" onClick={() => setShow(!show)} />\r\n                    <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                        <span className=\"action\" onClick={showEditProfileForm}><FaRegEdit className=\"ml-2\" />ویرایش پروفایل</span>\r\n                        <span className=\"action\" onClick={showChangePasswordForm}><FaKey className=\"ml-2\" />تغییر رمزعبور</span>\r\n                        <span className=\"action\" onClick={deleteAccount}><FaRegTrashAlt className=\"ml-2\" />حذف حساب کاربری</span>\r\n                    </div>\r\n                </div>       \r\n            </div>\r\n            <div className=\"profile-info\">\r\n                <div className=\"picture-container\">\r\n                    <img \r\n                        className=\"picture\" \r\n                        src={ user.profilePicture ? `${ENDPOINT}/profilePictures/${user.profilePicture}` : '/images/user.png' } \r\n                        alt={user.name} \r\n                    />\r\n                </div>\r\n                <span className=\"name\">{user.name}</span>\r\n            </div>\r\n            <div className=\"profile-detail\">\r\n                <div className=\"header\">\r\n                    <span>مشخصات</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">نام</span>\r\n                    <span>{user.name}</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">ایمیل</span>\r\n                    <span>{user.email}</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">نام‌کاربری</span>\r\n                    <span>{user.username}</span>                    \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { FaAngleRight, FaEllipsisV } from 'react-icons/fa';\r\nimport { setShowChats, setShowModal, setModalContent } from '../../redux';\r\nimport { ENDPOINT } from '../../services';\r\n\r\nconst ChatContentHeader = () => {\r\n\r\n    const { windowInnerWidth, room } = useSelector(state => {\r\n        return { windowInnerWidth: state.setting.windowInnerWidth, room: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const showRoomInfo = () => {\r\n        dispatch(setModalContent('roomInfo'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"right-side\">\r\n                { windowInnerWidth<768 && <FaAngleRight className=\"back-icon\" onClick={() => dispatch(setShowChats(false))} /> }\r\n                <img \r\n                    className=\"picture\"\r\n                    src={ room.roomPicture ? `${ENDPOINT}/roomPictures/${room.roomPicture}` : '/images/room.jpg'}\r\n                    alt={room.name}\r\n                />\r\n                <span className=\"font-weight-bold\">{room.name}</span>\r\n            </div>\r\n            <FaEllipsisV onClick={showRoomInfo} className=\"ellipsis-icon\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentHeader;","import { useState } from 'react';\r\nimport { FaEllipsisV, FaRegClock } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setEditMessageId, setSendMessageType, setEditMessageText } from '../../redux';\r\nimport { ENDPOINT } from '../../services';\r\n\r\nconst Message = ({ message }) => {\r\n    \r\n    const [show, setShow] = useState(false);\r\n\r\n    const { socket, room } = useSelector(state => { \r\n        return { socket: state.setting.socket, room: state.room.data }\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const editMessage = () => {\r\n        dispatch(setSendMessageType(1));\r\n        dispatch(setEditMessageText(message.text))\r\n        dispatch(setEditMessageId(message.id));\r\n        setShow(false);\r\n    };\r\n\r\n    const deleteMessage = () => {\r\n        const isConfirm = window.confirm('آیا از حذف پیام اطمینان دارید؟');\r\n        if(isConfirm) socket.emit('delete message', { roomId: room.id, messageId: message.id });\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"message-container\">\r\n            <img \r\n                className=\"picture\" \r\n                src={ message.sender.profilePicture ? `${ENDPOINT}/profilePictures/${message.sender.profilePicture}` : \"/images/user.png\"} \r\n                alt={ message.sender.name } \r\n            />\r\n            <div className=\"message-text\">\r\n                <span className=\"name\">{ message.sender.name }</span>\r\n                <span className=\"message\">{message.text}</span>\r\n                <span className=\"time\"><FaRegClock /> {message.date}</span>\r\n            </div>\r\n            {\r\n                message.isOwner &&\r\n                <div className=\"actions-container\">\r\n                    <FaEllipsisV style={{ cursor: 'pointer' }} onClick={() => setShow(!show)} />\r\n                    <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                        <span className=\"action\" onClick={editMessage}>ویرایش</span>\r\n                        <span className=\"action\" onClick={deleteMessage}>حذف</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>          \r\n    );\r\n};\r\n\r\nexport default Message;","import { Fragment, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { Loading } from '../';\r\nimport { getMessages, setSendMessageType, addNewMessage, changeMessage, removeMessage } from '../../redux';\r\nimport Message from './message';\r\n\r\nconst ChatContentBody = () => {\r\n    \r\n    const chatBodyRef = useRef();\r\n    const { socket, user, messages, room, sendMessageType, editMessageText } = useSelector(state => {\r\n        return { socket: state.setting.socket, user: state.user, messages: state.messages, room: state.room, sendMessageType: state.setting.sendMessageType, editMessageText: state.setting.editMessageText };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            dispatch(getMessages(socket, room.data.id));  \r\n            socket.on('new message', async ({ roomId, newMessage, updateMessage, deleteMessage }) => {\r\n                try {\r\n                    if(roomId.toString() === room.data.id.toString()) {\r\n                        if(newMessage) {\r\n                            newMessage.isOwner = (newMessage.sender.email===user.email) ? true : false;\r\n                            dispatch(addNewMessage(newMessage));\r\n                            chatBodyRef.current.scroll(0, chatBodyRef.current.scrollHeight);\r\n                        } else if(updateMessage) {\r\n                            updateMessage.isOwner = (updateMessage.sender.email===user.email) ? true : false;\r\n                            dispatch(changeMessage(updateMessage));\r\n                        } else if(deleteMessage) dispatch(removeMessage(deleteMessage));\r\n                    }\r\n                } catch(error) {}\r\n            });  \r\n        }  \r\n        return () => {\r\n            dispatch(setSendMessageType(0));\r\n            socket.off('new message');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        chatBodyRef.current.scroll(0, chatBodyRef.current.scrollHeight);\r\n    }, [messages.data]);\r\n\r\n    return (\r\n        <div ref={chatBodyRef} className=\"body\">\r\n            {\r\n                messages.loading ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            {\r\n                                messages.data &&\r\n                                messages.data.map(message => {\r\n                                    return <Message key={message.id} message={message} />\r\n                                })\r\n                            }\r\n                            {\r\n                                sendMessageType === 1 &&\r\n                                <div className=\"edit-box\">\r\n                                    <FaTimes style={{ cursor: \"pointer\" }} onClick={() => dispatch(setSendMessageType(0))} />\r\n                                    <span className=\"edit-box-text text-muted\">{editMessageText}</span>\r\n                                </div>\r\n                            }\r\n                        </Fragment>    \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentBody;","import { useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaPaperPlane } from 'react-icons/fa';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { makeToast } from '../../services';\r\nimport { getRooms, getRoom, setSendMessageType } from '../../redux';\r\n\r\nconst ChatContentFooter = () => {\r\n    \r\n    const messageRef = useRef('');\r\n\r\n    const { socket, room, sendMessageType, editMessageId, editMessageText } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room.data, sendMessageType: state.setting.sendMessageType,\r\n                editMessageId: state.setting.editMessageId, editMessageText: state.setting.editMessageText };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(sendMessageType === 1 && messageRef.current) messageRef.current.value = editMessageText;\r\n        else if(messageRef.current) messageRef.current.value = '';\r\n        // eslint-disable-next-line\r\n    }, [sendMessageType, editMessageId]);\r\n\r\n    const joinToGroup = () => {\r\n        socket.emit('join room', ({ id: room.id }), ({ success, message }) => {\r\n            if(!success) makeToast('error', message);\r\n            else makeToast('success', message);\r\n            dispatch(getRooms(socket));\r\n            dispatch(getRoom(socket, room.id ));\r\n        });\r\n    };\r\n\r\n    const keyPressHandler = e => {\r\n        e.key === 'Enter' && sendMessage(); \r\n    };\r\n\r\n    const sendMessage = () => {\r\n        const message = messageRef.current.value.trim();\r\n        if(message) {\r\n            if(sendMessageType === 0) socket.emit('send message', { message, roomId: room.id });\r\n            else socket.emit('edit message', { message, roomId: room.id, messageId: editMessageId });\r\n            dispatch(setSendMessageType(0));\r\n            messageRef.current.value = '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            {\r\n                room.isJoined \r\n                    ?\r\n                        <div className=\"chat-box\">\r\n                            <input className=\"input\" onKeyPress={keyPressHandler} ref={messageRef} />\r\n                            <FaPaperPlane className=\"mr-1\" style={{cursor: 'pointer'}} onClick={sendMessage} />\r\n                        </div>\r\n                    :\r\n                        <Button className=\"w-100\" onClick={joinToGroup}>عضویت در گروه</Button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentFooter;","import './chatContent.css';\r\nimport ChatContentHeader from './header';\r\nimport ChatContentBody from './body';\r\nimport ChatContentFooter from './footer';\r\n\r\nexport const ChatContent = () => {\r\n    return (\r\n        <div className=\"chat-content-container\">\r\n            <ChatContentHeader />\r\n            <ChatContentBody />\r\n            <ChatContentFooter />\r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateCreateRoomReq, makeToast } from '../../services';\r\nimport { setLoadingForm, setShowModal, getRooms } from '../../redux';\r\n\r\nconst CreateNewRoom = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const roomNameRef = useRef('');\r\n    const roomPictureRef = useRef('');\r\n\r\n    const createNewRoom = e => {\r\n        e.preventDefault();\r\n        const data = { \r\n            roomName: roomNameRef.current.value.trim(), \r\n            roomPicture: {\r\n                data: roomPictureRef.current.files[0],\r\n                name: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].name : null,\r\n                mimetype: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].type : null,\r\n                size: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].size : null\r\n            } \r\n        };\r\n        const { success, message } = validateCreateRoomReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('create new room', data, ({ success, message }) => {\r\n                if(success) {\r\n                    dispatch(setShowModal(false));\r\n                    dispatch(getRooms(socket));\r\n                    makeToast('success', message);\r\n                }\r\n                else makeToast('error', message);\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ایجاد گروه جدید</h6>\r\n            <MyForm \r\n                name='ایجاد گروه جدید'\r\n                items={[\r\n                    { name: 'roomName', type: 'text', title: 'نام گروه', placeholder: 'نام گروه را وارد کنید', fieldRef: roomNameRef },\r\n                    { name: 'roomPicture', type: 'file', title: 'تصویر گروه', fieldRef: roomPictureRef }\r\n                ]}\r\n                submitHandler={createNewRoom}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateNewRoom;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateEditProfileReq, makeToast } from '../../services';\r\nimport { setShowModal, setUserData, setLoadingForm } from '../../redux';\r\n\r\nconst EditProfile = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const usernameRef = useRef('');\r\n    \r\n    const editProfile = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            name: nameRef.current.value.trim(),\r\n            email: emailRef.current.value.trim(),\r\n            username: usernameRef.current.value.trim()\r\n        };\r\n        const { success, message } = validateEditProfileReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else if(data.name || data.email || data.username) {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('edit profile', data, ({ success, message, user }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setUserData(user));\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ویرایش پروفایل</h6>\r\n            <MyForm \r\n                name=\"ویرایش\"\r\n                items={[\r\n                    { name: 'name', type: 'text', title: 'نام‌', placeholder: 'نام‌ خود را وارد کنید', fieldRef: nameRef },\r\n                    { name: 'email', type: 'email', title: 'ایمیل', placeholder: 'ایمیل خود را وارد کنید', fieldRef: emailRef },\r\n                    { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef }\r\n                ]}\r\n                submitHandler={editProfile}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfile;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateChangePasswordReq, makeToast } from '../../services';\r\nimport { setShowModal, setLoadingForm } from '../../redux';\r\n\r\nconst ChangePassword = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const oldPasswordRef = useRef('');\r\n    const newPasswordRef = useRef('');\r\n    const confirmNewPasswordRef = useRef('');\r\n\r\n    const changePassword = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            oldPassword: oldPasswordRef.current.value.trim(),\r\n            newPassword: newPasswordRef.current.value.trim(),\r\n            confirmNewPassword: confirmNewPasswordRef.current.value.trim()\r\n        };\r\n        const { success, message } = validateChangePasswordReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('change password', data, ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">تغییر رمزعبور</h6>\r\n            <MyForm \r\n                name=\"تغییر رمزعبور\"\r\n                items={[\r\n                    { name: 'oldPassword', type: 'password', title: 'رمزعبور فعلی', placeholder: 'رمزعبور فعلی را وارد کنید', fieldRef: oldPasswordRef },\r\n                    { name: 'newPassword', type: 'password', title: 'رمزعبور جدید', placeholder: 'رمزعبور جدید را وارد کنید', fieldRef: newPasswordRef },\r\n                    { name: 'confirmNewPassword', type: 'password', title: 'تکرار رمزعبور جدید', placeholder: 'رمزعبور جدید را تکرار کنید', fieldRef: confirmNewPasswordRef }\r\n                ]}\r\n                submitHandler={changePassword}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;","import { ENDPOINT } from '../../services';\r\nimport { FaStar } from 'react-icons/fa';\r\n\r\nconst Member = ({ member }) => {\r\n    return (\r\n        <div className=\"member-container\">\r\n            <div className=\"picture-container\">\r\n                <img \r\n                    className=\"picture\"\r\n                    src={ member.profilePicture ? `${ENDPOINT}/profilePictures/${member.profilePicture}` : '/images/user.png' }\r\n                    alt={ member.name }\r\n                />\r\n                <span className={ member.isOnline ? \"online-badge bg-success\" : \"online-badge bg-secondary\"}></span>\r\n            </div>\r\n            <div className=\"d-flex flex-column\">\r\n                <span>{member.name} { member.isOwner && <FaStar /> }</span>\r\n                <span className=\"text-muted small\">{ member.isOnline ? 'Online' : member.lastSeen }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Member;","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FaEllipsisV, FaRegEdit, FaRegTrashAlt, FaSignOutAlt } from 'react-icons/fa';\r\nimport { getRoomMembers, setLoadingPage } from '../../redux';\r\nimport { ENDPOINT, makeToast } from '../../services';\r\n\r\nimport './roomInfo.css';\r\nimport Member from './member';\r\nimport { setModalContent, setShowModal, getRooms, resetRoom } from '../../redux';\r\n\r\nconst RoomInfo = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const { socket, room, members } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room, members: state.members };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) dispatch(getRoomMembers(socket, room.data.id));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const showEditGroup = () => {\r\n        dispatch(setModalContent('editGroup'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const leaveGroup = () => {\r\n        socket.emit('leave room', ({ id: room.data.id }), ({ success, message }) => {\r\n            if(!success) makeToast('error', message);\r\n            else {\r\n                makeToast(\"success\", message);\r\n                dispatch(getRooms(socket));\r\n                dispatch(setShowModal(false));\r\n                dispatch(resetRoom());\r\n            }\r\n        });\r\n    };\r\n\r\n    const removeGroup = () => {\r\n        const isConfirm = window.confirm('آیا از حذف گروه اطمینان دارید؟');\r\n        if(isConfirm) {\r\n            dispatch(setShowModal(false));\r\n            dispatch(setLoadingPage(true));\r\n            socket.emit('delete room', ({ id: room.data.id }), ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    dispatch(resetRoom({}));\r\n                    dispatch(getRooms(socket));\r\n                    makeToast('success', message);\r\n                }\r\n                dispatch(setLoadingPage(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"room-info-modal\">\r\n            <div className=\"header\">\r\n                <img \r\n                    className=\"room-picture\"\r\n                    src={ room.data.roomPicture ? `${ENDPOINT}/roomPictures/${room.data.roomPicture}` : '/images/room.jpg' }\r\n                    alt={ room.data.name }\r\n                />\r\n                <div className=\"d-flex flex-column text-right\">\r\n                    <span className=\"font-weight-bold\">{room.data.name}</span>\r\n                    <span className=\"text-muted small\">{room.data.id}</span>\r\n                </div>\r\n                {\r\n                    room.data.isJoined &&\r\n                    <div className=\"actions-container\">\r\n                        <FaEllipsisV className=\"action-icon\" onClick={() => setShow(!show)} />\r\n                        <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                            { room.data.isOwner && <span className=\"action\" onClick={showEditGroup}><FaRegEdit className=\"ml-2\" />ویرایش گروه</span>}\r\n                            { room.data.isOwner && <span className=\"action\" onClick={removeGroup}><FaRegTrashAlt className=\"ml-2\" />حذف گروه</span>}\r\n                            { !room.data.isOwner && <span className=\"action\" onClick={leaveGroup}><FaSignOutAlt className=\"ml-2\" />خروج از گروه</span>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                <h6 className=\"px-3 py-2\">اعضای گروه</h6>\r\n                <div className=\"scroller\">\r\n                    {\r\n                        members.loading\r\n                            ?\r\n                            <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n                                <Spinner animation=\"border\" variant=\"secondary\" />\r\n                            </div>\r\n                            :\r\n                            members.data.map((member, index) => {\r\n                                return <Member key={index} member={member} />\r\n                            })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomInfo;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateEditGroupReq, makeToast } from '../../services';\r\nimport { setShowModal, setLoadingForm, getRooms, getRoom } from '../../redux';\r\n\r\nconst EditGroup = () => {\r\n    \r\n    const { socket, room } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const roomPictureRef = useRef();\r\n\r\n    const editGroup = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            id: room.id,\r\n            roomName: nameRef.current.value.trim(),\r\n            roomPicture: {\r\n                data: roomPictureRef.current.files[0],\r\n                name: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].name : null,\r\n                mimetype: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].type : null,\r\n                size: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].size : null\r\n            }\r\n        };\r\n        const { success, message } = validateEditGroupReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else if(data.roomName || data.roomPicture.data){\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('edit room', data, ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    dispatch(getRoom(socket, room.id));\r\n                    dispatch(getRooms(socket));\r\n                    makeToast('success', message);\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ویرایش گروه</h6>\r\n            <MyForm \r\n                name=\"ویرایش\"\r\n                items={[\r\n                    { name: 'roomName', type: 'text', title: 'نام‌ گروه', placeholder: 'نام‌ گروه را وارد کنید', fieldRef: nameRef },\r\n                    { name: 'roomPicture', type: 'file', title: 'تصویر گروه', fieldRef: roomPictureRef }\r\n                ]}\r\n                submitHandler={editGroup}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditGroup;","import { Modal } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setShowModal } from '../../redux';\r\nimport './modal.css';\r\nimport CreateNewRoom from'./createRoom';\r\nimport EditProfile from './editProfile';\r\nimport ChangePassword from './changePassword';\r\nimport RoomInfo from '../roomInfo';\r\nimport EditGroup from './editGroup';\r\n\r\nexport const MyModal = () => {\r\n    \r\n    const { showModal, modalContent } = useSelector(state => {\r\n        return { showModal: state.setting.showModal, modalContent: state.setting.modalContent };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Modal show={showModal} onHide={() => dispatch(setShowModal(false))} centered>\r\n            <div className=\"p-3\">\r\n                { modalContent === 'createNewRoom' && <CreateNewRoom /> }\r\n                { modalContent === 'editProfile' && <EditProfile /> }\r\n                { modalContent === 'changePassword' && <ChangePassword /> }\r\n                { modalContent === 'roomInfo' && <RoomInfo /> }\r\n                { modalContent === 'editGroup' && <EditGroup /> }\r\n            </div>\r\n        </Modal>\r\n    );\r\n};","import { useEffect } from 'react';\r\n\r\nimport { Loading } from '../components';\r\nimport { verifyUser } from '../services';\r\n\r\nexport const RootPage = ({ history }) => {\r\n    \r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success }) => {\r\n                if(success) history.push('/chat');\r\n                else history.push('/auth');\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return <Loading />\r\n};","import { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { SigninForm, SignupForm, Loading } from '../components';\r\nimport { signin, signup, verifyUser, makeToast } from '../services';\r\nimport { setLoadingPage, setLoadingForm, setIsRegistered } from '../redux';\r\n\r\nexport const AuthPage = ({ history }) => {\r\n    \r\n    const { loadingPage, isRegister } = useSelector(state => {\r\n        return { loadingPage: state.setting.loadingPage, isRegister: state.setting.isRegister };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success }) => {\r\n                if(success) history.push('/chat'); \r\n                setTimeout(() => {\r\n                    dispatch(setLoadingPage(false));\r\n                }, 1000);\r\n            });\r\n\r\n        return () => {\r\n            dispatch(setLoadingPage(true));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submitHandler = async data => {\r\n        try {\r\n            dispatch(setLoadingForm(true));\r\n            let response;\r\n            if(data.confirmPassword) {\r\n                response = await signup(data);\r\n                dispatch(setIsRegistered(true));\r\n            } else {\r\n                response = await signin(data);\r\n                localStorage.setItem('SCA_TOKEN', response.data.token);\r\n                history.push('/chat');\r\n            }\r\n            dispatch(setLoadingForm(false));\r\n            makeToast('success', response.data.message);\r\n        } catch (error) {\r\n            dispatch(setLoadingForm(false));\r\n            makeToast('error', error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center text-center justify-content-center h-100\">\r\n            {\r\n                loadingPage\r\n                    ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            <h1 className=\"appBrand mb-3\">ShayanChat</h1>\r\n                            <h3 className=\"mb-3 pb-3\">{ isRegister ? 'ورود' : 'عضویت' }</h3>\r\n                            {\r\n                                isRegister \r\n                                    ? <SigninForm submitHandler={submitHandler} />\r\n                                    : <SignupForm submitHandler={submitHandler} />\r\n                            }\r\n                        </Fragment>\r\n            }\r\n        </div>\r\n    );\r\n};","import { Fragment, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\nimport io from 'socket.io-client';\r\n\r\nimport { MenuBar, ChatList, Profile, ChatContent, Loading } from '../components';\r\nimport { verifyUser } from '../services';\r\nimport { setLoadingPage, setSocket, setUserData, setInnerWidth, setShowChats } from '../redux';\r\n\r\nexport const ChatPage = ({ history }) => {\r\n\r\n    const { loadingPage, selectedMenuItem, showChats, room, windowInnerWidth, socket } = useSelector(state => {\r\n        return { \r\n            loadingPage: state.setting.loadingPage,\r\n            selectedMenuItem: state.setting.selectedMenuItem,\r\n            showChats: state.setting.showChats,\r\n            room: state.room,\r\n            windowInnerWidth: state.setting.windowInnerWidth,\r\n            socket: state.setting.socket \r\n        };\r\n    });\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleWindowSize = () => {\r\n        dispatch(setInnerWidth());\r\n    };\r\n\r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success, user }) => {\r\n                if(!success) history.push('/auth'); \r\n                else {\r\n                    dispatch(setUserData(user));\r\n                    if(!socket) dispatch(setSocket(io({query: {token: localStorage.getItem('SCA_TOKEN')}})));\r\n                }\r\n                setTimeout(() => {\r\n                    dispatch(setLoadingPage(false));\r\n                }, 1000);\r\n                window.addEventListener('resize', handleWindowSize);\r\n            });\r\n\r\n        return () => {\r\n            dispatch(setLoadingPage(true));\r\n            window.removeEventListener('resize', handleWindowSize);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"d-flex h-100\">\r\n            {\r\n                loadingPage\r\n                    ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            {\r\n                                windowInnerWidth>768\r\n                                    ? <MenuBar history={history} />\r\n                                    : !showChats &&  <MenuBar history={history} />\r\n                            }\r\n                            <Row className=\"h-100 w-100 m-0\">\r\n                                <Col className={ (showChats && windowInnerWidth<768) ? \"d-none\" : \"p-0\" } lg={4} md={5}>\r\n                                    <div className=\"chat-right-side-bar\">\r\n                                        { selectedMenuItem === 'profile' && <Profile history={history} /> }\r\n                                        { selectedMenuItem === 'chats' && <ChatList /> }\r\n                                    </div>\r\n                                </Col>\r\n                                <Col className={windowInnerWidth>768 ? \"p-0 bg-light\" : showChats ? \"p-0 bg-light\" : \"d-none\"} lg={8} md={7}>\r\n                                    {\r\n                                        room.loading\r\n                                            ?\r\n                                                <Loading />\r\n                                            :\r\n                                                !room.data.name \r\n                                                    ?\r\n                                                        <div className=\"empty-chat-box\">\r\n                                                            { windowInnerWidth<768 && <FaAngleRight className=\"back-icon\" onClick={() => dispatch(setShowChats(false))} /> }\r\n                                                            { room.error ? room.error : \"ShayanChat\" }\r\n                                                        </div>\r\n                                                    : <ChatContent />\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Fragment>\r\n            }\r\n        </div>\r\n    );\r\n};","import { SET_LOADING_PAGE, SET_LOADING_FORM, SELECT_MENU_ITEM, SET_SHOW_MODAL, SET_MODAL_CONTENT, SET_SHOW_CHATS, SET_SEND_MESSAGE_TYPE, SET_EDIT_MESSAGE_ID, SET_EDIT_MESSAGE_TEXT, SET_WINDOW_INNERWIDTH, SET_IS_REGISTERED, SET_SOCKET } from './types';\r\n\r\nconst initialState = {\r\n    loadingPage: true,\r\n    loadingForm: false,\r\n    selectedMenuItem: 'chats',\r\n    showModal: false,\r\n    modalContent: '',\r\n    isRegister: true,\r\n    showChats: false,\r\n    sendMessageType: 0,\r\n    editMessageId: 0,\r\n    editMessageText: '',\r\n    windowInnerWidth: window.innerWidth,\r\n    socket: null\r\n};\r\n\r\nconst settingReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_LOADING_PAGE: return { ...state, loadingPage: action.payload };\r\n        case SET_LOADING_FORM: return { ...state, loadingForm: action.payload };\r\n        case SELECT_MENU_ITEM: return { ...state, selectedMenuItem: action.payload };\r\n        case SET_SHOW_MODAL: return { ...state, showModal: action.payload };\r\n        case SET_MODAL_CONTENT: return { ...state, modalContent: action.payload };\r\n        case SET_SHOW_CHATS: return { ...state, showChats: action.payload };\r\n        case SET_IS_REGISTERED: return { ...state, isRegister: action.payload };\r\n        case SET_SEND_MESSAGE_TYPE: return { ...state, sendMessageType: action.payload };\r\n        case SET_EDIT_MESSAGE_ID: return { ...state, editMessageId: action.payload };\r\n        case SET_EDIT_MESSAGE_TEXT: return { ...state, editMessageText: action.payload };\r\n        case SET_WINDOW_INNERWIDTH: return { ...state, windowInnerWidth: window.innerWidth };\r\n        case SET_SOCKET: return { ...state, socket: action.payload };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default settingReducer;","import { SET_USER_DATA } from './types';\r\n\r\nconst initialState = {};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: return action.payload;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n};\r\n\r\nconst roomsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: [], error: action.payload };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomsReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, RESET_ROOM } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: {},\r\n    error: ''\r\n};\r\n\r\nconst roomReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: {}, error: action.payload };\r\n        case RESET_ROOM: return { loading: false, data: {}, error: '' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n};\r\n\r\nconst roomReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: [], error: action.payload };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, NEW_MESSAGE, UPDATE_MESSAGE, DELETE_MESSAGE } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: [], error: action.payload };\r\n        case NEW_MESSAGE: \r\n            state.data.push(action.payload);\r\n            return { loading: false, data: state.data, error: '' };\r\n        case UPDATE_MESSAGE:\r\n            const messageIndex = state.data.findIndex(message => message.id.toString() === action.payload.id.toString());\r\n            if(messageIndex !== -1) state.data[messageIndex] = action.payload;\r\n            return { loading: false, data: state.data, error: '' };\r\n        case DELETE_MESSAGE:\r\n            const deleteMessageIndex = state.data.findIndex(message => message.id.toString() === action.payload.toString());\r\n            if(deleteMessageIndex !== -1) state.data.splice(deleteMessageIndex, 1);\r\n            return { loading: false, data: state.data, error: '' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default messagesReducer;","import { combineReducers } from 'redux';\r\n\r\nimport settingReducer from './setting/reducer';\r\nimport userReducer from './user/reducer';\r\nimport roomsReducer from './rooms/reducer';\r\nimport roomReducer from './room/reducer';\r\nimport membersReducer from './members/reducer';\r\nimport messagesReducer from './messages/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    setting: settingReducer,\r\n    user: userReducer,\r\n    rooms: roomsReducer,\r\n    room: roomReducer,\r\n    members: membersReducer,\r\n    messages: messagesReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { RootPage, AuthPage, ChatPage } from './pages';\nimport { MyModal } from './components';\nimport store from './redux/store';\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={RootPage} />\n        <Route path=\"/auth\" component={AuthPage} />\n        <Route path=\"/chat\" component={ChatPage} />\n      </Switch>\n      <MyModal />\n    </BrowserRouter>  \n  </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
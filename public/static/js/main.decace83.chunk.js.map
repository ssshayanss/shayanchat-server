{"version":3,"sources":["components/loading/index.js","services/constants.js","services/auth.js","services/validate.js","services/toaster.js","redux/setting/types.js","redux/setting/actions.js","redux/user/types.js","redux/user/actions.js","redux/rooms/types.js","redux/rooms/actions.js","redux/room/types.js","redux/room/actions.js","redux/members/types.js","redux/members/actions.js","redux/messages/types.js","redux/messages/actions.js","components/form/input.js","components/form/index.js","components/signin/index.js","components/signup/index.js","components/resetPassword/index.js","components/menu/index.js","components/searchBox/index.js","components/chatList/chatListHeader.js","components/chatList/chatItem.js","components/chatList/index.js","components/profile/index.js","components/chatContent/header.js","components/chatContent/message.js","components/chatContent/messages.js","components/chatContent/body.js","components/chatContent/footer.js","components/chatContent/index.js","components/modal/createRoom.js","components/modal/editProfile.js","components/modal/changePassword.js","components/roomInfo/member.js","components/roomInfo/index.js","components/modal/editGroup.js","components/modal/index.js","pages/root.js","pages/auth.js","pages/chat.js","redux/setting/reducer.js","redux/user/reducer.js","redux/rooms/reducer.js","redux/room/reducer.js","redux/members/reducer.js","redux/messages/reducer.js","redux/reducer.js","redux/store.js","App.js","index.js"],"names":["Loading","className","Spinner","animation","variant","ENDPOINT","namePattern","emailPattern","usernamePattern","imageMaxSize","signup","data","formData","FormData","append","name","email","username","password","profilePicture","axios","post","signin","verifyUser","a","token","localStorage","getItem","get","headers","Authorization","success","user","sendResetLink","validateResetPasswordReq","message","test","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","makeToast","type","fire","icon","title","SET_LOADING_PAGE","SET_LOADING_FORM","SELECT_MENU_ITEM","SET_SHOW_MODAL","SET_MODAL_CONTENT","SET_SHOW_CHATS","SET_IS_REGISTERED","SET_RESET_PASSWORD","SET_SEND_MESSAGE_TYPE","SET_EDIT_MESSAGE_ID","SET_EDIT_MESSAGE_TEXT","SET_WINDOW_INNERWIDTH","SET_SOCKET","setLoadingPage","isLoading","payload","setLoadingForm","selectMenuItem","itemName","setShowModal","isShow","setModalContent","content","setShowChats","setIsRegistered","isRegister","setResetPassword","isReset","setSendMessageType","typeNumber","setSocket","socket","SET_USER_DATA","setUserData","userData","SEND_REQUEST","REQUEST_SUCCESS","REQUEST_FAILURE","UPDATE_ROOMS","DELETE_ROOM","sendRequest","requestSuccess","rooms","requestFailure","error","getRooms","dispatch","emit","updateRooms","room","removeRoom","RESET_ROOM","UPDATE_ROOM","resetRoom","getRoom","id","getRoomMembers","members","NEW_MESSAGE","UPDATE_MESSAGE","DELETE_MESSAGE","getMessages","roomId","messages","addNewMessage","newMessage","changeMessage","updateMessage","Input","item","useState","showPassword","setShowPassword","RegExp","placeholder","ref","fieldRef","accept","onClick","MyForm","items","submitHandler","loading","useSelector","state","setting","loadingForm","Form","onSubmit","map","index","Button","disabled","SigninForm","useDispatch","usernameRef","useRef","passwordRef","remindMeRef","useEffect","current","value","checked","Card","e","preventDefault","trim","length","validateSigninReq","setItem","removeItem","SignupForm","nameRef","emailRef","confirmPasswordRef","profilePictureRef","confirmPassword","files","size","Math","floor","validateSignupReq","ResetPasswordForm","getResetEmail","response","MenuBar","history","selectedMenuItem","disconnect","push","SearchBox","searchRef","search","searchRooms","onChange","ChatListHeader","ChatItem","active","src","roomPicture","alt","ChatList","currentRoom","Profile","show","setShow","window","confirm","ChatContentHeader","windowInnerWidth","Message","sender","isOwner","text","date","split","style","cursor","editMessageText","editMessageId","messageId","Messages","ChatContentBody","chatBodyRef","sendMessageType","on","deleteMessage","toString","scroll","scrollHeight","off","Object","keys","ChatContentFooter","messageRef","showPicker","setShowPicker","sendMessage","setTimeout","isJoined","onKeyPress","key","disableSearchBar","onEmojiClick","emojiObj","emoji","ChatContent","CreateNewRoom","roomNameRef","roomPictureRef","roomName","mimetype","validateCreateRoomReq","roomData","EditProfile","validateEditProfileReq","ChangePassword","oldPasswordRef","newPasswordRef","confirmNewPasswordRef","oldPassword","newPassword","confirmNewPassword","validateChangePasswordReq","Member","member","isOnline","lastSeen","RoomInfo","EditGroup","validateEditGroupReq","MyModal","showModal","modalContent","Modal","onHide","centered","RootPage","then","AuthPage","loadingPage","resetPassword","ChatPage","showChats","handleWindowSize","io","query","removeEventListener","updateRoom","Row","Col","lg","md","initialState","innerWidth","settingReducer","action","userReducer","roomsReducer","roomIndex","findIndex","deleteRoomIndex","splice","roomReducer","messagesReducer","newMessageDate","updateMessageDate","messageIndex","deleteMessageDate","deleteMessageIndex","rootReducer","combineReducers","membersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"wYAEaA,EAAU,kBACnB,qBAAKC,UAAU,+DAAf,SACI,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,iB,SCJ/BC,EAAW,mCAEXC,EAAc,6BACdC,EAAc,gBACdC,EAAkB,yBAClBC,EAAe,Q,0CCHfC,EAAS,SAAAC,GAClB,IAAMC,EAAW,IAAIC,SAMrB,OALAD,EAASE,OAAO,OAAQH,EAAKI,MAC7BH,EAASE,OAAO,QAASH,EAAKK,OAC9BJ,EAASE,OAAO,WAAYH,EAAKM,UACjCL,EAASE,OAAO,WAAYH,EAAKO,UACjCN,EAASE,OAAO,iBAAkBH,EAAKQ,gBAChCC,IAAMC,KAAK,mBAAoBT,IAG7BU,EAAS,SAAAX,GAAI,OAAIS,IAAMC,KAAK,mBAAoBV,IAEhDY,EAAU,uCAAG,gCAAAC,EAAA,oEAEZC,EAAQC,aAAaC,QAAQ,cAFjB,iCAISP,IAAMQ,IAAI,YAAa,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYL,MAJtE,qBAINd,EAJM,EAINA,MACAoB,QALM,0CAKU,CAAEA,SAAS,EAAMC,KAAMrB,EAAKqB,OALtC,iCAMF,CAAED,SAAS,IANT,yDAOJ,CAAEA,SAAS,IAPP,mFASX,CAAEA,SAAS,IATA,0DAAH,qDAaVE,EAAgB,SAAAtB,GAAI,OAAIS,IAAMC,KAAK,2BAA4BV,ICU/DuB,EAA2B,SAAAvB,GACpC,MAAkB,KAAfA,EAAKK,MAAqB,CAAEe,SAAS,EAAOI,QAAS,oHAC/C5B,EAAa6B,KAAKzB,EAAKK,OAEpB,CAAEe,SAAS,GADZ,CAAEA,SAAS,EAAOI,QAAS,0J,iBCtCpCE,EAAQC,IAAKC,MAAM,CACrBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAS,SAAAL,GACLA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAIrCC,EAAY,SAACC,EAAMf,GAC5BE,EAAMc,KAAK,CACPC,KAAMF,EACNG,MAAOlB,KCjBFmB,EAAmB,4BACnBC,EAAmB,4BACnBC,EAAmB,4BACnBC,EAAiB,0BACjBC,EAAoB,6BACpBC,EAAiB,0BACjBC,EAAoB,6BACpBC,EAAqB,8BACrBC,EAAwB,iCACxBC,EAAsB,+BACtBC,EAAwB,iCACxBC,EAAwB,iCACxBC,EAAa,sBCVbC,EAAiB,SAAAC,GAC1B,MAAO,CAAElB,KAAMI,EAAkBe,QAASD,IAGjCE,EAAiB,SAAAF,GAC1B,MAAO,CAAElB,KAAMK,EAAkBc,QAASD,IAGjCG,EAAiB,SAAAC,GAC1B,MAAO,CAAEtB,KAAMM,EAAkBa,QAASG,IAGjCC,EAAe,SAAAC,GACxB,MAAO,CAAExB,KAAMO,EAAgBY,QAASK,IAG/BC,EAAkB,SAAAC,GAC3B,MAAO,CAAE1B,KAAMQ,EAAmBW,QAASO,IAGlCC,EAAe,SAAAH,GACxB,MAAO,CAAExB,KAAMS,EAAgBU,QAASK,IAG/BI,EAAkB,SAAAC,GAC3B,MAAO,CAAE7B,KAAMU,EAAmBS,QAASU,IAGlCC,EAAmB,SAAAC,GAC5B,MAAO,CAAE/B,KAAMW,EAAoBQ,QAASY,IAGnCC,EAAqB,SAAAC,GAC9B,MAAO,CAAEjC,KAAMY,EAAuBO,QAASc,IAetCC,GAAY,SAAAC,GACrB,MAAO,CAAEnC,KAAMgB,EAAYG,QAASgB,ICnD3BC,GAAgB,sBCEhBC,GAAc,SAAAC,GACvB,MAAO,CAAEtC,KAAMoC,GAAejB,QAASmB,ICH9BC,GAAe,sBACfC,GAAkB,yBAClBC,GAAkB,yBAClBC,GAAe,sBACfC,GAAc,qBCFrBC,GAAc,WAChB,MAAO,CAAE5C,KAAMuC,KAGbM,GAAiB,SAAAC,GACnB,MAAO,CAAE9C,KAAMwC,GAAiBrB,QAAS2B,IAGvCC,GAAiB,SAAAC,GACnB,MAAO,CAAEhD,KAAMyC,GAAiBtB,QAAS6B,IAGhCC,GAAW,SAAAd,GACpB,OAAO,SAAAe,GACHA,EAASN,MACTT,EAAOgB,KAAK,aAAa,YAAgC,IAA7BtE,EAA4B,EAA5BA,QAASiE,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,MAC5BE,EAATrE,EAAkBgE,GAAeC,GACtBC,GAAeC,SAiB5BI,GAAc,SAAAC,GACvB,MAAO,CAAErD,KAAM0C,GAAcvB,QAASkC,IAG7BC,GAAa,SAAAD,GACtB,MAAO,CAAErD,KAAM2C,GAAaxB,QAASkC,ICzC5Bd,GAAe,qBACfC,GAAkB,wBAClBC,GAAkB,wBAClBc,GAAa,mBACbC,GAAc,oBCUdC,GAAY,WACrB,MAAO,CAAEzD,KAAMuD,KAGNG,GAAU,SAACvB,EAAQwB,GAC5B,OAAO,SAAAT,GACHA,EAjBG,CAAElD,KAAMuC,KAkBXJ,EAAOgB,KAAK,WAAY,CAAEQ,OAAM,YAA+B,IAA5B9E,EAA2B,EAA3BA,QAASwE,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,MAClCE,EAATrE,EAhBQ,SAAAwE,GACnB,MAAO,CAAErD,KAAMwC,GAAiBrB,QAASkC,GAeZR,CAAeQ,GAZzB,SAAAL,GACnB,MAAO,CAAEhD,KAAMyC,GAAiBtB,QAAS6B,GAYnBD,CAAeC,SCvB5BT,GAAe,wBACfC,GAAkB,2BAClBC,GAAkB,2BCYlBmB,GAAiB,SAACzB,EAAQwB,GACnC,OAAO,SAAAT,GACHA,EAbG,CAAElD,KAAMuC,KAcXJ,EAAOgB,KAAK,mBAAoB,CAAEQ,OAAM,YAAkC,IAA/B9E,EAA8B,EAA9BA,QAASgF,EAAqB,EAArBA,QAASb,EAAY,EAAZA,MAC7CE,EAATrE,EAZQ,SAAAgF,GACnB,MAAO,CAAE7D,KAAMwC,GAAiBrB,QAAS0C,GAWZhB,CAAegB,GARzB,SAAAb,GACnB,MAAO,CAAEhD,KAAMyC,GAAiBtB,QAAS6B,GAQnBD,CAAeC,SCnB5BT,GAAe,yBACfC,GAAkB,4BAClBC,GAAkB,4BAClBqB,GAAc,wBACdC,GAAiB,2BACjBC,GAAiB,2BCSjBC,GAAc,SAAC9B,EAAQ+B,GAChC,OAAO,SAAAhB,GACHA,EAbG,CAAElD,KAAMuC,KAcXJ,EAAOgB,KAAK,eAAgB,CAAEe,WAAU,YAAmC,IAAhCrF,EAA+B,EAA/BA,QAASsF,EAAsB,EAAtBA,SAAUnB,EAAY,EAAZA,MAC9CE,EAATrE,EAZQ,SAAAsF,GACnB,MAAO,CAAEnE,KAAMwC,GAAiBrB,QAASgD,GAWZtB,CAAesB,GARzB,SAAAnB,GACnB,MAAO,CAAEhD,KAAMyC,GAAiBtB,QAAS6B,GAQnBD,CAAeC,SAK5BoB,GAAgB,SAAAC,GACzB,MAAO,CAAErE,KAAM8D,GAAa3C,QAASkD,IAG5BC,GAAgB,SAAAC,GACzB,MAAO,CAAEvE,KAAM+D,GAAgB5C,QAASoD,I,8CCe7BC,GAzCD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAEgBC,oBAAS,GAFzB,oBAEjBC,EAFiB,KAEHC,EAFG,KAIxB,OACI,sBAAK7H,UAA0B,aAAd0H,EAAKzE,KAAsB,WAAa,YAAzD,UACI,uBAAMjD,UAAU,YAAYoD,MAAOsE,EAAKtE,MAAxC,UACoB,SAAdsE,EAAK5G,MAAmB,cAAC,KAAD,IACV,UAAd4G,EAAK5G,MAAoB,cAAC,KAAD,IACX,aAAd4G,EAAK5G,MAAuB,cAAC,KAAD,IACd,aAAd4G,EAAK5G,MAAuB,cAAC,KAAD,IAC5B,IAAIgH,OAAO,WAAY,KAAK3F,KAAKuF,EAAK5G,OAAS,cAAC,KAAD,IAC/C,IAAIgH,OAAO,UAAW,KAAK3F,KAAKuF,EAAK5G,OAAS,cAAC,KAAD,OAEpD,uBACId,UACkB,SAAd0H,EAAKzE,KACC,aACc,aAAdyE,EAAKzE,KAAsB,OAAS,QAE9CA,KACI,IAAI6E,OAAO,WAAY,KAAK3F,KAAKuF,EAAK5G,MAChC8G,EAAe,OAAS,WACxBF,EAAKzE,KAEf8E,YAAaL,EAAKK,YAClBC,IAAKN,EAAKO,SACVC,OAAuB,SAAdR,EAAKzE,MAAmB,IAAI6E,OAAO,UAAW,KAAK3F,KAAKuF,EAAK5G,MAAQ,UAAY,OAG1F,IAAIgH,OAAO,WAAY,KAAK3F,KAAKuF,EAAK5G,MAChC8G,EACI,cAAC,KAAD,CAAO5H,UAAU,UAAUmI,QAAS,kBAAMN,GAAgB,MAC1D,cAAC,KAAD,CAAY7H,UAAU,UAAUmI,QAAS,kBAAMN,GAAgB,MACnE,KAEM,aAAdH,EAAKzE,MAAwB,uBAAOjD,UAAU,MAAjB,SAAwB0H,EAAKK,kBCjBzDK,GAhBA,SAAC,GAAoC,IAAlCtH,EAAiC,EAAjCA,KAAMuH,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAErBC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,eAEnD,OACI,eAACC,GAAA,EAAD,CAAM5I,UAAU,qBAAqB6I,SAAUP,EAA/C,UAEQD,EAAMS,KAAI,SAACpB,EAAMqB,GACb,OAAO,cAAC,GAAD,CAAmBrB,KAAMA,GAAbqB,MAG3B,cAACC,GAAA,EAAD,CAAQ/F,KAAK,SAASgG,SAAUV,EAAU,WAAa,GAAvD,SAA4DzH,QCT3DoI,GAAa,SAAC,GAAuB,IAArBZ,EAAoB,EAApBA,cAEnBnC,EAAWgD,cAEXC,EAAcC,iBAAO,IACrBC,EAAcD,iBAAO,IACrBE,EAAcF,mBAEpBG,qBAAU,WACN,IAAMxI,EAAWS,aAAaC,QAAQ,gBAChCT,EAAWQ,aAAaC,QAAQ,gBACnCV,GAAYC,IACXmI,EAAYK,QAAQC,MAAQ1I,EAC5BsI,EAAYG,QAAQC,MAAQzI,EAC5BsI,EAAYE,QAAQE,SAAU,KAEnC,IAmBH,OACI,8BACI,eAACC,EAAA,EAAD,CAAM5J,UAAU,YAAhB,UACI,cAAC,GAAD,CACIc,KAAK,2BACLuH,MAAO,CACH,CAAEvH,KAAM,WAAYmC,KAAM,OAAQG,MAAO,+DAAc2E,YAAa,iJAA+BE,SAAUmB,GAC7G,CAAEtI,KAAM,WAAYmC,KAAM,WAAYG,MAAO,6CAAW2E,YAAa,+HAA4BE,SAAUqB,GAC3G,CAAExI,KAAM,WAAYmC,KAAM,WAAY8E,YAAa,iGAAuBE,SAAUsB,IAExFjB,cA3BD,SAAAuB,GACXA,EAAEC,iBACF,IAAMpJ,EAAO,CAAEM,SAAUoI,EAAYK,QAAQC,MAAMK,OAAQ9I,SAAUqI,EAAYG,QAAQC,MAAMK,QAF/E,EhBGS,SAAArJ,GAC7B,MAAqB,KAAlBA,EAAKM,SAAwB,CAAEc,SAAS,EAAOI,QAAS,kJAClD3B,EAAgB4B,KAAKzB,EAAKM,UACT,KAAlBN,EAAKO,SAAwB,CAAEa,SAAS,EAAOI,QAAS,gIACxDxB,EAAKO,SAAS+I,OAAO,EAAU,CAAElI,SAAS,EAAOI,QAAS,sLACtD,CAAEJ,SAAS,GAH8B,CAAEA,SAAS,EAAOI,QAAS,sLgBF/C+H,CAAkBvJ,GAAvCoB,EAHQ,EAGRA,QAASI,EAHD,EAGCA,QACbJ,GAEGyH,EAAYE,QAAQE,SACnBlI,aAAayI,QAAQ,eAAgBxJ,EAAKM,UAC1CS,aAAayI,QAAQ,eAAgBxJ,EAAKO,YAE1CQ,aAAa0I,WAAW,gBACxB1I,aAAa0I,WAAW,iBAE5B7B,EAAc5H,IATLsC,EAAU,QAASd,MAyBxB,sBAAKlC,UAAU,cAAf,UACI,sBAAMA,UAAU,kBAAkBmI,QAAS,kBAAMhC,EAASpB,GAAiB,KAA3E,mGADJ,IAGI,sBAAM/E,UAAU,kBAAkBmI,QAAS,kBAAMhC,EAAStB,GAAgB,KAA1E,iEClDPuF,GAAa,SAAC,GAAuB,IAArB9B,EAAoB,EAApBA,cAEnBnC,EAAWgD,cAEXkB,EAAUhB,iBAAO,IACjBiB,EAAWjB,iBAAO,IAClBD,EAAcC,iBAAO,IACrBC,EAAcD,iBAAO,IACrBkB,EAAqBlB,iBAAO,IAC5BmB,EAAoBnB,iBAAO,IAiBjC,OACI,8BACI,eAACO,EAAA,EAAD,CAAM5J,UAAU,YAAhB,UACI,cAAC,GAAD,CACIc,KAAK,6CACLuH,MAAO,CACH,CAAEvH,KAAM,OAAQmC,KAAM,OAAQG,MAAO,2BAAQ2E,YAAa,6LAAwCE,SAAUoC,GAC5G,CAAEvJ,KAAM,QAASmC,KAAM,QAASG,MAAO,iCAAS2E,YAAa,mHAA0BE,SAAUqC,GACjG,CAAExJ,KAAM,WAAYmC,KAAM,OAAQG,MAAO,+DAAc2E,YAAa,iJAA+BE,SAAUmB,GAC7G,CAAEtI,KAAM,WAAYmC,KAAM,WAAYG,MAAO,6CAAW2E,YAAa,+HAA4BE,SAAUqB,GAC3G,CAAExI,KAAM,kBAAmBmC,KAAM,WAAYG,MAAO,4EAAiB2E,YAAa,qIAA6BE,SAAUsC,GACzH,CAAEzJ,KAAM,iBAAkBmC,KAAM,OAAQG,MAAO,4EAAiB6E,SAAUuC,IAE9ElC,cA5BD,SAAAuB,GACXA,EAAEC,iBACF,IAAMpJ,EAAO,CACTI,KAAMuJ,EAAQZ,QAAQC,MAAMK,OAC5BhJ,MAAOuJ,EAASb,QAAQC,MAAMK,OAC9B/I,SAAUoI,EAAYK,QAAQC,MAAMK,OACpC9I,SAAUqI,EAAYG,QAAQC,MAAMK,OACpCU,gBAAiBF,EAAmBd,QAAQC,MAAMK,OAClD7I,eAAgBsJ,EAAkBf,QAAQiB,MAAM,IARpC,EjBjBS,SAAAhK,GAC7B,MAAiB,KAAdA,EAAKI,KAAoB,CAAEgB,SAAS,EAAOI,QAAS,wGAC9C7B,EAAY8B,KAAKzB,EAAKI,OAAWJ,EAAKI,KAAKkJ,QAAQ,EAGrC,KAAftJ,EAAKK,MAAqB,CAAEe,SAAS,EAAOI,QAAS,oHACpD5B,EAAa6B,KAAKzB,EAAKK,OAGN,KAAlBL,EAAKM,SAAwB,CAAEc,SAAS,EAAOI,QAAS,kJACvD3B,EAAgB4B,KAAKzB,EAAKM,UAGT,KAAlBN,EAAKO,SAAwB,CAAEa,SAAS,EAAOI,QAAS,gIACxDxB,EAAKO,SAAS+I,OAAO,EAClB,CAAElI,SAAS,EAAOI,QAAS,qMAE9BxB,EAAK+J,kBAAoB/J,EAAKO,SAAiB,CAAEa,SAAS,EAAOI,QAAS,yJAE1ExB,EAAKQ,gBAAiD,eAA7BR,EAAKQ,eAAe+B,MAAsD,cAA7BvC,EAAKQ,eAAe+B,MAAqD,cAA7BvC,EAAKQ,eAAe+B,KACnI,CAAEnB,SAAS,EAAOI,QAAS,2OAC9BxB,EAAKQ,gBAAkBR,EAAKQ,eAAeyJ,KAAKnK,EAC7C,CAAEsB,SAAS,EAAOI,QAAQ,mJAAD,OAAkC0I,KAAKC,MAAMrK,UAA7C,gCAExB,CAAEsB,SAAS,GAbZ,CAAEA,SAAS,EAAOI,QAAS,iQAJ3B,CAAEJ,SAAS,EAAOI,QAAS,yJAJ3B,CAAEJ,SAAS,EAAOI,QAAS,gMiBwBL4I,CAAkBpK,GAAvCoB,EAVQ,EAURA,QAASI,EAVD,EAUCA,QACbJ,EACCwG,EAAc5H,GADNsC,EAAU,QAASd,MAmBxB,qBAAKlC,UAAU,cAAf,SACI,sBAAMA,UAAU,aAAamI,QAAS,kBAAMhC,EAAStB,GAAgB,KAArE,8CC1CPkG,GAAoB,WAE7B,IAAM5E,EAAWgD,cAEXmB,EAAWjB,iBAAO,IAElB2B,EAAa,uCAAG,WAAMnB,GAAN,uBAAAtI,EAAA,yDAClBsI,EAAEC,iBADgB,SAGRpJ,EAAO,CAAEK,MAAOuJ,EAASb,QAAQC,MAAMK,QAH/B,EAIe9H,EAAyBvB,GAA9CoB,EAJM,EAINA,QAASI,EAJH,EAIGA,QACbJ,EALU,gBAKDkB,EAAU,QAASd,GALlB,8BAOViE,EAAS9B,GAAe,IAPd,UAQarC,EAActB,GAR3B,QAQJuK,EARI,OASVjI,EAAU,UAAWiI,EAASvK,KAAKwB,SACnCiE,EAAS9B,GAAe,IAVd,0DAad8B,EAAS9B,GAAe,IACxBrB,EAAU,QAAS,KAAMiI,SAASvK,KAAKwB,SAdzB,0DAAH,sDAkBnB,OACI,8BACI,eAAC0H,EAAA,EAAD,CAAM5J,UAAU,YAAhB,UACI,cAAC,GAAD,CACIc,KAAK,yFACLuH,MAAO,CACH,CAAEvH,KAAM,QAASmC,KAAM,QAASG,MAAO,iCAAS2E,YAAa,mHAA0BE,SAAUqC,IAErGhC,cAAe0C,IAEnB,qBAAKhL,UAAU,cAAf,SACI,sBACIA,UAAU,aACVmI,QAAS,WACLhC,EAAStB,GAAgB,IACzBsB,EAASpB,GAAiB,KAJlC,8CCpCPmG,I,OAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAEC3C,aAAY,SAAAC,GAC7C,MAAO,CAAE2C,iBAAkB3C,EAAMC,QAAQ0C,iBAAkBhG,OAAQqD,EAAMC,QAAQtD,WAD7EgG,EAF4B,EAE5BA,iBAAkBhG,EAFU,EAEVA,OAGpBe,EAAWgD,cAUjB,OACI,sBAAKnJ,UAAU,WAAf,UACI,oBAAIA,UAAU,QAAd,wBACA,sBAAKA,UAAU,kBAAf,UACI,qBACIA,UAAiC,YAArBoL,EAAiC,cAAgB,OAC7DjD,QAAS,kBAAMhC,EAAS7B,EAAe,aACvClB,MAAM,6CAHV,SAKI,cAAC,KAAD,MAEJ,qBACIpD,UAAiC,UAArBoL,EAA+B,cAAgB,OAC3DjD,QAAS,kBAAMhC,EAAS7B,EAAe,WACvClB,MAAM,iCAHV,SAKI,cAAC,KAAD,MAEJ,qBAAKpD,UAAU,OAAOoD,MAAM,2BAAO+E,QA1BhC,WACX/C,EAAOiG,WAAW,GAClBlF,EAAShB,GAAU,OACnBgB,EAASO,MACTjF,aAAa0I,WAAW,aACxBgB,EAAQG,KAAK,UAqBL,SACI,cAAC,KAAD,cCdLC,I,OApBG,WAEd,IAAMnG,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQtD,UAC5Ce,EAAWgD,cAEXqC,EAAYnC,iBAAO,IAEnBoC,EAAS,WAC2B,KAAnCD,EAAU/B,QAAQC,MAAMK,OAAe5D,EAASD,GAASd,IACvDe,EbQc,SAACf,EAAQqG,GAChC,OAAO,SAAAtF,GACHA,EAASN,MACY,KAAlB4F,EAAO1B,QACN3E,EAAOgB,KAAK,eAAgB,CAAEqF,WAAU,YAAgC,IAA7B3J,EAA4B,EAA5BA,QAASiE,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,MAC3CE,EAATrE,EAAkBgE,GAAeC,GACtBC,GAAeC,QadvByF,CAAYtG,EAAQoG,EAAU/B,QAAQC,MAAMK,UAG9D,OACI,sBAAK/J,UAAU,aAAf,UACI,uBAAOA,UAAU,QAAQiD,KAAK,OAAO8E,YAAY,qCAAYC,IAAKwD,EAAWG,SAAUF,IACvF,cAAC,KAAD,CAAUzL,UAAU,OAAOmI,QAASsD,SCCjCG,I,OAnBQ,WAEnB,IAAMzF,EAAWgD,cAOjB,OACI,sBAAKnJ,UAAU,mBAAf,UACI,gEACA,sBAAMA,UAAU,YAAYoD,MAAM,6EAAiB+E,QAR/B,WACxBhC,EAASzB,EAAgB,kBACzByB,EAAS3B,GAAa,KAMlB,SACI,cAAC,KAAD,WCWDqH,GAxBE,SAAC,GAAsB,IAApBvF,EAAmB,EAAnBA,KAAMwF,EAAa,EAAbA,OAEhB1G,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQtD,UAC5Ce,EAAWgD,cAOjB,OACI,qBAAKhB,QANO,WACZhC,EAASQ,GAAQvB,EAAQkB,EAAKM,KAC9BT,EAASvB,GAAa,KAIC5E,UAAY8L,EAAS,mBAAqB,YAAjE,SACI,sBAAK9L,UAAU,iBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,UAAU+L,IAAMzF,EAAK0F,YAAL,UAAsB5L,EAAtB,yBAA+CkG,EAAK0F,aAAgB,mBAAoBC,IAAK3F,EAAKxF,SAErI,qBAAKd,UAAU,iBAAf,SACI,sBAAMA,UAAU,OAAhB,SAAwBsG,EAAKxF,eCZpCoL,GAAW,WAAO,IAAD,EAEK1D,aAAY,SAAAC,GACvC,MAAO,CAAE1C,MAAO0C,EAAM1C,MAAOoG,YAAa1D,EAAMnC,KAAK5F,SADjDqF,EAFkB,EAElBA,MAAOoG,EAFW,EAEXA,YAIf,OACI,eAAC,WAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,qBAAKnM,UAAW+F,EAAMwC,QAAU,wBAA0B,YAA1D,SAEQxC,EAAMwC,QAEE,cAACtI,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cAEpC,cAAC,WAAD,UAEQ4F,EAAMrF,KAAKoI,KAAI,SAAAxC,GACX,OAAO,cAAC,GAAD,CAAwBA,KAAMA,EAAMwF,OAASK,EAAYvF,KAAON,EAAKM,IAAtDN,EAAKM,eCpBtDwF,I,OAAU,SAAC,GAAiB,IAAfjB,EAAc,EAAdA,QAAc,EAEZxD,oBAAS,GAFG,oBAE7B0E,EAF6B,KAEvBC,EAFuB,OAIX9D,aAAY,SAAAC,GACjC,MAAO,CAAErD,OAAQqD,EAAMC,QAAQtD,OAAQrD,KAAM0G,EAAM1G,SAD/CqD,EAJ4B,EAI5BA,OAAQrD,EAJoB,EAIpBA,KAGVoE,EAAWgD,cA4BjB,OACI,eAAC,WAAD,WACI,sBAAKnJ,UAAU,iBAAf,UACI,4EACA,sBAAKA,UAAU,oBAAf,UACI,cAAC,KAAD,CAAaA,UAAU,cAAcmI,QAAS,kBAAMmE,GAASD,MAC7D,sBAAKrM,UAAYqM,EAAO,kBAAoB,SAA5C,UACI,uBAAMrM,UAAU,SAASmI,QAjCjB,WACxBhC,EAASzB,EAAgB,gBACzByB,EAAS3B,GAAa,KA+BN,UAAuD,cAAC,KAAD,CAAWxE,UAAU,SAA5E,qFACA,uBAAMA,UAAU,SAASmI,QA7Bd,WAC3BhC,EAASzB,EAAgB,mBACzByB,EAAS3B,GAAa,KA2BN,UAA0D,cAAC,KAAD,CAAOxE,UAAU,SAA3E,+EACA,uBAAMA,UAAU,SAASmI,QAzBvB,WACAoE,OAAOC,QAAQ,wNAE7BpH,EAAOgB,KAAK,iBAAiB,YAA2B,IAAxBtE,EAAuB,EAAvBA,QAASI,EAAc,EAAdA,QACjCJ,GAEAL,aAAa0I,WAAW,aACxB/E,EAAOiG,WAAW,GAClBlF,EAAShB,GAAU,OACnBgG,EAAQG,KAAK,SACbtI,EAAU,UAAWd,IANZc,EAAU,QAASd,OAqBxB,UAAiD,cAAC,KAAD,CAAelC,UAAU,SAA1E,+FAIZ,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,qBACIA,UAAU,UACV+L,IAAMhK,EAAKb,eAAL,UAAyBd,EAAzB,4BAAqD2B,EAAKb,gBAAmB,mBACnF+K,IAAKlK,EAAKjB,SAGlB,sBAAMd,UAAU,OAAhB,SAAwB+B,EAAKjB,UAEjC,sBAAKd,UAAU,iBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,0EAEJ,sBAAKA,UAAU,OAAf,UACI,sBAAMA,UAAU,aAAhB,gCACA,+BAAO+B,EAAKjB,UAEhB,sBAAKd,UAAU,OAAf,UACI,sBAAMA,UAAU,aAAhB,4CACA,+BAAO+B,EAAKhB,WAEhB,sBAAKf,UAAU,OAAf,UACI,sBAAMA,UAAU,aAAhB,0EACA,+BAAO+B,EAAKf,sBC/CjByL,I,OA5BW,WAAO,IAAD,EAEOjE,aAAY,SAAAC,GAC3C,MAAO,CAAEiE,iBAAkBjE,EAAMC,QAAQgE,iBAAkBpG,KAAMmC,EAAMnC,KAAK5F,SADxEgM,EAFoB,EAEpBA,iBAAkBpG,EAFE,EAEFA,KAGpBH,EAAWgD,cAOjB,OACI,sBAAKnJ,UAAU,SAAf,UACI,sBAAKA,UAAU,aAAf,UACM0M,EAAiB,KAAO,cAAC,KAAD,CAAc1M,UAAU,YAAYmI,QAAS,kBAAMhC,EAASvB,GAAa,OACnG,qBACI5E,UAAU,UACV+L,IAAMzF,EAAK0F,YAAL,UAAsB5L,EAAtB,yBAA+CkG,EAAK0F,aAAgB,mBAC1EC,IAAK3F,EAAKxF,OAEd,sBAAMd,UAAU,YAAhB,SAA6BsG,EAAKxF,UAEtC,cAAC,KAAD,CAAaqH,QAhBA,WACjBhC,EAASzB,EAAgB,aACzByB,EAAS3B,GAAa,KAckBxE,UAAU,uBC0B3C2M,GAhDC,SAAC,GAAiB,IAAfzK,EAAc,EAAdA,QAAc,EAELyF,oBAAS,GAFJ,oBAEtB0E,EAFsB,KAEhBC,EAFgB,OAIJ9D,aAAY,SAAAC,GACjC,MAAO,CAAErD,OAAQqD,EAAMC,QAAQtD,OAAQkB,KAAMmC,EAAMnC,KAAK5F,SADpD0E,EAJqB,EAIrBA,OAAQkB,EAJa,EAIbA,KAGVH,EAAWgD,cAejB,OACI,sBAAKnJ,UAAU,oBAAf,UACI,qBACIA,UAAU,eACV+L,IAAM7J,EAAQ0K,OAAO1L,eAAf,UAAmCd,EAAnC,4BAA+D8B,EAAQ0K,OAAO1L,gBAAmB,mBACvG+K,IAAM/J,EAAQ0K,OAAO9L,OAEzB,sBAAKd,UAAYkC,EAAQ2K,QAAU,kBAAoB,mBAAvD,UACI,sBAAM7M,UAAU,OAAhB,SAAyBkC,EAAQ0K,OAAO9L,OACxC,sBAAMd,UAAU,UAAhB,SAA2BkC,EAAQ4K,OACnC,uBAAM9M,UAAU,OAAhB,UAAuB,cAAC,KAAD,IAAvB,IAAuCkC,EAAQ6K,KAAKC,MAAM,KAAK,SAG/D9K,EAAQ2K,SACR,sBAAK7M,UAAU,oBAAf,UACI,cAAC,KAAD,CAAaiN,MAAO,CAAEC,OAAQ,WAAa/E,QAAS,kBAAMmE,GAASD,MACnE,sBAAKrM,UAAYqM,EAAO,kBAAoB,SAA5C,UACI,sBAAMrM,UAAU,SAASmI,QA9BzB,WvB2BU,IAAAgF,EAJFC,EuBtBxBjH,EAASlB,EAAmB,IAC5BkB,GvByB0BgH,EuBzBEjL,EAAQ4K,KvB0BjC,CAAE7J,KAAMc,EAAuBK,QAAS+I,KuBzB3ChH,GvBoBwBiH,EuBpBElL,EAAQ0E,GvBqB/B,CAAE3D,KAAMa,EAAqBM,QAASgJ,KuBpBzCd,GAAQ,IA0BQ,kDACA,sBAAMtM,UAAU,SAASmI,QAxBvB,WACAoE,OAAOC,QAAQ,gKACnBpH,EAAOgB,KAAK,iBAAkB,CAAEe,OAAQb,EAAKM,GAAIyG,UAAWnL,EAAQ0E,KAClF0F,GAAQ,IAqBQ,0CCnCTgB,GATE,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAM3F,EAAT,EAASA,SAAT,OACb,gCACI,qBAAKpH,UAAU,8BAAf,SAA6C,sBAAMA,UAAU,YAAhB,SAA6B+M,MAEtE3F,EAAS0B,KAAI,SAAA5G,GAAO,OAAI,cAAC,GAAD,CAA0BA,QAASA,GAArBA,EAAQ0E,WC6E3C2G,GA5ES,WAEpB,IAAMC,EAAcnE,mBAFM,EAGiDb,aAAY,SAAAC,GACnF,MAAO,CACHrD,OAAQqD,EAAMC,QAAQtD,OACtBgC,SAAUqB,EAAMrB,SAChBrF,KAAM0G,EAAM1G,KACZuE,KAAMmC,EAAMnC,KACZmH,gBAAiBhF,EAAMC,QAAQ+E,gBAC/BN,gBAAiB1E,EAAMC,QAAQyE,oBAP/B/H,EAHkB,EAGlBA,OAAQgC,EAHU,EAGVA,SAAUrF,EAHA,EAGAA,KAAMuE,EAHN,EAGMA,KAAMmH,EAHZ,EAGYA,gBAAiBN,EAH7B,EAG6BA,gBAUjDhH,EAAWgD,cAqCjB,OAnCAK,qBAAU,WAEN,OADGpE,GAAQe,EAASe,GAAY9B,EAAQkB,EAAK5F,KAAKkG,KAC3C,WACHT,EAASlB,EAAmB,OAGjC,IAEHuE,qBAAU,WAiBN,OAhBGpE,GACCA,EAAOsI,GAAG,cAAV,uCAAyB,mCAAAnM,EAAA,sDAAS4F,EAAT,EAASA,OAAQG,EAAjB,EAAiBA,WAAYE,EAA7B,EAA6BA,cAAemG,EAA5C,EAA4CA,cACjE,IACOxG,EAAOyG,aAAetH,EAAK5F,KAAKkG,GAAGgH,aAC/BtG,GACCA,EAAWuF,QAAWvF,EAAWsF,OAAO7L,QAAQgB,EAAKhB,MACrDoF,EAASkB,GAAcC,IACvBkG,EAAY/D,QAAQoE,OAAO,EAAGL,EAAY/D,QAAQqE,eAC5CtG,GACNA,EAAcqF,QAAWrF,EAAcoF,OAAO7L,QAAQgB,EAAKhB,MAC3DoF,EAASoB,GAAcC,KACjBmG,GAAexH,EfTtC,CAAElD,KAAMgE,GAAgB7C,QeSqCuJ,KAEtD,MAAM1H,IAZa,2CAAzB,uDAeG,WACAb,GAAQA,EAAO2I,IAAI,kBAG3B,CAAC3I,IAEJoE,qBAAU,WACNgE,EAAY/D,QAAQoE,OAAO,EAAGL,EAAY/D,QAAQqE,gBACnD,CAAC1G,EAAS1G,OAGT,qBAAKsH,IAAKwF,EAAaxN,UAAU,OAAjC,SAEQoH,EAASmB,QACD,cAAC,EAAD,IAEA,eAAC,WAAD,WAEQnB,EAAS1G,MACTsN,OAAOC,KAAK7G,EAAS1G,MAAMoI,KAAI,SAACiE,EAAMhE,GAClC,OAAO,cAAC,GAAD,CAAsBgE,KAAMA,EAAM3F,SAAUA,EAAS1G,KAAKqM,IAA3ChE,MAIN,IAApB0E,GACA,sBAAKzN,UAAU,WAAf,UACI,cAAC,KAAD,CAASiN,MAAO,CAAEC,OAAQ,WAAa/E,QAAS,kBAAMhC,EAASlB,EAAmB,OAClF,sBAAMjF,UAAU,2BAAhB,SAA4CmN,a,oBCOjEe,GAxEW,WAEtB,IAAMC,EAAa9E,iBAAO,IAFE,EAGQ1B,oBAAS,GAHjB,oBAGrByG,EAHqB,KAGTC,EAHS,OAK2D7F,aAAY,SAAAC,GAC/F,MAAO,CACHrD,OAAQqD,EAAMC,QAAQtD,OACtBuD,YAAaF,EAAMC,QAAQC,YAC3BrC,KAAMmC,EAAMnC,KAAK5F,KACjB+M,gBAAiBhF,EAAMC,QAAQ+E,gBAC/BL,cAAe3E,EAAMC,QAAQ0E,cAC7BD,gBAAiB1E,EAAMC,QAAQyE,oBAP/B/H,EALoB,EAKpBA,OAAQuD,EALY,EAKZA,YAAarC,EALD,EAKCA,KAAMmH,EALP,EAKOA,gBAAiBL,EALxB,EAKwBA,cAAeD,EALvC,EAKuCA,gBAS7DhH,EAAWgD,cAEjBK,qBAAU,WACiB,IAApBiE,GAAyBU,EAAW1E,QAAS0E,EAAW1E,QAAQC,MAAQyD,EACnEgB,EAAW1E,UAAS0E,EAAW1E,QAAQC,MAAQ,MAExD,CAAC+D,EAAiBL,IAErB,IAYMkB,EAAc,WAChB,IAAMpM,EAAUiM,EAAW1E,QAAQC,MAAMK,OAC1B,KAAZ7H,IACCiE,EAAS9B,GAAe,IACD,IAApBoJ,EAAuBrI,EAAOgB,KAAK,eAAgB,CAAElE,UAASiF,OAAQb,EAAKM,KACzExB,EAAOgB,KAAK,eAAgB,CAAElE,UAASiF,OAAQb,EAAKM,GAAIyG,UAAWD,IACxEjH,EAASlB,EAAmB,IAC5BoJ,GAAc,GACdF,EAAW1E,QAAQC,MAAQ,GAC3B6E,YAAW,WACPpI,EAAS9B,GAAe,MACzB,OAIX,OACI,qBAAKrE,UAAU,SAAf,SAEQsG,EAAKkI,SAEG,sBAAKxO,UAAY2I,EAAc,mBAAqB,WAApD,UACI,uBAAO3I,UAAU,QAAQyO,WAzBzB,SAAA5E,GACV,UAAVA,EAAE6E,KAAmBJ,KAwBqDtG,IAAKmG,IAC3D,cAAC,KAAD,CAAQnO,UAAU,OAAOiN,MAAO,CAAEC,OAAQ,WAAa/E,QAAS,kBAAMkG,GAAeD,MACrF,sBAAMpO,UAAWoO,EAAa,SAAW,SAAzC,SACI,cAAC,KAAD,CACIO,kBAAkB,EAClBC,aAAc,SAAC/E,EAAGgF,GAAJ,OAAiBV,EAAW1E,QAAQC,OAASmF,EAASC,WAG5E,cAAC,KAAD,CAAc9O,UAAU,OAAOiN,MAAO,CAACC,OAAQ,WAAY/E,QAASmG,OAGxE,cAACtF,GAAA,EAAD,CAAQhJ,UAAU,QAAQmI,QA5C1B,WAChB/C,EAAOgB,KAAK,YAAc,CAAEQ,GAAIN,EAAKM,KAAO,YAA2B,IAAxB9E,EAAuB,EAAvBA,QAASI,EAAc,EAAdA,QAE/Cc,EADDlB,EACW,UADQ,QACGI,GAC1BiE,EAASQ,GAAQvB,EAAQkB,EAAKM,SAwClB,qFCtEXmI,GAAc,WACvB,OACI,sBAAK/O,UAAU,yBAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,UC+CGgP,I,OAlDO,WAElB,IAAM5J,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQtD,UAC5Ce,EAAWgD,cAEX8F,EAAc5F,iBAAO,IACrB6F,EAAiB7F,iBAAO,IA6B9B,OACI,sBAAKrJ,UAAU,aAAf,UACI,oBAAIA,UAAU,SAAd,8FACA,cAAC,GAAD,CACIc,KAAK,mFACLuH,MAAO,CACH,CAAEvH,KAAM,WAAYmC,KAAM,OAAQG,MAAO,8CAAY2E,YAAa,6GAAyBE,SAAUgH,GACrG,CAAEnO,KAAM,cAAemC,KAAM,OAAQG,MAAO,0DAAc6E,SAAUiH,IAExE5G,cApCU,SAAAuB,GAClBA,EAAEC,iBACF,IAAMpJ,EAAO,CACTyO,SAAUF,EAAYxF,QAAQC,MAAMK,OACpCiC,YAAa,CACTtL,KAAMwO,EAAezF,QAAQiB,MAAM,GACnC5J,KAAMoO,EAAezF,QAAQiB,MAAM,GAAKwE,EAAezF,QAAQiB,MAAM,GAAG5J,KAAO,KAC/EsO,SAAUF,EAAezF,QAAQiB,MAAM,GAAKwE,EAAezF,QAAQiB,MAAM,GAAGzH,KAAO,KACnF0H,KAAMuE,EAAezF,QAAQiB,MAAM,GAAKwE,EAAezF,QAAQiB,MAAM,GAAGC,KAAO,OARhE,E/B6BM,SAAAjK,GACjC,MAAqB,KAAlBA,EAAKyO,SAAwB,CAAErN,SAAS,EAAOI,QAAS,8GAEnDxB,EAAKsL,YAAYtL,MAAwC,eAA9BA,EAAKsL,YAAYoD,UAA2D,cAA9B1O,EAAKsL,YAAYoD,UAA0D,cAA9B1O,EAAKsL,YAAYoD,SACpI,CAAEtN,SAAS,EAAOI,QAAS,2OAC9BxB,EAAKsL,YAAYtL,MAAQA,EAAKsL,YAAYrB,KAAKnK,EAC5C,CAAEsB,SAAS,EAAOI,QAAQ,mJAAD,OAAkC0I,KAAKC,MAAMrK,UAA7C,gCAExB,CAAEsB,SAAS,G+B1BUuN,CAAsB3O,GAA3CoB,EAXe,EAWfA,QAASI,EAXM,EAWNA,QACbJ,GAEAqE,EAAS9B,GAAe,IACxBe,EAAOgB,KAAK,kBAAmB1F,GAAM,YAAqC,IAAlCoB,EAAiC,EAAjCA,QAASI,EAAwB,EAAxBA,QAASoN,EAAe,EAAfA,SACnDxN,GACCqE,EAAS3B,GAAa,IACtB2B,EAASE,GAAYiJ,IACrBtM,EAAU,UAAWd,IAEpBc,EAAU,QAASd,GACxBiE,EAAS9B,GAAe,QAVnBrB,EAAU,QAASd,WC4BzBqN,GAhDK,WAEhB,IAAMnK,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQtD,UAC5Ce,EAAWgD,cAEXkB,EAAUhB,iBAAO,IACjBiB,EAAWjB,iBAAO,IAClBD,EAAcC,iBAAO,IAyB3B,OACI,sBAAKrJ,UAAU,aAAf,UACI,oBAAIA,UAAU,SAAd,6FACA,cAAC,GAAD,CACIc,KAAK,uCACLuH,MAAO,CACH,CAAEvH,KAAM,OAAQmC,KAAM,OAAQG,MAAO,2BAAQ2E,YAAa,6GAAyBE,SAAUoC,GAC7F,CAAEvJ,KAAM,QAASmC,KAAM,QAASG,MAAO,iCAAS2E,YAAa,mHAA0BE,SAAUqC,GACjG,CAAExJ,KAAM,WAAYmC,KAAM,OAAQG,MAAO,+DAAc2E,YAAa,iJAA+BE,SAAUmB,IAEjHd,cAjCQ,SAAAuB,GAChBA,EAAEC,iBACF,IAAMpJ,EAAO,CACTI,KAAMuJ,EAAQZ,QAAQC,MAAMK,OAC5BhJ,MAAOuJ,EAASb,QAAQC,MAAMK,OAC9B/I,SAAUoI,EAAYK,QAAQC,MAAMK,QALnB,EhCuCS,SAAArJ,GAClC,MAAmB,KAAdA,EAAKI,MAAkBT,EAAY8B,KAAKzB,EAAKI,OAAWJ,EAAKI,KAAKkJ,QAAQ,EAGvD,KAAftJ,EAAKK,OAAiBT,EAAa6B,KAAKzB,EAAKK,OAG3B,KAAlBL,EAAKM,UAAoBT,EAAgB4B,KAAKzB,EAAKM,UAGhD,CAAEc,SAAS,GAFZ,CAAEA,SAAS,EAAOI,QAAS,iQAH3B,CAAEJ,SAAS,EAAOI,QAAS,yJAH3B,CAAEJ,SAAS,EAAOI,QAAS,gMgClCLsN,CAAuB9O,GAA5CoB,EAPa,EAObA,QAASI,EAPI,EAOJA,QACbJ,GACIpB,EAAKI,MAAQJ,EAAKK,OAASL,EAAKM,YACpCmF,EAAS9B,GAAe,IACxBe,EAAOgB,KAAK,eAAgB1F,GAAM,YAAiC,IAA9BoB,EAA6B,EAA7BA,QAASI,EAAoB,EAApBA,QAASH,EAAW,EAAXA,KAC/CD,GAEAkB,EAAU,UAAWd,GACrBiE,EAASb,GAAYvD,IACrBoE,EAAS3B,GAAa,KAJbxB,EAAU,QAASd,GAMhCiE,EAAS9B,GAAe,QAVnBrB,EAAU,QAASd,UC8BzBuN,GA/CQ,WAEnB,IAAMrK,EAASoD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQtD,UAC5Ce,EAAWgD,cAEXuG,EAAiBrG,iBAAO,IACxBsG,EAAiBtG,iBAAO,IACxBuG,EAAwBvG,iBAAO,IAwBrC,OACI,sBAAKrJ,UAAU,aAAf,UACI,oBAAIA,UAAU,SAAd,uFACA,cAAC,GAAD,CACIc,KAAK,4EACLuH,MAAO,CACH,CAAEvH,KAAM,cAAemC,KAAM,WAAYG,MAAO,sEAAgB2E,YAAa,qIAA6BE,SAAUyH,GACpH,CAAE5O,KAAM,cAAemC,KAAM,WAAYG,MAAO,sEAAgB2E,YAAa,qIAA6BE,SAAU0H,GACpH,CAAE7O,KAAM,qBAAsBmC,KAAM,WAAYG,MAAO,qGAAsB2E,YAAa,2IAA8BE,SAAU2H,IAEtItH,cAhCW,SAAAuB,GACnBA,EAAEC,iBACF,IAAMpJ,EAAO,CACTmP,YAAaH,EAAejG,QAAQC,MAAMK,OAC1C+F,YAAaH,EAAelG,QAAQC,MAAMK,OAC1CgG,mBAAoBH,EAAsBnG,QAAQC,MAAMK,QALpC,EjCoDS,SAAArJ,GACrC,MAAwB,KAArBA,EAAKmP,YAA2B,CAAE/N,SAAS,EAAOI,QAAS,yJAEjC,KAArBxB,EAAKoP,YAA2B,CAAEhO,SAAS,EAAOI,QAAS,yJAC3DxB,EAAKoP,YAAY9F,OAAO,EACrB,CAAElI,SAAS,EAAOI,QAAS,qMAE9BxB,EAAKqP,qBAAuBrP,EAAKoP,YAAoB,CAAEhO,SAAS,EAAOI,QAAS,yJAE5E,CAAEJ,SAAS,GiCtDUkO,CAA0BtP,GAA/CoB,EAPgB,EAOhBA,QAASI,EAPO,EAOPA,QACbJ,GAEAqE,EAAS9B,GAAe,IACxBe,EAAOgB,KAAK,kBAAmB1F,GAAM,YAA2B,IAAxBoB,EAAuB,EAAvBA,QAASI,EAAc,EAAdA,QACzCJ,GAEAkB,EAAU,UAAWd,GACrBiE,EAAS3B,GAAa,KAHbxB,EAAU,QAASd,GAKhCiE,EAAS9B,GAAe,QATnBrB,EAAU,QAASd,UCFzB+N,I,OAnBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACI,sBAAKlQ,UAAU,mBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBACIA,UAAU,UACV+L,IAAMmE,EAAOhP,eAAP,UAA2Bd,EAA3B,4BAAuD8P,EAAOhP,gBAAmB,mBACvF+K,IAAMiE,EAAOpP,OAEjB,sBAAMd,UAAYkQ,EAAOC,SAAW,0BAA4B,iCAEpE,sBAAKnQ,UAAU,qBAAf,UACI,iCAAOkQ,EAAOpP,KAAd,IAAsBoP,EAAOrD,SAAW,cAAC,KAAD,OACxC,sBAAM7M,UAAU,mBAAhB,SAAqCkQ,EAAOC,SAAW,SAAWD,EAAOE,mBCsF1EC,GA3FE,WAAO,IAAD,EAEK1I,oBAAS,GAFd,oBAEZ0E,EAFY,KAENC,EAFM,OAGe9D,aAAY,SAAAC,GAC1C,MAAO,CAAErD,OAAQqD,EAAMC,QAAQtD,OAAQkB,KAAMmC,EAAMnC,KAAMQ,QAAS2B,EAAM3B,YADpE1B,EAHW,EAGXA,OAAQkB,EAHG,EAGHA,KAAMQ,EAHH,EAGGA,QAGhBX,EAAWgD,cAEjBK,qBAAU,WACHpE,GAAQe,EAASU,GAAezB,EAAQkB,EAAK5F,KAAKkG,OAEtD,IAoCH,OACI,sBAAK5G,UAAU,kBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBACIA,UAAU,eACV+L,IAAMzF,EAAK5F,KAAKsL,YAAV,UAA2B5L,EAA3B,yBAAoDkG,EAAK5F,KAAKsL,aAAgB,mBACpFC,IAAM3F,EAAK5F,KAAKI,OAEpB,sBAAKd,UAAU,gCAAf,UACI,sBAAMA,UAAU,mBAAhB,SAAoCsG,EAAK5F,KAAKI,OAC9C,sBAAMd,UAAU,mBAAhB,SAAoCsG,EAAK5F,KAAKkG,QAG9CN,EAAK5F,KAAK8N,UACV,sBAAKxO,UAAU,oBAAf,UACI,cAAC,KAAD,CAAaA,UAAU,cAAcmI,QAAS,kBAAMmE,GAASD,MAC7D,sBAAKrM,UAAYqM,EAAO,kBAAoB,SAA5C,UACM/F,EAAK5F,KAAKmM,SAAW,uBAAM7M,UAAU,SAASmI,QAnDlD,WAClBhC,EAASzB,EAAgB,cACzByB,EAAS3B,GAAa,KAiDqB,UAAiD,cAAC,KAAD,CAAWxE,UAAU,SAAtE,mEACrBsG,EAAK5F,KAAKmM,SAAW,uBAAM7M,UAAU,SAASmI,QAnCpD,WACEoE,OAAOC,QAAQ,iKAE7BrG,EAAS3B,GAAa,IACtB2B,EAASjC,GAAe,IACxBkB,EAAOgB,KAAK,cAAgB,CAAEQ,GAAIN,EAAK5F,KAAKkG,KAAO,YAA2B,IAAxB9E,EAAuB,EAAvBA,QAASI,EAAc,EAAdA,QACvDJ,GAEAqE,EAASI,GAAWD,EAAK5F,OACzByF,EAASO,MACT1D,EAAU,UAAWd,IAJZc,EAAU,QAASd,GAMhCiE,EAASjC,GAAe,SAuBW,UAA+C,cAAC,KAAD,CAAelE,UAAU,SAAxE,kDACpBsG,EAAK5F,KAAKmM,SAAW,uBAAM7M,UAAU,SAASmI,QAhDtD,WACf/C,EAAOgB,KAAK,aAAe,CAAEQ,GAAIN,EAAK5F,KAAKkG,KAAO,YAA2B,IAAxB9E,EAAuB,EAAvBA,QAASI,EAAc,EAAdA,QACtDJ,GAEAkB,EAAU,UAAWd,GACrBiE,EAASI,GAAWD,EAAK5F,OACzByF,EAAS3B,GAAa,IACtB2B,EAASO,OALA1D,EAAU,QAASd,OA8CQ,UAA8C,cAAC,KAAD,CAAclC,UAAU,SAAtE,6EAKxC,gCACI,oBAAIA,UAAU,YAAd,qEACA,qBAAKA,UAAU,WAAf,SAEQ8G,EAAQyB,QAEJ,qBAAKvI,UAAU,+DAAf,SACI,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,gBAGxC2G,EAAQpG,KAAKoI,KAAI,SAACoH,EAAQnH,GACtB,OAAO,cAAC,GAAD,CAAoBmH,OAAQA,GAAfnH,eClCrCuH,GApDG,WAAO,IAAD,EAEK9H,aAAY,SAAAC,GACjC,MAAO,CAAErD,OAAQqD,EAAMC,QAAQtD,OAAQkB,KAAMmC,EAAMnC,KAAK5F,SADpD0E,EAFY,EAEZA,OAAQkB,EAFI,EAEJA,KAGVH,EAAWgD,cAEXkB,EAAUhB,iBAAO,IACjB6F,EAAiB7F,mBA6BvB,OACI,sBAAKrJ,UAAU,aAAf,UACI,oBAAIA,UAAU,SAAd,2EACA,cAAC,GAAD,CACIc,KAAK,uCACLuH,MAAO,CACH,CAAEvH,KAAM,WAAYmC,KAAM,OAAQG,MAAO,oDAAa2E,YAAa,mHAA0BE,SAAUoC,GACvG,CAAEvJ,KAAM,cAAemC,KAAM,OAAQG,MAAO,0DAAc6E,SAAUiH,IAExE5G,cApCM,SAAAuB,GACdA,EAAEC,iBACF,IAAMpJ,EAAO,CACTkG,GAAIN,EAAKM,GACTuI,SAAU9E,EAAQZ,QAAQC,MAAMK,OAChCiC,YAAa,CACTtL,KAAMwO,EAAezF,QAAQiB,MAAM,GACnC5J,KAAMoO,EAAezF,QAAQiB,MAAM,GAAKwE,EAAezF,QAAQiB,MAAM,GAAG5J,KAAO,KAC/EsO,SAAUF,EAAezF,QAAQiB,MAAM,GAAKwE,EAAezF,QAAQiB,MAAM,GAAGzH,KAAO,KACnF0H,KAAMuE,EAAezF,QAAQiB,MAAM,GAAKwE,EAAezF,QAAQiB,MAAM,GAAGC,KAAO,OATpE,EpC+DS,SAAAjK,GAChC,OAAGA,EAAKsL,YAAYtL,MAAwC,eAA9BA,EAAKsL,YAAYoD,UAA2D,cAA9B1O,EAAKsL,YAAYoD,UAA0D,cAA9B1O,EAAKsL,YAAYoD,SAC/H,CAAEtN,SAAS,EAAOI,QAAS,2OAC9BxB,EAAKsL,YAAYtL,MAAQA,EAAKsL,YAAYrB,KAAKnK,EAC5C,CAAEsB,SAAS,EAAOI,QAAQ,mJAAD,OAAkC0I,KAAKC,MAAMrK,UAA7C,gCACxB,CAAEsB,SAAS,GoCxDUyO,CAAqB7P,GAA1CoB,EAZW,EAYXA,QAASI,EAZE,EAYFA,QACbJ,GACIpB,EAAKyO,UAAYzO,EAAKsL,YAAYtL,QACtCyF,EAAS9B,GAAe,IACxBe,EAAOgB,KAAK,YAAa1F,GAAM,YAA2B,IAAxBoB,EAAuB,EAAvBA,QAASI,EAAc,EAAdA,QACnCJ,GAEAkB,EAAU,UAAWd,GACrBiE,EAAS3B,GAAa,KAHbxB,EAAU,QAASd,GAKhCiE,EAAS9B,GAAe,QATnBrB,EAAU,QAASd,UCnB3BsO,GAAU,WAAO,IAAD,EAEWhI,aAAY,SAAAC,GAC5C,MAAO,CAAEgI,UAAWhI,EAAMC,QAAQ+H,UAAWC,aAAcjI,EAAMC,QAAQgI,iBADrED,EAFiB,EAEjBA,UAAWC,EAFM,EAENA,aAGbvK,EAAWgD,cAEjB,OACI,cAACwH,GAAA,EAAD,CAAOtE,KAAMoE,EAAWG,OAAQ,kBAAMzK,EAAS3B,GAAa,KAASqM,UAAQ,EAA7E,SACI,sBAAK7Q,UAAU,MAAf,UACuB,kBAAjB0Q,GAAoC,cAAC,GAAD,IACnB,gBAAjBA,GAAkC,cAAC,GAAD,IACjB,mBAAjBA,GAAqC,cAAC,GAAD,IACpB,aAAjBA,GAA+B,cAAC,GAAD,IACd,cAAjBA,GAAgC,cAAC,GAAD,UCpBrCI,GAAW,SAAC,GAAiB,IAAf3F,EAAc,EAAdA,QAWvB,OATA3B,qBAAU,WACNlI,IACKyP,MAAK,YAAiB,EAAdjP,QACOqJ,EAAQG,KAAK,SACpBH,EAAQG,KAAK,cAG3B,IAEI,cAAC,EAAD,KCTE0F,GAAW,SAAC,GAAiB,IAAf7F,EAAc,EAAdA,QAAc,EAEc3C,aAAY,SAAAC,GAC3D,MAAO,CAAEwI,YAAaxI,EAAMC,QAAQuI,YAAanM,WAAY2D,EAAMC,QAAQ5D,WAAYoM,cAAezI,EAAMC,QAAQwI,kBADhHD,EAF6B,EAE7BA,YAAanM,EAFgB,EAEhBA,WAAYoM,EAFI,EAEJA,cAG3B/K,EAAWgD,cAEjBK,qBAAU,WASN,OARAlI,IACKyP,MAAK,YAAiB,EAAdjP,SACOqJ,EAAQG,KAAK,SACzBiD,YAAW,WACPpI,EAASjC,GAAe,MACzB,QAGJ,WACHiC,EAASjC,GAAe,OAG7B,IAEH,IAAMoE,EAAa,uCAAG,WAAM5H,GAAN,eAAAa,EAAA,kEAEd4E,EAAS9B,GAAe,KAErB3D,EAAK+J,gBAJM,gCAKOhK,EAAOC,GALd,OAKVuK,EALU,OAMV9E,EAAStB,GAAgB,IANf,wCAQOxD,EAAOX,GARd,QAQVuK,EARU,OASVxJ,aAAayI,QAAQ,YAAae,EAASvK,KAAKc,OAChD2J,EAAQG,KAAK,SAVH,QAYdnF,EAAS9B,GAAe,IACxBrB,EAAU,UAAWiI,EAASvK,KAAKwB,SAbrB,kDAediE,EAAS9B,GAAe,IACxBrB,EAAU,QAAS,KAAMiI,SAASvK,KAAKwB,SAhBzB,0DAAH,sDAoBnB,OACI,qBAAKlC,UAAU,iFAAf,SAEQiR,EAEQ,cAAC,EAAD,IAEA,eAAC,WAAD,WACI,oBAAIjR,UAAU,gBAAd,wBACA,oBAAIA,UAAU,YAAd,SAA4BkR,EAAgB,wFAAoBpM,EAAa,2BAAS,mCAElFoM,EACM,cAAC,GAAD,IACApM,EACI,cAAC,GAAD,CAAYwD,cAAeA,IAC3B,cAAC,GAAD,CAAYA,cAAeA,U,uCCtDxD6I,GAAW,SAAC,GAAiB,IAAfhG,EAAc,EAAdA,QAAc,EAEgD3C,aAAY,SAAAC,GAC7F,MAAO,CACHwI,YAAaxI,EAAMC,QAAQuI,YAC3B7F,iBAAkB3C,EAAMC,QAAQ0C,iBAChCgG,UAAW3I,EAAMC,QAAQ0I,UACzB9K,KAAMmC,EAAMnC,KACZoG,iBAAkBjE,EAAMC,QAAQgE,iBAChCtH,OAAQqD,EAAMC,QAAQtD,WAPtB6L,EAF6B,EAE7BA,YAAa7F,EAFgB,EAEhBA,iBAAkBgG,EAFF,EAEEA,UAAW9K,EAFb,EAEaA,KAAMoG,EAFnB,EAEmBA,iBAAkBtH,EAFrC,EAEqCA,OAUpEe,EAAWgD,cAEXkI,EAAmB,WACrBlL,ErCsBG,CAAElD,KAAMe,KqCkBf,OArCAwF,qBAAU,WAcN,OAbAlI,IACKyP,MAAK,YAAwB,IAArBjP,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACVD,GAEAqE,EAASb,GAAYvD,IACjBqD,GAAQe,EAAShB,GAAUmM,KAAG,CAACC,MAAO,CAAC/P,MAAOC,aAAaC,QAAQ,kBACvE6M,YAAW,WACPpI,EAASjC,GAAe,MACzB,KACHqI,OAAO1J,iBAAiB,SAAUwO,IAPzBlG,EAAQG,KAAK,YAW3B,WACHnF,EAASjC,GAAe,IACxBqI,OAAOiF,oBAAoB,SAAUH,MAG1C,IAEH7H,qBAAU,WAUN,OATGpE,IACCe,EAASD,GAASd,IAClBA,EAAOgB,KAAK,iBACZhB,EAAOsI,GAAG,oBAAoB,YAAe,IAAZpH,EAAW,EAAXA,KAC7BH,E/B1BU,SAAAG,GACtB,MAAO,CAAErD,KAAMwD,GAAarC,QAASkC,G+ByBhBmL,CAAWnL,IACpBH,EAASE,GAAYC,QAItB,WACAlB,GAAQA,EAAO2I,IAAI,uBAG3B,CAAC3I,IAGA,qBAAKpF,UAAU,eAAf,SAEQiR,EAEQ,cAAC,EAAD,IAEA,eAAC,WAAD,YAEQvE,EAAiB,MAEV0E,IADD,cAAC,GAAD,CAASjG,QAASA,IAG5B,eAACuG,GAAA,EAAD,CAAK1R,UAAU,kBAAf,UACI,cAAC2R,GAAA,EAAD,CAAK3R,UAAaoR,GAAa1E,EAAiB,IAAO,SAAW,MAAQkF,GAAI,EAAGC,GAAI,EAArF,SACI,sBAAK7R,UAAU,sBAAf,UAC2B,YAArBoL,GAAkC,cAAC,GAAD,CAASD,QAASA,IAC/B,UAArBC,GAAgC,cAAC,GAAD,SAG1C,cAACuG,GAAA,EAAD,CAAK3R,UAAW0M,EAAiB,KAAuB0E,EAAjB,eAA8C,SAAUQ,GAAI,EAAGC,GAAI,EAA1G,SAEQvL,EAAKiC,QAEG,cAAC,EAAD,IAECjC,EAAK5F,KAAKI,KAML,cAAC,GAAD,IAJE,sBAAKd,UAAU,iBAAf,UACM0M,EAAiB,KAAO,cAAC,KAAD,CAAc1M,UAAU,YAAYmI,QAAS,kBAAMhC,EAASvB,GAAa,OACjG0B,EAAKL,MAAQK,EAAKL,MAAQ,2B,mCC7FlF6L,GAAe,CACjBb,aAAa,EACbtI,aAAa,EACbyC,iBAAkB,QAClBqF,WAAW,EACXC,aAAc,GACd5L,YAAY,EACZoM,eAAe,EACfE,WAAW,EACX3D,gBAAiB,EACjBL,cAAe,EACfD,gBAAiB,GACjBT,iBAAkBH,OAAOwF,WACzB3M,OAAQ,MAsBG4M,GAnBQ,WAAmC,IAAlCvJ,EAAiC,uDAAzBqJ,GAAcG,EAAW,uCACrD,OAAOA,EAAOhP,MACV,KAAKI,EAAkB,OAAO,6BAAKoF,GAAZ,IAAmBwI,YAAagB,EAAO7N,UAC9D,KAAKd,EAAkB,OAAO,6BAAKmF,GAAZ,IAAmBE,YAAasJ,EAAO7N,UAC9D,KAAKb,EAAkB,OAAO,6BAAKkF,GAAZ,IAAmB2C,iBAAkB6G,EAAO7N,UACnE,KAAKZ,EAAgB,OAAO,6BAAKiF,GAAZ,IAAmBgI,UAAWwB,EAAO7N,UAC1D,KAAKX,EAAmB,OAAO,6BAAKgF,GAAZ,IAAmBiI,aAAcuB,EAAO7N,UAChE,KAAKV,EAAgB,OAAO,6BAAK+E,GAAZ,IAAmB2I,UAAWa,EAAO7N,UAC1D,KAAKT,EAAmB,OAAO,6BAAK8E,GAAZ,IAAmB3D,WAAYmN,EAAO7N,UAC9D,KAAKR,EAAoB,OAAO,6BAAK6E,GAAZ,IAAmByI,cAAee,EAAO7N,UAClE,KAAKP,EAAuB,OAAO,6BAAK4E,GAAZ,IAAmBgF,gBAAiBwE,EAAO7N,UACvE,KAAKN,EAAqB,OAAO,6BAAK2E,GAAZ,IAAmB2E,cAAe6E,EAAO7N,UACnE,KAAKL,EAAuB,OAAO,6BAAK0E,GAAZ,IAAmB0E,gBAAiB8E,EAAO7N,UACvE,KAAKJ,EAAuB,OAAO,6BAAKyE,GAAZ,IAAmBiE,iBAAkBH,OAAOwF,aACxE,KAAK9N,EAAY,OAAO,6BAAKwE,GAAZ,IAAmBrD,OAAQ6M,EAAO7N,UACnD,QAAS,OAAOqE,IC/BlBqJ,GAAe,GASNI,GAPK,WAAmC,IAAlCzJ,EAAiC,uDAAzBqJ,GAAcG,EAAW,uCAClD,OAAOA,EAAOhP,MACV,KAAKoC,GAAe,OAAO4M,EAAO7N,QAClC,QAAS,OAAOqE,ICLlBqJ,GAAe,CACjBvJ,SAAS,EACT7H,KAAM,GACNuF,MAAO,IAuBIkM,GApBM,WAAmC,IAAlC1J,EAAiC,uDAAzBqJ,GAAcG,EAAW,uCACnD,OAAQA,EAAOhP,MACX,KAAKuC,GAAc,OAAO,6BAAKiD,GAAZ,IAAmBF,SAAS,IAC/C,KAAK9C,GAAiB,MAAO,CAAE8C,SAAS,EAAO7H,KAAMuR,EAAO7N,QAAS6B,MAAO,IAC5E,KAAKP,GAAiB,MAAO,CAAE6C,SAAS,EAAO7H,KAAM,GAAIuF,MAAOgM,EAAO7N,SACvE,KAAKuB,GACD,IAAMyM,EAAY3J,EAAM/H,KAAK2R,WAAU,SAAA/L,GAAI,OAAIA,EAAKM,GAAGgH,aAAeqE,EAAO7N,QAAQwC,GAAGgH,cAKxF,OAJkB,IAAfwE,GACIH,EAAO7N,QAAQtD,OAAM2H,EAAM/H,KAAK0R,GAAWtR,KAAOmR,EAAO7N,QAAQtD,MACjEmR,EAAO7N,QAAQ4H,cAAavD,EAAM/H,KAAK0R,GAAWpG,YAAciG,EAAO7N,QAAQ4H,cAC/EvD,EAAM/H,KAAK4K,KAAK2G,EAAO7N,SACvB,CAAEmE,SAAS,EAAO7H,KAAM+H,EAAM/H,KAAMuF,MAAO,IACtD,KAAKL,GACD,IAAM0M,EAAkB7J,EAAM/H,KAAK2R,WAAU,SAAA/L,GAAI,OAAIA,EAAKM,GAAGgH,aAAeqE,EAAO7N,QAAQwC,GAAGgH,cAE9F,OADwB,IAArB0E,GAAwB7J,EAAM/H,KAAK6R,OAAOD,EAAiB,GACvD,CAAE/J,SAAS,EAAO7H,KAAM+H,EAAM/H,KAAMuF,MAAO,IACtD,QAAS,OAAOwC,ICtBlBqJ,GAAe,CACjBvJ,SAAS,EACT7H,KAAM,GACNuF,MAAO,IAmBIuM,GAhBK,WAAmC,IAAlC/J,EAAiC,uDAAzBqJ,GAAcG,EAAW,uCAClD,OAAQA,EAAOhP,MACX,KAAKuC,GAAc,OAAO,6BAAKiD,GAAZ,IAAmBF,SAAS,IAC/C,KAAK9C,GAAiB,MAAO,CAAE8C,SAAS,EAAO7H,KAAMuR,EAAO7N,QAAS6B,MAAO,IAC5E,KAAKP,GAAiB,MAAO,CAAE6C,SAAS,EAAO7H,KAAM,GAAIuF,MAAOgM,EAAO7N,SACvE,KAAKoC,GAAY,MAAO,CAAE+B,SAAS,EAAO7H,KAAM,GAAIuF,MAAO,IAC3D,KAAKQ,GAKD,OAJGgC,EAAM/H,KAAKkG,IAAM6B,EAAM/H,KAAKkG,GAAGgH,aAAaqE,EAAO7N,QAAQwC,GAAGgH,aAC1DqE,EAAO7N,QAAQtD,OAAM2H,EAAM/H,KAAKI,KAAOmR,EAAO7N,QAAQtD,MACtDmR,EAAO7N,QAAQ4H,cAAavD,EAAM/H,KAAKsL,YAAciG,EAAO7N,QAAQ4H,cAEpE,CAAEzD,SAAS,EAAO7H,KAAM+H,EAAM/H,KAAMuF,MAAO,IACtD,QAAS,OAAOwC,IClBlBqJ,GAAe,CACjBvJ,SAAS,EACT7H,KAAM,GACNuF,MAAO,IAYIuM,GATK,WAAmC,IAAlC/J,EAAiC,uDAAzBqJ,GAAcG,EAAW,uCAClD,OAAQA,EAAOhP,MACX,KAAKuC,GAAc,OAAO,6BAAKiD,GAAZ,IAAmBF,SAAS,IAC/C,KAAK9C,GAAiB,MAAO,CAAE8C,SAAS,EAAO7H,KAAMuR,EAAO7N,QAAS6B,MAAO,IAC5E,KAAKP,GAAiB,MAAO,CAAE6C,SAAS,EAAO7H,KAAM,GAAIuF,MAAOgM,EAAO7N,SACvE,QAAS,OAAOqE,ICXlBqJ,GAAe,CACjBvJ,SAAS,EACT7H,KAAM,GACNuF,MAAO,IA4BIwM,GAzBS,WAAmC,IAAlChK,EAAiC,uDAAzBqJ,GAAcG,EAAW,uCACtD,OAAQA,EAAOhP,MACX,KAAKuC,GAAc,OAAO,6BAAKiD,GAAZ,IAAmBF,SAAS,IAC/C,KAAK9C,GAAiB,MAAO,CAAE8C,SAAS,EAAO7H,KAAMuR,EAAO7N,QAAS6B,MAAO,IAC5E,KAAKP,GAAiB,MAAO,CAAE6C,SAAS,EAAO7H,KAAM,GAAIuF,MAAOgM,EAAO7N,SACvE,KAAK2C,GACD,IAAM2L,EAAiBT,EAAO7N,QAAQ2I,KAAKC,MAAM,KAAK,GAGtD,OAFIvE,EAAM/H,KAAKgS,KAAiBjK,EAAM/H,KAAKgS,GAAkB,IAC7DjK,EAAM/H,KAAKgS,GAAgBpH,KAAK2G,EAAO7N,SAChC,CAAEmE,SAAS,EAAO7H,KAAM+H,EAAM/H,KAAMuF,MAAO,IACtD,KAAKe,GACD,IAAM2L,EAAoBV,EAAO7N,QAAQ2I,KAAKC,MAAM,KAAK,GACnD4F,EAAenK,EAAM/H,KAAKiS,GAAmBN,WAAU,SAAAnQ,GAAO,OAAIA,EAAQ0E,GAAGgH,aAAeqE,EAAO7N,QAAQwC,GAAGgH,cAEpH,OADqB,IAAlBgF,IAAqBnK,EAAM/H,KAAKiS,GAAmBC,GAAgBX,EAAO7N,SACtE,CAAEmE,SAAS,EAAO7H,KAAM+H,EAAM/H,KAAMuF,MAAO,IACtD,KAAKgB,GACD,IAAM4L,EAAoBZ,EAAO7N,QAAQ2I,KAAKC,MAAM,KAAK,GACnD8F,EAAqBrK,EAAM/H,KAAKmS,GAAmBR,WAAU,SAAAnQ,GAAO,OAAIA,EAAQ0E,GAAGgH,aAAeqE,EAAO7N,QAAQwC,GAAGgH,cAG1H,OAF2B,IAAxBkF,GAA2BrK,EAAM/H,KAAKmS,GAAmBN,OAAOO,EAAoB,GAC3C,IAAzCrK,EAAM/H,KAAKmS,GAAmB7I,eAAqBvB,EAAM/H,KAAKmS,GAC1D,CAAEtK,SAAS,EAAO7H,KAAM+H,EAAM/H,KAAMuF,MAAO,IACtD,QAAS,OAAOwC,ICXTsK,GATKC,2BAAgB,CAChCtK,QAASsJ,GACTjQ,KAAMmQ,GACNnM,MAAOoM,GACP7L,KAAMkM,GACN1L,QAASmM,GACT7L,SAAUqL,KCRCS,GAFDC,uBAAYJ,GAAaK,+BAAoBC,2BAAgBC,QCc5DC,GAbH,kBACV,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAW5C,KACjC,cAAC,IAAD,CAAO2C,KAAK,QAAQC,UAAW1C,KAC/B,cAAC,IAAD,CAAOyC,KAAK,QAAQC,UAAWvC,QAEjC,cAAC,GAAD,UCPNwC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.decace83.chunk.js","sourcesContent":["import { Spinner } from 'react-bootstrap';\r\n\r\nexport const Loading = () => (\r\n    <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n        <Spinner animation=\"border\" variant=\"secondary\" />\r\n    </div>\r\n);","export const ENDPOINT = 'https://shayanchat.herokuapp.com';\r\n// export const ENDPOINT = 'http://localhost:3000/';\r\nexport const namePattern = /^[A-Za-z\\u0600-\\u06FF\\s]+$/;\r\nexport const emailPattern =/^\\S+@\\S+.\\S+$/;\r\nexport const usernamePattern = /^[A-Za-z][A-Za-z0-9]*$/;\r\nexport const imageMaxSize = 1048576;","import axios from 'axios';\r\n\r\nexport const signup = data => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"email\", data.email);\r\n    formData.append(\"username\", data.username);\r\n    formData.append(\"password\", data.password);\r\n    formData.append(\"profilePicture\", data.profilePicture);\r\n    return axios.post('/api/auth/signup', formData);\r\n};\r\n\r\nexport const signin = data => axios.post('/api/auth/signin', data);\r\n\r\nexport const verifyUser = async () => {\r\n    try {\r\n        const token = localStorage.getItem('SCA_TOKEN');\r\n        if(token) {\r\n            const { data } = await axios.get('/api/auth', { headers: { Authorization: `Bearer ${token}` } });\r\n            if(data.success) return { success: true, user: data.user };\r\n            else return { success: false };\r\n        } else return { success: false };\r\n    } catch (error) {\r\n        return { success: false };\r\n    }\r\n};\r\n\r\nexport const sendResetLink = data => axios.post('/api/auth/reset-password', data);","import { namePattern, emailPattern, usernamePattern, imageMaxSize } from './constants';\r\n\r\nexport const validateSignupReq = data => {\r\n    if(data.name === '') return { success: false, message: 'نام خود را وارد کنید' };\r\n    else if(!namePattern.test(data.name) || !(data.name.length>=3)) \r\n        return { success: false, message: 'لطفا نام خود را به صورت صحیح وارد کنید' };\r\n    \r\n    else if(data.email === '') return { success: false, message: 'ایمیل خود را وارد کنید' };\r\n    else if(!emailPattern.test(data.email)) \r\n        return { success: false, message: 'لطفا یک ایمیل معتبر وارد کنید' };\r\n    \r\n    else if(data.username === '') return { success: false, message: 'نام‌کاربری خود را وارد کنید' };\r\n    else if(!usernamePattern.test(data.username)) \r\n        return { success: false, message: 'نام‌کاربری می‌تواند شامل حروف لاتین و اعداد باشد' };\r\n    \r\n    else if(data.password === '') return { success: false, message: 'رمزعبور خود را وارد کنید' };\r\n    else if(data.password.length<8) \r\n        return { success: false, message: 'رمزعبور باید حداقل شامل 8 کاراکتر باشد' };\r\n    \r\n    else if(data.confirmPassword !== data.password) return { success: false, message: 'رمزعبور و تکرار آن یکسان نیست' };\r\n    \r\n    else if(data.profilePicture && !(data.profilePicture.type === 'image/jpeg' || data.profilePicture.type === 'image/jpg' || data.profilePicture.type === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.profilePicture && data.profilePicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateSigninReq = data => {\r\n    if(data.username === '') return { success: false, message: 'نام‌کاربری خود را وارد کنید' };\r\n    else if(!usernamePattern.test(data.username)) return { success: false, message: 'نام‌کاربری یا رمزعبور نامعتبر است' };\r\n    else if(data.password === '') return { success: false, message: 'رمزعبور خود را وارد کنید' };\r\n    else if(data.password.length<8) return { success: false, message: 'نام‌کاربری یا رمزعبور نامعتبر است' };\r\n    else return { success: true }\r\n};\r\n\r\nexport const validateResetPasswordReq = data => {\r\n    if(data.email === '') return { success: false, message: 'ایمیل خود را وارد کنید' };\r\n    else if(!emailPattern.test(data.email)) \r\n        return { success: false, message: 'لطفا یک ایمیل معتبر وارد کنید' };\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateCreateRoomReq = data => {\r\n    if(data.roomName === '') return { success: false, message: 'نام گروه را وارد کنید' };\r\n    \r\n    else if(data.roomPicture.data && !(data.roomPicture.mimetype === 'image/jpeg' || data.roomPicture.mimetype === 'image/jpg' || data.roomPicture.mimetype === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.roomPicture.data && data.roomPicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateEditProfileReq = data => {\r\n    if( (data.name !== '') && (!namePattern.test(data.name) || !(data.name.length>=3))) \r\n        return { success: false, message: 'لطفا نام خود را به صورت صحیح وارد کنید' };\r\n\r\n    else if( data.email !== '' && !emailPattern.test(data.email) ) \r\n        return { success: false, message: 'لطفا یک ایمیل معتبر وارد کنید' };\r\n\r\n    else if( data.username !== '' && !usernamePattern.test(data.username) ) \r\n        return { success: false, message: 'نام‌کاربری می‌تواند شامل حروف لاتین و اعداد باشد' };\r\n    \r\n    else return { success: true };\r\n};\r\n\r\nexport const validateChangePasswordReq = data => {\r\n    if(data.oldPassword === '') return { success: false, message: 'رمزعبور فعلی خود را وارد کنید' };\r\n    \r\n    else if(data.newPassword === '') return { success: false, message: 'رمزعبور جدید خود را وارد کنید' };\r\n    else if(data.newPassword.length<8) \r\n        return { success: false, message: 'رمزعبور باید حداقل شامل 8 کاراکتر باشد' };\r\n    \r\n    else if(data.confirmNewPassword !== data.newPassword) return { success: false, message: 'رمزعبور و تکرار آن یکسان نیست' };\r\n\r\n    else return { success: true };\r\n};\r\n\r\nexport const validateEditGroupReq = data => {\r\n    if(data.roomPicture.data && !(data.roomPicture.mimetype === 'image/jpeg' || data.roomPicture.mimetype === 'image/jpg' || data.roomPicture.mimetype === 'image/png')) \r\n        return { success: false, message: 'عکس موردنظر باید یکی از فرمت‌های jpg یا jpeg یا png باشد' };\r\n    else if(data.roomPicture.data && data.roomPicture.size>imageMaxSize) \r\n        return { success: false, message: `حجم عکس موردنظر باید کمتر از ${Math.floor(imageMaxSize/1000000)}MB باشد` };\r\n    else return { success: true };\r\n};","import Swal from 'sweetalert2';\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 5000,\r\n    timerProgressBar: true,\r\n    didOpen: toast => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer);\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\r\n    }\r\n});\r\n\r\nexport const makeToast = (type, message) => {\r\n    Toast.fire({\r\n        icon: type,\r\n        title: message\r\n    });\r\n};","export const SET_LOADING_PAGE = '[SETTING]SET_LOADING_PAGE';\r\nexport const SET_LOADING_FORM = '[SETTING]SET_LOADING_FORM';\r\nexport const SELECT_MENU_ITEM = '[SETTING]SELECT_MENU_ITEM';\r\nexport const SET_SHOW_MODAL = '[SETTING]SET_SHOW_MODAL';\r\nexport const SET_MODAL_CONTENT = '[SETTING]SET_MODAL_CONTENT';\r\nexport const SET_SHOW_CHATS = '[SETTING]SET_SHOW_CHATS';\r\nexport const SET_IS_REGISTERED = '[SETTING]SET_IS_REGISTERED';\r\nexport const SET_RESET_PASSWORD = '[SETTING]SET_RESET_PASSWORD';\r\nexport const SET_SEND_MESSAGE_TYPE = '[SETTING]SET_SEND_MESSAGE_TYPE';\r\nexport const SET_EDIT_MESSAGE_ID = '[SETTING]SET_EDIT_MESSAGE_ID';\r\nexport const SET_EDIT_MESSAGE_TEXT = '[SETTING]SET_EDIT_MESSAGE_TEXT';\r\nexport const SET_WINDOW_INNERWIDTH = '[SETTING]SET_WINDOW_INNERWIDTH';\r\nexport const SET_SOCKET = '[SETTING]SET_SOCKET';","import { SET_LOADING_PAGE, SET_LOADING_FORM, SELECT_MENU_ITEM, SET_SHOW_MODAL, SET_MODAL_CONTENT, SET_SHOW_CHATS, SET_IS_REGISTERED, SET_SEND_MESSAGE_TYPE, SET_EDIT_MESSAGE_ID, SET_EDIT_MESSAGE_TEXT, SET_WINDOW_INNERWIDTH, SET_SOCKET, SET_RESET_PASSWORD } from './types';\r\n\r\nexport const setLoadingPage = isLoading => {\r\n    return { type: SET_LOADING_PAGE, payload: isLoading };\r\n};\r\n\r\nexport const setLoadingForm = isLoading => {\r\n    return { type: SET_LOADING_FORM, payload: isLoading };\r\n};\r\n\r\nexport const selectMenuItem = itemName => {\r\n    return { type: SELECT_MENU_ITEM, payload: itemName };\r\n};\r\n\r\nexport const setShowModal = isShow => {\r\n    return { type: SET_SHOW_MODAL, payload: isShow };\r\n};\r\n\r\nexport const setModalContent = content => {\r\n    return { type: SET_MODAL_CONTENT, payload: content };\r\n};\r\n\r\nexport const setShowChats = isShow => {\r\n    return { type: SET_SHOW_CHATS, payload: isShow };\r\n};\r\n\r\nexport const setIsRegistered = isRegister => {\r\n    return { type: SET_IS_REGISTERED, payload: isRegister };\r\n};\r\n\r\nexport const setResetPassword = isReset => {\r\n    return { type: SET_RESET_PASSWORD, payload: isReset };\r\n};\r\n\r\nexport const setSendMessageType = typeNumber => {\r\n    return { type: SET_SEND_MESSAGE_TYPE, payload: typeNumber };\r\n};\r\n\r\nexport const setEditMessageId = editMessageId => {\r\n    return { type: SET_EDIT_MESSAGE_ID, payload: editMessageId };\r\n};\r\n\r\nexport const setEditMessageText = editMessageText => {\r\n    return { type: SET_EDIT_MESSAGE_TEXT, payload: editMessageText };\r\n};\r\n\r\nexport const setInnerWidth = () => {\r\n    return { type: SET_WINDOW_INNERWIDTH };\r\n};\r\n\r\nexport const setSocket = socket => {\r\n    return { type: SET_SOCKET, payload: socket };\r\n};\r\n","export const SET_USER_DATA = '[USER]SET_USER_DATA';","import { SET_USER_DATA } from './types';\r\n\r\nexport const setUserData = userData => {\r\n    return { type: SET_USER_DATA, payload: userData };\r\n};","export const SEND_REQUEST = '[ROOMS]SEND_REQUEST'\r\nexport const REQUEST_SUCCESS = '[ROOMS]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[ROOMS]REQUEST_FAILURE';\r\nexport const UPDATE_ROOMS = '[ROOMS]UPDATE_ROOMS';\r\nexport const DELETE_ROOM = '[ROOMS]DELETE_ROOM';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, UPDATE_ROOMS, DELETE_ROOM } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = rooms => {\r\n    return { type: REQUEST_SUCCESS, payload: rooms };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getRooms = socket => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get rooms', ({ success, rooms, error }) => {\r\n            if(success) dispatch(requestSuccess(rooms));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const searchRooms = (socket, search) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        if(search.trim() !== '') {\r\n            socket.emit('search rooms', { search }, ({ success, rooms, error }) => {\r\n                if(success) dispatch(requestSuccess(rooms));\r\n                else dispatch(requestFailure(error));\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateRooms = room => {\r\n    return { type: UPDATE_ROOMS, payload: room };\r\n};\r\n\r\nexport const removeRoom = room => {\r\n    return { type: DELETE_ROOM, payload: room };\r\n};","export const SEND_REQUEST = '[ROOM]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[ROOM]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[ROOM]REQUEST_FAILURE';\r\nexport const RESET_ROOM = '[ROOM]RESET_ROOM';\r\nexport const UPDATE_ROOM = '[ROOM]UPDATE_ROOM';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, RESET_ROOM, UPDATE_ROOM } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = room => {\r\n    return { type: REQUEST_SUCCESS, payload: room };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const resetRoom = () => {\r\n    return { type: RESET_ROOM };\r\n};\r\n\r\nexport const getRoom = (socket, id) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get room', { id }, ({ success, room, error }) => {\r\n            if(success) dispatch(requestSuccess(room));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateRoom = room => {\r\n    return { type: UPDATE_ROOM, payload: room };\r\n};","export const SEND_REQUEST = '[MEMBERS]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[MEMBERS]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[MEMBERS]REQUEST_FAILURE';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = members => {\r\n    return { type: REQUEST_SUCCESS, payload: members };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getRoomMembers = (socket, id) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get room members', { id }, ({ success, members, error }) => {\r\n            if(success) dispatch(requestSuccess(members));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};","export const SEND_REQUEST = '[MESSAGES]SEND_REQUEST';\r\nexport const REQUEST_SUCCESS = '[MESSAGES]REQUEST_SUCCESS';\r\nexport const REQUEST_FAILURE = '[MESSAGES]REQUEST_FAILURE';\r\nexport const NEW_MESSAGE = '[MESSAGES]NEW_MESSAGE';\r\nexport const UPDATE_MESSAGE = '[MESSAGES]UPDATE_MESSAGE';\r\nexport const DELETE_MESSAGE = '[MESSAGES]DELETE_MESSAGE';","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, NEW_MESSAGE, UPDATE_MESSAGE, DELETE_MESSAGE } from './types';\r\n\r\nconst sendRequest = () => {\r\n    return { type: SEND_REQUEST };\r\n};\r\n\r\nconst requestSuccess = messages => {\r\n    return { type: REQUEST_SUCCESS, payload: messages };\r\n};\r\n\r\nconst requestFailure = error => {\r\n    return { type: REQUEST_FAILURE, payload: error };\r\n};\r\n\r\nexport const getMessages = (socket, roomId) => {\r\n    return dispatch => {\r\n        dispatch(sendRequest());\r\n        socket.emit('get messages', { roomId }, ({ success, messages, error }) => {\r\n            if(success) dispatch(requestSuccess(messages));\r\n            else dispatch(requestFailure(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const addNewMessage = newMessage => {\r\n    return { type: NEW_MESSAGE, payload: newMessage };\r\n};\r\n\r\nexport const changeMessage = updateMessage => {\r\n    return { type: UPDATE_MESSAGE, payload: updateMessage };\r\n};\r\n\r\nexport const removeMessage = deleteMessageId => {\r\n    return { type: DELETE_MESSAGE, payload: deleteMessageId };\r\n};","import { useState } from 'react';\r\nimport { FaUser, FaGlobe, FaAt, FaPen, FaKey, FaFileImage, FaEye, FaEyeSlash } from 'react-icons/fa';\r\n\r\nconst Input = ({ item }) => {\r\n    \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    \r\n    return (\r\n        <div className={ item.type === 'checkbox' ? \"checkBox\" : \"formGroup\" }>\r\n            <span className=\"inputIcon\" title={item.title}>\r\n                { item.name === 'name' && <FaUser /> }\r\n                { item.name === 'email' && <FaGlobe /> }\r\n                { item.name === 'username' && <FaAt /> }\r\n                { item.name === 'roomName' && <FaPen /> }\r\n                { new RegExp('password', 'i').test(item.name) && <FaKey /> }\r\n                { new RegExp('picture', 'i').test(item.name) && <FaFileImage /> }\r\n            </span>\r\n            <input \r\n                className={ \r\n                    item.type === 'file' \r\n                        ? \"input file\" \r\n                        : item.type === 'checkbox' ? \"ml-2\" : \"input\" \r\n                } \r\n                type={\r\n                    new RegExp('password', 'i').test(item.name)\r\n                        ? showPassword ? \"text\" : \"password\"\r\n                        : item.type\r\n                } \r\n                placeholder={item.placeholder} \r\n                ref={item.fieldRef}\r\n                accept={ item.type === 'file' && new RegExp('picture', 'i').test(item.name) ? \"image/*\" : null }\r\n            />\r\n            { \r\n                new RegExp('password', 'i').test(item.name)\r\n                    ? showPassword \r\n                        ? <FaEye className=\"eyeIcon\" onClick={() => setShowPassword(false)} /> \r\n                        : <FaEyeSlash className=\"eyeIcon\" onClick={() => setShowPassword(true)} />\r\n                    : null \r\n            }\r\n            { item.type === 'checkbox' &&  <label className=\"lbl\">{item.placeholder}</label> }\r\n        </div>\r\n    );\r\n};\r\n    \r\nexport default Input;","import { useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport './form.css';\r\nimport Input from './input';\r\n\r\nconst MyForm = ({ name, items, submitHandler }) => {\r\n    \r\n    const loading = useSelector(state => state.setting.loadingForm);\r\n\r\n    return (\r\n        <Form className=\"d-flex flex-column\" onSubmit={submitHandler}>\r\n            {\r\n                items.map((item, index) => {\r\n                    return <Input key={index} item={item} />\r\n                })\r\n            }\r\n            <Button type=\"submit\" disabled={loading ? \"disabled\" : \"\"}>{name}</Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default MyForm;","import { useRef, useEffect } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { validateSigninReq, makeToast } from '../../services';\r\nimport { setIsRegistered, setResetPassword } from '../../redux';\r\nimport MyForm from '../form';\r\n\r\nexport const SigninForm = ({ submitHandler }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const usernameRef = useRef('');\r\n    const passwordRef = useRef('');\r\n    const remindMeRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const username = localStorage.getItem('SCA_USERNAME');\r\n        const password = localStorage.getItem('SCA_PASSWORD');\r\n        if(username && password) {\r\n            usernameRef.current.value = username;\r\n            passwordRef.current.value = password;\r\n            remindMeRef.current.checked = true;\r\n        }\r\n    }, []);\r\n\r\n    const signin = e => {\r\n        e.preventDefault();\r\n        const data = { username: usernameRef.current.value.trim(), password: passwordRef.current.value.trim() };\r\n        const { success, message } = validateSigninReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            if(remindMeRef.current.checked) {\r\n                localStorage.setItem('SCA_USERNAME', data.username);\r\n                localStorage.setItem('SCA_PASSWORD', data.password);\r\n            } else {\r\n                localStorage.removeItem('SCA_USERNAME');\r\n                localStorage.removeItem('SCA_PASSWORD');\r\n            }\r\n            submitHandler(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"auth-card\">\r\n                <MyForm \r\n                    name=\"ورود\"\r\n                    items={[\r\n                        { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef },\r\n                        { name: 'password', type: 'password', title: 'رمزعبور', placeholder: 'رمزعبور خود را وارد کنید', fieldRef: passwordRef },\r\n                        { name: 'remindMe', type: 'checkbox', placeholder: 'من را به خاطر بسپار', fieldRef: remindMeRef }\r\n                    ]}\r\n                    submitHandler={signin}\r\n                />\r\n                <div className=\"formActions\">\r\n                    <span className=\"formAction ml-1\" onClick={() => dispatch(setResetPassword(true))}>بازیابی رمزعبور</span>\r\n                    /\r\n                    <span className=\"formAction mr-1\" onClick={() => dispatch(setIsRegistered(false))}>ثبت‌نام</span>\r\n                </div>\r\n            </Card>          \r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { validateSignupReq, makeToast } from '../../services';\r\nimport MyForm from '../form';\r\nimport { setIsRegistered } from '../../redux';\r\n\r\nexport const SignupForm = ({ submitHandler }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const usernameRef = useRef('');\r\n    const passwordRef = useRef('');\r\n    const confirmPasswordRef = useRef('');\r\n    const profilePictureRef = useRef('');\r\n    \r\n    const signup = e => {\r\n        e.preventDefault();\r\n        const data = { \r\n            name: nameRef.current.value.trim(),\r\n            email: emailRef.current.value.trim(),\r\n            username: usernameRef.current.value.trim(),\r\n            password: passwordRef.current.value.trim(),\r\n            confirmPassword: confirmPasswordRef.current.value.trim(),\r\n            profilePicture: profilePictureRef.current.files[0]\r\n        };\r\n        const { success, message } = validateSignupReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else submitHandler(data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"auth-card\">\r\n                <MyForm \r\n                    name=\"ثبت‌نام\"\r\n                    items={[\r\n                        { name: 'name', type: 'text', title: 'نام‌', placeholder: 'نام‌ و نام‌خانوادگی خود را وارد کنید', fieldRef: nameRef },\r\n                        { name: 'email', type: 'email', title: 'ایمیل', placeholder: 'ایمیل خود را وارد کنید', fieldRef: emailRef },\r\n                        { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef },\r\n                        { name: 'password', type: 'password', title: 'رمزعبور', placeholder: 'رمزعبور خود را وارد کنید', fieldRef: passwordRef },\r\n                        { name: 'confirmPassword', type: 'password', title: 'تکرار رمزعبور', placeholder: 'رمزعبور خود را تکرار کنید', fieldRef: confirmPasswordRef },\r\n                        { name: 'profilePicture', type: 'file', title: 'تصویر پروفایل', fieldRef: profilePictureRef }\r\n                    ]}\r\n                    submitHandler={signup}\r\n                /> \r\n                <div className=\"formActions\">\r\n                    <span className=\"formAction\" onClick={() => dispatch(setIsRegistered(true))}>ورود</span>\r\n                </div>\r\n            </Card>          \r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { validateResetPasswordReq, sendResetLink, makeToast } from '../../services';\r\nimport MyForm from '../form';\r\nimport { setResetPassword, setLoadingForm, setIsRegistered } from '../../redux';\r\n\r\nexport const ResetPasswordForm = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const emailRef = useRef('');\r\n    \r\n    const getResetEmail = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const data = { email: emailRef.current.value.trim() };\r\n            const { success, message } = validateResetPasswordReq(data);\r\n            if(!success) makeToast('error', message);\r\n            else {\r\n                dispatch(setLoadingForm(true));\r\n                const response = await sendResetLink(data);\r\n                makeToast('success', response.data.message);\r\n                dispatch(setLoadingForm(false));\r\n            }\r\n        } catch (error) {\r\n            dispatch(setLoadingForm(false));\r\n            makeToast('error', error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"auth-card\">\r\n                <MyForm \r\n                    name=\"بازیابی رمز عبور\"\r\n                    items={[\r\n                        { name: 'email', type: 'email', title: 'ایمیل', placeholder: 'ایمیل خود را وارد کنید', fieldRef: emailRef }\r\n                    ]}\r\n                    submitHandler={getResetEmail}\r\n                /> \r\n                <div className=\"formActions\">\r\n                    <span \r\n                        className=\"formAction\" \r\n                        onClick={() => {\r\n                            dispatch(setIsRegistered(true));\r\n                            dispatch(setResetPassword(false));\r\n                        }}\r\n                    >ورود</span>\r\n                </div>\r\n            </Card>          \r\n        </div>\r\n    );\r\n};","import { FaRegUserCircle, FaRegCommentDots, FaSignOutAlt } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectMenuItem, setSocket, resetRoom } from '../../redux';\r\n\r\nimport './menu.css';\r\n\r\nexport const MenuBar = ({ history }) => {\r\n\r\n    const { selectedMenuItem, socket } = useSelector(state => {\r\n        return { selectedMenuItem: state.setting.selectedMenuItem, socket: state.setting.socket };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        socket.disconnect(0);\r\n        dispatch(setSocket(null));\r\n        dispatch(resetRoom());\r\n        localStorage.removeItem('SCA_TOKEN');\r\n        history.push('/auth');\r\n    };\r\n\r\n    return (\r\n        <div className=\"menu-bar\">\r\n            <h1 className=\"brand\">ShayanChat</h1>\r\n            <div className=\"icons-container\">\r\n                <div \r\n                    className={ selectedMenuItem === 'profile' ? \"icon active\" : \"icon\" } \r\n                    onClick={() => dispatch(selectMenuItem('profile'))}\r\n                    title=\"پروفایل\"\r\n                >\r\n                    <FaRegUserCircle />\r\n                </div>\r\n                <div \r\n                    className={ selectedMenuItem === 'chats' ? \"icon active\" : \"icon\" }\r\n                    onClick={() => dispatch(selectMenuItem('chats'))}    \r\n                    title=\"چت‌ها\"\r\n                >\r\n                    <FaRegCommentDots />\r\n                </div>\r\n                <div className=\"icon\" title=\"خروج\" onClick={logout}>\r\n                    <FaSignOutAlt />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRooms, searchRooms } from '../../redux';\r\n\r\nimport './searchBox.css';\r\n\r\nconst SearchBox = () => {\r\n\r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n    \r\n    const searchRef = useRef('');\r\n\r\n    const search = () => {\r\n        if(searchRef.current.value.trim() === '') dispatch(getRooms(socket));\r\n        else dispatch(searchRooms(socket, searchRef.current.value.trim()));\r\n    };\r\n    \r\n    return (\r\n        <div className=\"search-box\">\r\n            <input className=\"input\" type=\"text\" placeholder=\"جستجو ...\" ref={searchRef} onChange={search} />\r\n            <FaSearch className=\"icon\" onClick={search} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import { FaPlusSquare } from 'react-icons/fa';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setModalContent, setShowModal } from '../../redux';\r\n\r\nconst ChatListHeader = () => {    \r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const showCreateRoomModal = () => {\r\n        dispatch(setModalContent('createNewRoom'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-list-header\">\r\n            <h3>چت‌ها</h3>\r\n            <span className=\"plus-icon\" title=\"ساخت گروه جدید\" onClick={showCreateRoomModal}>\r\n                <FaPlusSquare />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatListHeader;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { ENDPOINT } from '../../services';\r\nimport { getRoom, setShowChats } from '../../redux';\r\n\r\nconst ChatItem = ({ room, active }) => {\r\n\r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const setRoom = () => {\r\n        dispatch(getRoom(socket, room.id));\r\n        dispatch(setShowChats(true));\r\n    };\r\n\r\n    return (\r\n        <div onClick={setRoom} className={ active ? \"chat-item active\" : \"chat-item\"}>\r\n            <div className=\"chat-item-info\">\r\n                <div className=\"picture-container\">\r\n                    <img className=\"picture\" src={ room.roomPicture ? `${ENDPOINT}/roomPictures/${room.roomPicture}` : \"/images/room.jpg\"} alt={room.name} />\r\n                </div>\r\n                <div className=\"text-container\">\r\n                    <span className=\"name\">{room.name}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatItem;","import { Fragment } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport SearchBox from '../searchBox';\r\n\r\nimport './chatList.css';\r\nimport ChatListHeader from './chatListHeader';\r\nimport ChatItem from './chatItem';\r\n\r\nexport const ChatList = () => {\r\n\r\n    const { rooms, currentRoom } = useSelector(state => {\r\n        return { rooms: state.rooms, currentRoom: state.room.data };\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <ChatListHeader />\r\n            <SearchBox />\r\n            <div className={rooms.loading ? \"chat-list text-center\" : \"chat-list\"}>\r\n                {\r\n                    rooms.loading\r\n                        ? \r\n                            <Spinner animation=\"border\" variant=\"secondary\" />\r\n                        :\r\n                            <Fragment>\r\n                                {\r\n                                    rooms.data.map(room => {\r\n                                        return <ChatItem key={room.id} room={room} active={ currentRoom.id === room.id ? true : false } />\r\n                                    })\r\n                                }\r\n                            </Fragment>    \r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};","import { Fragment, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaEllipsisV, FaRegEdit, FaKey, FaRegTrashAlt } from 'react-icons/fa';\r\n\r\nimport { ENDPOINT, makeToast } from '../../services';\r\nimport { setModalContent, setShowModal, setSocket } from '../../redux';\r\nimport './profile.css';\r\n\r\nexport const Profile = ({ history }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const { socket, user } = useSelector(state => {\r\n        return { socket: state.setting.socket, user: state.user};\r\n    });\r\n    const dispatch = useDispatch();\r\n    \r\n    const showEditProfileForm = () => {\r\n        dispatch(setModalContent('editProfile'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const showChangePasswordForm = () => {\r\n        dispatch(setModalContent(\"changePassword\"));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const deleteAccount = () => {\r\n        const isConfirm = window.confirm(\"آیا از حذف حساب کاربری خود اطمینان دارید؟\");\r\n        if(isConfirm) {\r\n            socket.emit('delete acount', ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    localStorage.removeItem('SCA_TOKEN');\r\n                    socket.disconnect(0);\r\n                    dispatch(setSocket(null));\r\n                    history.push('/auth');\r\n                    makeToast('success', message);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"profile-header\">\r\n                <h3>پروفایل</h3>\r\n                <div className=\"actions-container\">\r\n                    <FaEllipsisV className=\"action-icon\" onClick={() => setShow(!show)} />\r\n                    <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                        <span className=\"action\" onClick={showEditProfileForm}><FaRegEdit className=\"ml-2\" />ویرایش پروفایل</span>\r\n                        <span className=\"action\" onClick={showChangePasswordForm}><FaKey className=\"ml-2\" />تغییر رمزعبور</span>\r\n                        <span className=\"action\" onClick={deleteAccount}><FaRegTrashAlt className=\"ml-2\" />حذف حساب کاربری</span>\r\n                    </div>\r\n                </div>       \r\n            </div>\r\n            <div className=\"profile-info\">\r\n                <div className=\"picture-container\">\r\n                    <img \r\n                        className=\"picture\" \r\n                        src={ user.profilePicture ? `${ENDPOINT}/profilePictures/${user.profilePicture}` : '/images/user.png' } \r\n                        alt={user.name} \r\n                    />\r\n                </div>\r\n                <span className=\"name\">{user.name}</span>\r\n            </div>\r\n            <div className=\"profile-detail\">\r\n                <div className=\"header\">\r\n                    <span>مشخصات</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">نام</span>\r\n                    <span>{user.name}</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">ایمیل</span>\r\n                    <span>{user.email}</span>                    \r\n                </div>\r\n                <div className=\"item\">\r\n                    <span className=\"text-muted\">نام‌کاربری</span>\r\n                    <span>{user.username}</span>                    \r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { FaAngleRight, FaEllipsisV } from 'react-icons/fa';\r\nimport { setShowChats, setShowModal, setModalContent } from '../../redux';\r\nimport { ENDPOINT } from '../../services';\r\n\r\nconst ChatContentHeader = () => {\r\n\r\n    const { windowInnerWidth, room } = useSelector(state => {\r\n        return { windowInnerWidth: state.setting.windowInnerWidth, room: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const showRoomInfo = () => {\r\n        dispatch(setModalContent('roomInfo'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"right-side\">\r\n                { windowInnerWidth<768 && <FaAngleRight className=\"back-icon\" onClick={() => dispatch(setShowChats(false))} /> }\r\n                <img \r\n                    className=\"picture\"\r\n                    src={ room.roomPicture ? `${ENDPOINT}/roomPictures/${room.roomPicture}` : '/images/room.jpg'}\r\n                    alt={room.name}\r\n                />\r\n                <span className=\"room-name\">{room.name}</span>\r\n            </div>\r\n            <FaEllipsisV onClick={showRoomInfo} className=\"ellipsis-icon\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentHeader;","import { useState } from 'react';\r\nimport { FaEllipsisV, FaRegClock } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setEditMessageId, setSendMessageType, setEditMessageText } from '../../redux';\r\nimport { ENDPOINT } from '../../services';\r\n\r\nconst Message = ({ message }) => {\r\n    \r\n    const [show, setShow] = useState(false);\r\n\r\n    const { socket, room } = useSelector(state => { \r\n        return { socket: state.setting.socket, room: state.room.data }\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const editMessage = () => {\r\n        dispatch(setSendMessageType(1));\r\n        dispatch(setEditMessageText(message.text))\r\n        dispatch(setEditMessageId(message.id));\r\n        setShow(false);\r\n    };\r\n\r\n    const deleteMessage = () => {\r\n        const isConfirm = window.confirm('آیا از حذف پیام اطمینان دارید؟');\r\n        if(isConfirm) socket.emit('delete message', { roomId: room.id, messageId: message.id });\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"message-container\">\r\n            <img \r\n                className=\"picture ml-2\" \r\n                src={ message.sender.profilePicture ? `${ENDPOINT}/profilePictures/${message.sender.profilePicture}` : \"/images/user.png\"} \r\n                alt={ message.sender.name } \r\n            />\r\n            <div className={ message.isOwner ? \"message-text me\" : \"message-text you\" }>\r\n                <span className=\"name\">{ message.sender.name }</span>\r\n                <span className=\"message\">{message.text}</span>\r\n                <span className=\"time\"><FaRegClock /> {message.date.split('-')[1]}</span>\r\n            </div>\r\n            {\r\n                message.isOwner &&\r\n                <div className=\"actions-container\">\r\n                    <FaEllipsisV style={{ cursor: 'pointer' }} onClick={() => setShow(!show)} />\r\n                    <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                        <span className=\"action\" onClick={editMessage}>ویرایش</span>\r\n                        <span className=\"action\" onClick={deleteMessage}>حذف</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>          \r\n    );\r\n};\r\n\r\nexport default Message;","import Message from './message';\r\n\r\nconst Messages = ({ date, messages }) => (\r\n    <div>\r\n        <div className=\"text-center text-muted my-2\"><span className=\"date-span\">{date}</span></div>\r\n        {\r\n            messages.map(message => <Message key={message.id} message={message} />)\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default Messages;","import { Fragment, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { Loading } from '../';\r\nimport { getMessages, setSendMessageType, addNewMessage, changeMessage, removeMessage } from '../../redux';\r\nimport Messages from './messages';\r\n\r\nconst ChatContentBody = () => {\r\n    \r\n    const chatBodyRef = useRef();\r\n    const { socket, messages, user, room, sendMessageType, editMessageText } = useSelector(state => {\r\n        return { \r\n            socket: state.setting.socket,\r\n            messages: state.messages, \r\n            user: state.user,\r\n            room: state.room, \r\n            sendMessageType: state.setting.sendMessageType, \r\n            editMessageText: state.setting.editMessageText \r\n        };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) dispatch(getMessages(socket, room.data.id));  \r\n        return () => {\r\n            dispatch(setSendMessageType(0));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            socket.on('new message', async ({ roomId, newMessage, updateMessage, deleteMessage }) => {\r\n                try {\r\n                    if(roomId.toString() === room.data.id.toString()) {\r\n                        if(newMessage) {\r\n                            newMessage.isOwner = (newMessage.sender.email===user.email) ? true : false;\r\n                            dispatch(addNewMessage(newMessage));\r\n                            chatBodyRef.current.scroll(0, chatBodyRef.current.scrollHeight);\r\n                        } else if(updateMessage) {\r\n                            updateMessage.isOwner = (updateMessage.sender.email===user.email) ? true : false;\r\n                            dispatch(changeMessage(updateMessage));\r\n                        } else if(deleteMessage) dispatch(removeMessage(deleteMessage));\r\n                    }\r\n                } catch(error) {}\r\n            });\r\n        }\r\n        return () => {\r\n            if(socket) socket.off('new message');\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [socket]);\r\n\r\n    useEffect(() => {\r\n        chatBodyRef.current.scroll(0, chatBodyRef.current.scrollHeight);\r\n    }, [messages.data]);\r\n\r\n    return (\r\n        <div ref={chatBodyRef} className=\"body\">\r\n            {\r\n                messages.loading ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            {\r\n                                messages.data && \r\n                                Object.keys(messages.data).map((date, index) => {\r\n                                    return <Messages key={index} date={date} messages={messages.data[date]} />\r\n                                })\r\n                            }\r\n                            {\r\n                                sendMessageType === 1 &&\r\n                                <div className=\"edit-box\">\r\n                                    <FaTimes style={{ cursor: \"pointer\" }} onClick={() => dispatch(setSendMessageType(0))} />\r\n                                    <span className=\"edit-box-text text-muted\">{editMessageText}</span>\r\n                                </div>\r\n                            } \r\n                        </Fragment>    \r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentBody;","import { useRef, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaPaperPlane, FaGrin } from 'react-icons/fa';\r\nimport { Button } from 'react-bootstrap';\r\nimport Picker from 'emoji-picker-react';\r\n\r\nimport { makeToast } from '../../services';\r\nimport { getRoom, setSendMessageType, setLoadingForm } from '../../redux';\r\n\r\nconst ChatContentFooter = () => {\r\n    \r\n    const messageRef = useRef('');\r\n    const [showPicker, setShowPicker] = useState(false);\r\n\r\n    const { socket, loadingForm, room, sendMessageType, editMessageId, editMessageText } = useSelector(state => {\r\n        return { \r\n            socket: state.setting.socket,\r\n            loadingForm: state.setting.loadingForm,\r\n            room: state.room.data, \r\n            sendMessageType: state.setting.sendMessageType,\r\n            editMessageId: state.setting.editMessageId, \r\n            editMessageText: state.setting.editMessageText };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(sendMessageType === 1 && messageRef.current) messageRef.current.value = editMessageText;\r\n        else if(messageRef.current) messageRef.current.value = '';\r\n        // eslint-disable-next-line\r\n    }, [sendMessageType, editMessageId]);\r\n\r\n    const joinToGroup = () => {\r\n        socket.emit('join room', ({ id: room.id }), ({ success, message }) => {\r\n            if(!success) makeToast('error', message);\r\n            else makeToast('success', message);\r\n            dispatch(getRoom(socket, room.id ));\r\n        });\r\n    };\r\n\r\n    const keyPressHandler = e => {\r\n        e.key === 'Enter' && sendMessage(); \r\n    };\r\n\r\n    const sendMessage = () => {\r\n        const message = messageRef.current.value.trim();\r\n        if(message !== '') {\r\n            dispatch(setLoadingForm(true));\r\n            if(sendMessageType === 0) socket.emit('send message', { message, roomId: room.id });\r\n            else socket.emit('edit message', { message, roomId: room.id, messageId: editMessageId });\r\n            dispatch(setSendMessageType(0));\r\n            setShowPicker(false);\r\n            messageRef.current.value = '';\r\n            setTimeout(() => {\r\n                dispatch(setLoadingForm(false));\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            {\r\n                room.isJoined \r\n                    ?\r\n                        <div className={ loadingForm ? \"chat-box disable\" : \"chat-box\"}>\r\n                            <input className=\"input\" onKeyPress={keyPressHandler} ref={messageRef} />\r\n                            <FaGrin className=\"mx-1\" style={{ cursor: \"pointer\" }} onClick={() => setShowPicker(!showPicker)} />\r\n                            <span className={showPicker ? \"picker\" : \"d-none\"}>\r\n                                <Picker \r\n                                    disableSearchBar={true}\r\n                                    onEmojiClick={(e, emojiObj) => messageRef.current.value += emojiObj.emoji }   \r\n                                />\r\n                            </span>\r\n                            <FaPaperPlane className=\"mx-1\" style={{cursor: 'pointer'}} onClick={sendMessage} />\r\n                        </div>\r\n                    :\r\n                        <Button className=\"w-100\" onClick={joinToGroup}>عضویت در گروه</Button>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatContentFooter;","import './chatContent.css';\r\nimport ChatContentHeader from './header';\r\nimport ChatContentBody from './body';\r\nimport ChatContentFooter from './footer';\r\n\r\nexport const ChatContent = () => {\r\n    return (\r\n        <div className=\"chat-content-container\">\r\n            <ChatContentHeader />\r\n            <ChatContentBody />\r\n            <ChatContentFooter />\r\n        </div>\r\n    );\r\n};","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateCreateRoomReq, makeToast } from '../../services';\r\nimport { setLoadingForm, setShowModal, updateRooms } from '../../redux';\r\n\r\nconst CreateNewRoom = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const roomNameRef = useRef('');\r\n    const roomPictureRef = useRef('');\r\n\r\n    const createNewRoom = e => {\r\n        e.preventDefault();\r\n        const data = { \r\n            roomName: roomNameRef.current.value.trim(), \r\n            roomPicture: {\r\n                data: roomPictureRef.current.files[0],\r\n                name: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].name : null,\r\n                mimetype: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].type : null,\r\n                size: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].size : null\r\n            } \r\n        };\r\n        const { success, message } = validateCreateRoomReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('create new room', data, ({ success, message, roomData }) => {\r\n                if(success) {\r\n                    dispatch(setShowModal(false));\r\n                    dispatch(updateRooms(roomData));\r\n                    makeToast('success', message);\r\n                }\r\n                else makeToast('error', message);\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ایجاد گروه جدید</h6>\r\n            <MyForm \r\n                name='ایجاد گروه جدید'\r\n                items={[\r\n                    { name: 'roomName', type: 'text', title: 'نام گروه', placeholder: 'نام گروه را وارد کنید', fieldRef: roomNameRef },\r\n                    { name: 'roomPicture', type: 'file', title: 'تصویر گروه', fieldRef: roomPictureRef }\r\n                ]}\r\n                submitHandler={createNewRoom}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateNewRoom;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateEditProfileReq, makeToast } from '../../services';\r\nimport { setShowModal, setUserData, setLoadingForm } from '../../redux';\r\n\r\nconst EditProfile = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const usernameRef = useRef('');\r\n    \r\n    const editProfile = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            name: nameRef.current.value.trim(),\r\n            email: emailRef.current.value.trim(),\r\n            username: usernameRef.current.value.trim()\r\n        };\r\n        const { success, message } = validateEditProfileReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else if(data.name || data.email || data.username) {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('edit profile', data, ({ success, message, user }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setUserData(user));\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ویرایش پروفایل</h6>\r\n            <MyForm \r\n                name=\"ویرایش\"\r\n                items={[\r\n                    { name: 'name', type: 'text', title: 'نام‌', placeholder: 'نام‌ خود را وارد کنید', fieldRef: nameRef },\r\n                    { name: 'email', type: 'email', title: 'ایمیل', placeholder: 'ایمیل خود را وارد کنید', fieldRef: emailRef },\r\n                    { name: 'username', type: 'text', title: 'نام‌کاربری', placeholder: 'نام‌کاربری خود را وارد کنید', fieldRef: usernameRef }\r\n                ]}\r\n                submitHandler={editProfile}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditProfile;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateChangePasswordReq, makeToast } from '../../services';\r\nimport { setShowModal, setLoadingForm } from '../../redux';\r\n\r\nconst ChangePassword = () => {\r\n    \r\n    const socket = useSelector(state => state.setting.socket);\r\n    const dispatch = useDispatch();\r\n\r\n    const oldPasswordRef = useRef('');\r\n    const newPasswordRef = useRef('');\r\n    const confirmNewPasswordRef = useRef('');\r\n\r\n    const changePassword = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            oldPassword: oldPasswordRef.current.value.trim(),\r\n            newPassword: newPasswordRef.current.value.trim(),\r\n            confirmNewPassword: confirmNewPasswordRef.current.value.trim()\r\n        };\r\n        const { success, message } = validateChangePasswordReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else {\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('change password', data, ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">تغییر رمزعبور</h6>\r\n            <MyForm \r\n                name=\"تغییر رمزعبور\"\r\n                items={[\r\n                    { name: 'oldPassword', type: 'password', title: 'رمزعبور فعلی', placeholder: 'رمزعبور فعلی را وارد کنید', fieldRef: oldPasswordRef },\r\n                    { name: 'newPassword', type: 'password', title: 'رمزعبور جدید', placeholder: 'رمزعبور جدید را وارد کنید', fieldRef: newPasswordRef },\r\n                    { name: 'confirmNewPassword', type: 'password', title: 'تکرار رمزعبور جدید', placeholder: 'رمزعبور جدید را تکرار کنید', fieldRef: confirmNewPasswordRef }\r\n                ]}\r\n                submitHandler={changePassword}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChangePassword;","import { ENDPOINT } from '../../services';\r\nimport { FaStar } from 'react-icons/fa';\r\n\r\nconst Member = ({ member }) => {\r\n    return (\r\n        <div className=\"member-container\">\r\n            <div className=\"picture-container\">\r\n                <img \r\n                    className=\"picture\"\r\n                    src={ member.profilePicture ? `${ENDPOINT}/profilePictures/${member.profilePicture}` : '/images/user.png' }\r\n                    alt={ member.name }\r\n                />\r\n                <span className={ member.isOnline ? \"online-badge bg-success\" : \"online-badge bg-secondary\"}></span>\r\n            </div>\r\n            <div className=\"d-flex flex-column\">\r\n                <span>{member.name} { member.isOwner && <FaStar /> }</span>\r\n                <span className=\"text-muted small\">{ member.isOnline ? 'Online' : member.lastSeen }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Member;","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { FaEllipsisV, FaRegEdit, FaRegTrashAlt, FaSignOutAlt } from 'react-icons/fa';\r\nimport { getRoomMembers, removeRoom, setLoadingPage } from '../../redux';\r\nimport { ENDPOINT, makeToast } from '../../services';\r\n\r\nimport './roomInfo.css';\r\nimport Member from './member';\r\nimport { setModalContent, setShowModal, resetRoom } from '../../redux';\r\n\r\nconst RoomInfo = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const { socket, room, members } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room, members: state.members };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(socket) dispatch(getRoomMembers(socket, room.data.id));\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const showEditGroup = () => {\r\n        dispatch(setModalContent('editGroup'));\r\n        dispatch(setShowModal(true));\r\n    };\r\n\r\n    const leaveGroup = () => {\r\n        socket.emit('leave room', ({ id: room.data.id }), ({ success, message }) => {\r\n            if(!success) makeToast('error', message);\r\n            else {\r\n                makeToast(\"success\", message);\r\n                dispatch(removeRoom(room.data));\r\n                dispatch(setShowModal(false));\r\n                dispatch(resetRoom());\r\n            }\r\n        });\r\n    };\r\n\r\n    const removeGroup = () => {\r\n        const isConfirm = window.confirm('آیا از حذف گروه اطمینان دارید؟');\r\n        if(isConfirm) {\r\n            dispatch(setShowModal(false));\r\n            dispatch(setLoadingPage(true));\r\n            socket.emit('delete room', ({ id: room.data.id }), ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    dispatch(removeRoom(room.data));\r\n                    dispatch(resetRoom({}));\r\n                    makeToast('success', message);\r\n                }\r\n                dispatch(setLoadingPage(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"room-info-modal\">\r\n            <div className=\"header\">\r\n                <img \r\n                    className=\"room-picture\"\r\n                    src={ room.data.roomPicture ? `${ENDPOINT}/roomPictures/${room.data.roomPicture}` : '/images/room.jpg' }\r\n                    alt={ room.data.name }\r\n                />\r\n                <div className=\"d-flex flex-column text-right\">\r\n                    <span className=\"font-weight-bold\">{room.data.name}</span>\r\n                    <span className=\"text-muted small\">{room.data.id}</span>\r\n                </div>\r\n                {\r\n                    room.data.isJoined &&\r\n                    <div className=\"actions-container\">\r\n                        <FaEllipsisV className=\"action-icon\" onClick={() => setShow(!show)} />\r\n                        <div className={ show ? \"actions-popover\" : \"d-none\" }>\r\n                            { room.data.isOwner && <span className=\"action\" onClick={showEditGroup}><FaRegEdit className=\"ml-2\" />ویرایش گروه</span>}\r\n                            { room.data.isOwner && <span className=\"action\" onClick={removeGroup}><FaRegTrashAlt className=\"ml-2\" />حذف گروه</span>}\r\n                            { !room.data.isOwner && <span className=\"action\" onClick={leaveGroup}><FaSignOutAlt className=\"ml-2\" />خروج از گروه</span>}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                <h6 className=\"px-3 py-2\">اعضای گروه</h6>\r\n                <div className=\"scroller\">\r\n                    {\r\n                        members.loading\r\n                            ?\r\n                            <div className=\"d-flex justify-content-center align-items-center w-100 h-100\">\r\n                                <Spinner animation=\"border\" variant=\"secondary\" />\r\n                            </div>\r\n                            :\r\n                            members.data.map((member, index) => {\r\n                                return <Member key={index} member={member} />\r\n                            })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomInfo;","import { useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport MyForm from '../form';\r\nimport { validateEditGroupReq, makeToast } from '../../services';\r\nimport { setShowModal, setLoadingForm } from '../../redux';\r\n\r\nconst EditGroup = () => {\r\n    \r\n    const { socket, room } = useSelector(state => {\r\n        return { socket: state.setting.socket, room: state.room.data };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    const nameRef = useRef('');\r\n    const roomPictureRef = useRef();\r\n\r\n    const editGroup = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            id: room.id,\r\n            roomName: nameRef.current.value.trim(),\r\n            roomPicture: {\r\n                data: roomPictureRef.current.files[0],\r\n                name: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].name : null,\r\n                mimetype: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].type : null,\r\n                size: roomPictureRef.current.files[0] ? roomPictureRef.current.files[0].size : null\r\n            }\r\n        };\r\n        const { success, message } = validateEditGroupReq(data);\r\n        if(!success) makeToast('error', message);\r\n        else if(data.roomName || data.roomPicture.data){\r\n            dispatch(setLoadingForm(true));\r\n            socket.emit('edit room', data, ({ success, message }) => {\r\n                if(!success) makeToast('error', message);\r\n                else {\r\n                    makeToast('success', message);\r\n                    dispatch(setShowModal(false));\r\n                }\r\n                dispatch(setLoadingForm(false));\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-form\">\r\n            <h6 className=\"header\">ویرایش گروه</h6>\r\n            <MyForm \r\n                name=\"ویرایش\"\r\n                items={[\r\n                    { name: 'roomName', type: 'text', title: 'نام‌ گروه', placeholder: 'نام‌ گروه را وارد کنید', fieldRef: nameRef },\r\n                    { name: 'roomPicture', type: 'file', title: 'تصویر گروه', fieldRef: roomPictureRef }\r\n                ]}\r\n                submitHandler={editGroup}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditGroup;","import { Modal } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setShowModal } from '../../redux';\r\nimport './modal.css';\r\nimport CreateNewRoom from'./createRoom';\r\nimport EditProfile from './editProfile';\r\nimport ChangePassword from './changePassword';\r\nimport RoomInfo from '../roomInfo';\r\nimport EditGroup from './editGroup';\r\n\r\nexport const MyModal = () => {\r\n    \r\n    const { showModal, modalContent } = useSelector(state => {\r\n        return { showModal: state.setting.showModal, modalContent: state.setting.modalContent };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Modal show={showModal} onHide={() => dispatch(setShowModal(false))} centered>\r\n            <div className=\"p-3\">\r\n                { modalContent === 'createNewRoom' && <CreateNewRoom /> }\r\n                { modalContent === 'editProfile' && <EditProfile /> }\r\n                { modalContent === 'changePassword' && <ChangePassword /> }\r\n                { modalContent === 'roomInfo' && <RoomInfo /> }\r\n                { modalContent === 'editGroup' && <EditGroup /> }\r\n            </div>\r\n        </Modal>\r\n    );\r\n};","import { useEffect } from 'react';\r\n\r\nimport { Loading } from '../components';\r\nimport { verifyUser } from '../services';\r\n\r\nexport const RootPage = ({ history }) => {\r\n    \r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success }) => {\r\n                if(success) history.push('/chat');\r\n                else history.push('/auth');\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return <Loading />\r\n};","import { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { SigninForm, SignupForm, ResetPasswordForm, Loading } from '../components';\r\nimport { signin, signup, verifyUser, makeToast } from '../services';\r\nimport { setLoadingPage, setLoadingForm, setIsRegistered } from '../redux';\r\n\r\nexport const AuthPage = ({ history }) => {\r\n    \r\n    const { loadingPage, isRegister, resetPassword } = useSelector(state => {\r\n        return { loadingPage: state.setting.loadingPage, isRegister: state.setting.isRegister, resetPassword: state.setting.resetPassword };\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success }) => {\r\n                if(success) history.push('/chat'); \r\n                setTimeout(() => {\r\n                    dispatch(setLoadingPage(false));\r\n                }, 1000);\r\n            });\r\n\r\n        return () => {\r\n            dispatch(setLoadingPage(true));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submitHandler = async data => {\r\n        try {\r\n            dispatch(setLoadingForm(true));\r\n            let response;\r\n            if(data.confirmPassword) {\r\n                response = await signup(data);\r\n                dispatch(setIsRegistered(true));\r\n            } else {\r\n                response = await signin(data);\r\n                localStorage.setItem('SCA_TOKEN', response.data.token);\r\n                history.push('/chat');\r\n            }\r\n            dispatch(setLoadingForm(false));\r\n            makeToast('success', response.data.message);\r\n        } catch (error) {\r\n            dispatch(setLoadingForm(false));\r\n            makeToast('error', error.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center text-center justify-content-center h-100\">\r\n            {\r\n                loadingPage\r\n                    ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            <h1 className=\"appBrand mb-3\">ShayanChat</h1>\r\n                            <h3 className=\"mb-3 pb-3\">{ resetPassword ? 'بازیابی رمزعبور' : isRegister ? 'ورود' : 'عضویت' }</h3>\r\n                            {\r\n                                resetPassword\r\n                                    ? <ResetPasswordForm />\r\n                                    : isRegister \r\n                                        ? <SigninForm submitHandler={submitHandler} />\r\n                                        : <SignupForm submitHandler={submitHandler} />\r\n                            }\r\n                        </Fragment>\r\n            }\r\n        </div>\r\n    );\r\n};","import { Fragment, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\nimport io from 'socket.io-client';\r\n\r\nimport { MenuBar, ChatList, Profile, ChatContent, Loading } from '../components';\r\nimport { verifyUser } from '../services';\r\nimport { setLoadingPage, setSocket, setUserData, setInnerWidth, setShowChats, updateRoom, updateRooms, getRooms } from '../redux';\r\n\r\nexport const ChatPage = ({ history }) => {\r\n\r\n    const { loadingPage, selectedMenuItem, showChats, room, windowInnerWidth, socket } = useSelector(state => {\r\n        return { \r\n            loadingPage: state.setting.loadingPage,\r\n            selectedMenuItem: state.setting.selectedMenuItem,\r\n            showChats: state.setting.showChats,\r\n            room: state.room,\r\n            windowInnerWidth: state.setting.windowInnerWidth,\r\n            socket: state.setting.socket \r\n        };\r\n    });\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleWindowSize = () => {\r\n        dispatch(setInnerWidth());\r\n    };\r\n\r\n    useEffect(() => {\r\n        verifyUser()\r\n            .then(({ success, user }) => {\r\n                if(!success) history.push('/auth'); \r\n                else {\r\n                    dispatch(setUserData(user));\r\n                    if(!socket) dispatch(setSocket(io({query: {token: localStorage.getItem('SCA_TOKEN')}})));\r\n                    setTimeout(() => {\r\n                        dispatch(setLoadingPage(false));\r\n                    }, 1000);\r\n                    window.addEventListener('resize', handleWindowSize);\r\n                }\r\n            });\r\n\r\n        return () => {\r\n            dispatch(setLoadingPage(true));\r\n            window.removeEventListener('resize', handleWindowSize);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(socket) {\r\n            dispatch(getRooms(socket));\r\n            socket.emit('join to rooms');\r\n            socket.on('change room data', ({ room }) => {\r\n                dispatch(updateRoom(room));\r\n                dispatch(updateRooms(room));\r\n            }); \r\n        }\r\n        \r\n        return () => {\r\n            if(socket) socket.off('change room data');\r\n        };\r\n        // eslint-disable-next-line\r\n    }, [socket]);\r\n\r\n    return (\r\n        <div className=\"d-flex h-100\">\r\n            {\r\n                loadingPage\r\n                    ?\r\n                        <Loading />\r\n                    :\r\n                        <Fragment>\r\n                            {\r\n                                windowInnerWidth>768\r\n                                    ? <MenuBar history={history} />\r\n                                    : !showChats &&  <MenuBar history={history} />\r\n                            }\r\n                            <Row className=\"h-100 w-100 m-0\">\r\n                                <Col className={ (showChats && windowInnerWidth<768) ? \"d-none\" : \"p-0\" } lg={4} md={5}>\r\n                                    <div className=\"chat-right-side-bar\">\r\n                                        { selectedMenuItem === 'profile' && <Profile history={history} /> }\r\n                                        { selectedMenuItem === 'chats' && <ChatList /> }\r\n                                    </div>\r\n                                </Col>\r\n                                <Col className={windowInnerWidth>768 ? \"p-0 bg-light\" : showChats ? \"p-0 bg-light\" : \"d-none\"} lg={8} md={7}>\r\n                                    {\r\n                                        room.loading\r\n                                            ?\r\n                                                <Loading />\r\n                                            :\r\n                                                !room.data.name \r\n                                                    ?\r\n                                                        <div className=\"empty-chat-box\">\r\n                                                            { windowInnerWidth<768 && <FaAngleRight className=\"back-icon\" onClick={() => dispatch(setShowChats(false))} /> }\r\n                                                            { room.error ? room.error : \"ShayanChat\" }\r\n                                                        </div>\r\n                                                    : <ChatContent />\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Fragment>\r\n            }\r\n        </div>\r\n    );\r\n};","import { SET_LOADING_PAGE, SET_LOADING_FORM, SELECT_MENU_ITEM, SET_SHOW_MODAL, SET_MODAL_CONTENT, SET_SHOW_CHATS, SET_SEND_MESSAGE_TYPE, SET_EDIT_MESSAGE_ID, SET_EDIT_MESSAGE_TEXT, SET_WINDOW_INNERWIDTH, SET_IS_REGISTERED, SET_RESET_PASSWORD, SET_SOCKET } from './types';\r\n\r\nconst initialState = {\r\n    loadingPage: true,\r\n    loadingForm: false,\r\n    selectedMenuItem: 'chats',\r\n    showModal: false,\r\n    modalContent: '',\r\n    isRegister: true,\r\n    resetPassword: false,\r\n    showChats: false,\r\n    sendMessageType: 0,\r\n    editMessageId: 0,\r\n    editMessageText: '',\r\n    windowInnerWidth: window.innerWidth,\r\n    socket: null\r\n};\r\n\r\nconst settingReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_LOADING_PAGE: return { ...state, loadingPage: action.payload };\r\n        case SET_LOADING_FORM: return { ...state, loadingForm: action.payload };\r\n        case SELECT_MENU_ITEM: return { ...state, selectedMenuItem: action.payload };\r\n        case SET_SHOW_MODAL: return { ...state, showModal: action.payload };\r\n        case SET_MODAL_CONTENT: return { ...state, modalContent: action.payload };\r\n        case SET_SHOW_CHATS: return { ...state, showChats: action.payload };\r\n        case SET_IS_REGISTERED: return { ...state, isRegister: action.payload };\r\n        case SET_RESET_PASSWORD: return { ...state, resetPassword: action.payload };\r\n        case SET_SEND_MESSAGE_TYPE: return { ...state, sendMessageType: action.payload };\r\n        case SET_EDIT_MESSAGE_ID: return { ...state, editMessageId: action.payload };\r\n        case SET_EDIT_MESSAGE_TEXT: return { ...state, editMessageText: action.payload };\r\n        case SET_WINDOW_INNERWIDTH: return { ...state, windowInnerWidth: window.innerWidth };\r\n        case SET_SOCKET: return { ...state, socket: action.payload };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default settingReducer;","import { SET_USER_DATA } from './types';\r\n\r\nconst initialState = {};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: return action.payload;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, UPDATE_ROOMS, DELETE_ROOM } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n};\r\n\r\nconst roomsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: [], error: action.payload };\r\n        case UPDATE_ROOMS: \r\n            const roomIndex = state.data.findIndex(room => room.id.toString() === action.payload.id.toString());\r\n            if(roomIndex !== -1) {\r\n                if(action.payload.name) state.data[roomIndex].name = action.payload.name;\r\n                if(action.payload.roomPicture) state.data[roomIndex].roomPicture = action.payload.roomPicture; \r\n            } else state.data.push(action.payload);\r\n            return { loading: false, data: state.data, error: '' }; \r\n        case DELETE_ROOM: \r\n            const deleteRoomIndex = state.data.findIndex(room => room.id.toString() === action.payload.id.toString());\r\n            if(deleteRoomIndex !== -1) state.data.splice(deleteRoomIndex, 1);\r\n            return { loading: false, data: state.data, error: '' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomsReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, RESET_ROOM, UPDATE_ROOM } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: {},\r\n    error: ''\r\n};\r\n\r\nconst roomReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: {}, error: action.payload };\r\n        case RESET_ROOM: return { loading: false, data: {}, error: '' };\r\n        case UPDATE_ROOM: \r\n            if(state.data.id && state.data.id.toString()===action.payload.id.toString()) {\r\n                if(action.payload.name) state.data.name = action.payload.name;\r\n                if(action.payload.roomPicture) state.data.roomPicture = action.payload.roomPicture;    \r\n            }\r\n            return { loading: false, data: state.data, error: '' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: [],\r\n    error: ''\r\n};\r\n\r\nconst roomReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: [], error: action.payload };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default roomReducer;","import { SEND_REQUEST, REQUEST_SUCCESS, REQUEST_FAILURE, NEW_MESSAGE, UPDATE_MESSAGE, DELETE_MESSAGE } from './types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    data: {},\r\n    error: ''\r\n};\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_REQUEST: return { ...state, loading: true };\r\n        case REQUEST_SUCCESS: return { loading: false, data: action.payload, error: '' };\r\n        case REQUEST_FAILURE: return { loading: false, data: {}, error: action.payload };\r\n        case NEW_MESSAGE:\r\n            const newMessageDate = action.payload.date.split('-')[0]; \r\n            if(!state.data[newMessageDate]) state.data[newMessageDate] = [];             \r\n            state.data[newMessageDate].push(action.payload);\r\n            return { loading: false, data: state.data, error: '' };\r\n        case UPDATE_MESSAGE:\r\n            const updateMessageDate = action.payload.date.split('-')[0];\r\n            const messageIndex = state.data[updateMessageDate].findIndex(message => message.id.toString() === action.payload.id.toString());\r\n            if(messageIndex !== -1) state.data[updateMessageDate][messageIndex] = action.payload;\r\n            return { loading: false, data: state.data, error: '' };\r\n        case DELETE_MESSAGE:\r\n            const deleteMessageDate = action.payload.date.split('-')[0];\r\n            const deleteMessageIndex = state.data[deleteMessageDate].findIndex(message => message.id.toString() === action.payload.id.toString());\r\n            if(deleteMessageIndex !== -1) state.data[deleteMessageDate].splice(deleteMessageIndex, 1);\r\n            if(state.data[deleteMessageDate].length === 0) delete state.data[deleteMessageDate];\r\n            return { loading: false, data: state.data, error: '' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default messagesReducer;","import { combineReducers } from 'redux';\r\n\r\nimport settingReducer from './setting/reducer';\r\nimport userReducer from './user/reducer';\r\nimport roomsReducer from './rooms/reducer';\r\nimport roomReducer from './room/reducer';\r\nimport membersReducer from './members/reducer';\r\nimport messagesReducer from './messages/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    setting: settingReducer,\r\n    user: userReducer,\r\n    rooms: roomsReducer,\r\n    room: roomReducer,\r\n    members: membersReducer,\r\n    messages: messagesReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { RootPage, AuthPage, ChatPage } from './pages';\nimport { MyModal } from './components';\nimport store from './redux/store';\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={RootPage} />\n        <Route path=\"/auth\" component={AuthPage} />\n        <Route path=\"/chat\" component={ChatPage} />\n      </Switch>\n      <MyModal />\n    </BrowserRouter>  \n  </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}